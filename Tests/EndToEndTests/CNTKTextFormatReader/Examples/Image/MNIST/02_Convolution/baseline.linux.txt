=== Running /home/alrezni/src/cntk_git/build/release/bin/cntk configFile=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config/02_Convolution.cntk currentDirectory=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData RunDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu DataDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData ConfigDir=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config OutputDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu DeviceId=0 timestamping=true train=[SGD=[maxEpochs=3]] imageLayout="cudnn"
-------------------------------------------------------------------
Build info: 

		Built time: Apr 26 2016 17:04:28
		Last modified date: Tue Apr  5 16:01:37 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: acml
		CUDA_PATH: /usr/local/cuda-7.0
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: alrezni/examples_text
		Build SHA1: 780d0d14f555f568d393793562f374f04af79a73
		Built by alrezni on atleneu04
		Build Path: /home/alrezni/src/cntk_git
-------------------------------------------------------------------
Changed current directory to /tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData
04/27/2016 16:24:14: -------------------------------------------------------------------
04/27/2016 16:24:14: Build info: 

04/27/2016 16:24:14: 		Built time: Apr 26 2016 17:04:28
04/27/2016 16:24:14: 		Last modified date: Tue Apr  5 16:01:37 2016
04/27/2016 16:24:14: 		Build type: release
04/27/2016 16:24:14: 		Build target: GPU
04/27/2016 16:24:14: 		With 1bit-SGD: yes
04/27/2016 16:24:14: 		Math lib: acml
04/27/2016 16:24:14: 		CUDA_PATH: /usr/local/cuda-7.0
04/27/2016 16:24:14: 		CUB_PATH: /usr/local/cub-1.4.1
04/27/2016 16:24:14: 		CUDNN_PATH: /usr/local/cudnn-4.0
04/27/2016 16:24:14: 		Build Branch: alrezni/examples_text
04/27/2016 16:24:14: 		Build SHA1: 780d0d14f555f568d393793562f374f04af79a73
04/27/2016 16:24:14: 		Built by alrezni on atleneu04
04/27/2016 16:24:14: 		Build Path: /home/alrezni/src/cntk_git
04/27/2016 16:24:14: -------------------------------------------------------------------

04/27/2016 16:24:14: Running on localhost at 2016/04/27 16:24:14
04/27/2016 16:24:14: Command line: 
/home/alrezni/src/cntk_git/build/release/bin/cntk  configFile=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config/02_Convolution.cntk  currentDirectory=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData  RunDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu  DataDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData  ConfigDir=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config  OutputDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu  DeviceId=0  timestamping=true  train=[SGD=[maxEpochs=3]]  imageLayout="cudnn"



04/27/2016 16:24:14: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
04/27/2016 16:24:14: RootDir = ".."
ConfigDir = "$RootDir$/Config"
DataDir   = "$RootDir$/Data"
OutputDir = "$RootDir$/Output"
ModelDir  = "$OutputDir$/Models"
deviceId = 0
imageLayout = "cudnn"
command = train:test
precision = "float"
modelPath = "$ModelDir$/02_Convolution"
ndlMacros = "$ConfigDir$/Macros.ndl"
traceLevel=1
numMBsToShowResult=500
prefetch=true
initOnCPUOnly=true
train = [
    action = "train"
    NDLNetworkBuilder = [
        networkDescription = "$ConfigDir$/02_Convolution.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerMB = 0.1*5:0.3
        momentumPerMB = 0*10:0.7
        maxEpochs = 15
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
test = [
    action = test
    minibatchSize = 16
    NDLNetworkBuilder = [
        networkDescription = "$ConfigDir$/02_Convolution.ndl"
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData
RunDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu
DataDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData
ConfigDir=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config
OutputDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu
DeviceId=0
timestamping=true
train=[SGD=[maxEpochs=3]]
imageLayout="cudnn"

04/27/2016 16:24:14: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

04/27/2016 16:24:14: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
04/27/2016 16:24:14: RootDir = ".."
ConfigDir = "../Config"
DataDir   = "../Data"
OutputDir = "../Output"
ModelDir  = "/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/Models"
deviceId = 0
imageLayout = "cudnn"
command = train:test
precision = "float"
modelPath = "/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/Models/02_Convolution"
ndlMacros = "/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config/Macros.ndl"
traceLevel=1
numMBsToShowResult=500
prefetch=true
initOnCPUOnly=true
train = [
    action = "train"
    NDLNetworkBuilder = [
        networkDescription = "/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config/02_Convolution.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerMB = 0.1*5:0.3
        momentumPerMB = 0*10:0.7
        maxEpochs = 15
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
test = [
    action = test
    minibatchSize = 16
    NDLNetworkBuilder = [
        networkDescription = "/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config/02_Convolution.ndl"
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData
RunDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu
DataDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData
ConfigDir=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config
OutputDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu
DeviceId=0
timestamping=true
train=[SGD=[maxEpochs=3]]
imageLayout="cudnn"

04/27/2016 16:24:14: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

04/27/2016 16:24:14: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: 02_Convolution.cntk:command=train:test
configparameters: 02_Convolution.cntk:ConfigDir=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config
configparameters: 02_Convolution.cntk:currentDirectory=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData
configparameters: 02_Convolution.cntk:DataDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData
configparameters: 02_Convolution.cntk:deviceId=0
configparameters: 02_Convolution.cntk:imageLayout=cudnn
configparameters: 02_Convolution.cntk:initOnCPUOnly=true
configparameters: 02_Convolution.cntk:ModelDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/Models
configparameters: 02_Convolution.cntk:modelPath=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/Models/02_Convolution
configparameters: 02_Convolution.cntk:ndlMacros=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config/Macros.ndl
configparameters: 02_Convolution.cntk:numMBsToShowResult=500
configparameters: 02_Convolution.cntk:OutputDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu
configparameters: 02_Convolution.cntk:precision=float
configparameters: 02_Convolution.cntk:prefetch=true
configparameters: 02_Convolution.cntk:RootDir=..
configparameters: 02_Convolution.cntk:RunDir=/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu
configparameters: 02_Convolution.cntk:test=[
    action = test
    minibatchSize = 16
    NDLNetworkBuilder = [
        networkDescription = "/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config/02_Convolution.ndl"
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]

configparameters: 02_Convolution.cntk:timestamping=true
configparameters: 02_Convolution.cntk:traceLevel=1
configparameters: 02_Convolution.cntk:train=[
    action = "train"
    NDLNetworkBuilder = [
        networkDescription = "/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/MNIST/02_Convolution/../Config/02_Convolution.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerMB = 0.1*5:0.3
        momentumPerMB = 0*10:0.7
        maxEpochs = 15
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/TestData/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
] [SGD=[maxEpochs=3]]

04/27/2016 16:24:14: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
04/27/2016 16:24:14: Commands: train test
04/27/2016 16:24:14: Precision = "float"
04/27/2016 16:24:14: CNTKModelPath: /tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/Models/02_Convolution
04/27/2016 16:24:14: CNTKCommandTrainInfo: train : 3
04/27/2016 16:24:14: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

04/27/2016 16:24:14: ##############################################################################
04/27/2016 16:24:14: #                                                                            #
04/27/2016 16:24:14: # Action "train"                                                             #
04/27/2016 16:24:14: #                                                                            #
04/27/2016 16:24:14: ##############################################################################

04/27/2016 16:24:14: CNTKCommandTrainBegin: train
NDLBuilder Using GPU 0

04/27/2016 16:24:14: Creating virgin network.

Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	err = ErrorPrediction()
	ol.z = Plus()

Validating network. 27 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *]
Validating --> ol.W = LearnableParameter() :  -> [10 x 128]
Validating --> h1.W = LearnableParameter() :  -> [128 x 7 x 7 x 32]
Validating --> conv2.w.W = LearnableParameter() :  -> [32 x 400]
Validating --> conv1.w.W = LearnableParameter() :  -> [16 x 25]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [28 x 28 x 1 x *]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [28 x 28 x 1 x *] -> [28 x 28 x 1 x *]
Validating --> conv1.c.c = Convolution (conv1.w.W, featScaled) : [16 x 25], [28 x 28 x 1 x *] -> [28 x 28 x 16 x *]
Validating --> conv1.b.b = LearnableParameter() :  -> [1 x 1 x 16]
Validating --> conv1.cpb = Plus (conv1.c.c, conv1.b.b) : [28 x 28 x 16 x *], [1 x 1 x 16] -> [28 x 28 x 16 x *]
Validating --> conv1.out = RectifiedLinear (conv1.cpb) : [28 x 28 x 16 x *] -> [28 x 28 x 16 x *]
Validating --> pool1 = MaxPooling (conv1.out) : [28 x 28 x 16 x *] -> [14 x 14 x 16 x *]
Validating --> conv2.c.c = Convolution (conv2.w.W, pool1) : [32 x 400], [14 x 14 x 16 x *] -> [14 x 14 x 32 x *]
Validating --> conv2.b.b = LearnableParameter() :  -> [1 x 1 x 32]
Validating --> conv2.cpb = Plus (conv2.c.c, conv2.b.b) : [14 x 14 x 32 x *], [1 x 1 x 32] -> [14 x 14 x 32 x *]
Validating --> conv2.out = RectifiedLinear (conv2.cpb) : [14 x 14 x 32 x *] -> [14 x 14 x 32 x *]
Validating --> pool2.p = Pooling (conv2.out) : [14 x 14 x 32 x *] -> [7 x 7 x 32 x *]
Validating --> h1.t = Times (h1.W, pool2.p) : [128 x 7 x 7 x 32], [7 x 7 x 32 x *] -> [128 x *]
Validating --> h1.b = LearnableParameter() :  -> [128 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [128 x *], [128 x 1] -> [128 x 1 x *]
Validating --> h1.y = Sigmoid (h1.z) : [128 x 1 x *] -> [128 x 1 x *]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 128], [128 x 1 x *] -> [10 x 1 x *]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *], [10 x 1] -> [10 x 1 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> err = ErrorPrediction (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]

Validating network. 16 nodes to process in pass 2.


Validating network, final pass.


Using cuDNN convolution engine for geometry: Input: 28 x 28 x 1, Output: 28 x 28 x 16, Kernel: 5 x 5 x 1, Map: 1 x 1 x 16, Stride: 1 x 1 x 1, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using cuDNN convolution engine for geometry: Input: 28 x 28 x 16, Output: 14 x 14 x 16, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.

Using cuDNN convolution engine for geometry: Input: 14 x 14 x 16, Output: 14 x 14 x 32, Kernel: 5 x 5 x 16, Map: 32, Stride: 1 x 1 x 16, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0, UpperPad: 0.

Using cuDNN convolution engine for geometry: Input: 14 x 14 x 32, Output: 7 x 7 x 32, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (1, 1, 0), LowerPad: 0, UpperPad: 0.


11 out of 27 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

04/27/2016 16:24:15: Created model with 27 nodes on GPU 0.

04/27/2016 16:24:15: Training criterion node(s):
04/27/2016 16:24:15: 	ce = CrossEntropyWithSoftmax

04/27/2016 16:24:15: Evaluation criterion node(s):

04/27/2016 16:24:15: 	err = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[err Gradient[1]] [featScale Gradient[1 x 1]] [featScaled Gradient[28 x 28 x 1 x *]] [features Gradient[28 x 28 x 1 x *]] [labels Gradient[10 x *]] }
0x2aa0798: {[features Value[28 x 28 x 1 x *]] }
0x3b50f38: {[featScale Value[1 x 1]] }
0x3c3f8e8: {[labels Value[10 x *]] }
0x3c403d8: {[conv1.w.W Value[16 x 25]] }
0x3c40de8: {[conv1.b.b Value[1 x 1 x 16]] }
0x3c42a58: {[conv2.w.W Value[32 x 400]] }
0x3c43918: {[conv2.b.b Value[1 x 1 x 32]] }
0x3c47d08: {[h1.W Value[128 x 7 x 7 x 32]] }
0x3c48b68: {[h1.b Value[128 x 1]] }
0x3c49f08: {[ol.W Value[10 x 128]] }
0x3c4ae08: {[ol.b Value[10 x 1]] }
0xc933df8: {[featScaled Value[28 x 28 x 1 x *]] }
0xc934538: {[conv1.c.c Value[28 x 28 x 16 x *]] }
0xc934858: {[conv1.cpb Value[28 x 28 x 16 x *]] [conv1.w.W Gradient[16 x 25]] }
0xc934a18: {[conv1.c.c Gradient[28 x 28 x 16 x *]] [conv1.out Value[28 x 28 x 16 x *]] }
0xc934bd8: {[conv1.cpb Gradient[28 x 28 x 16 x *]] [pool1 Value[14 x 14 x 16 x *]] }
0xc934d98: {[conv2.c.c Value[14 x 14 x 32 x *]] }
0xc934f58: {[conv1.b.b Gradient[1 x 1 x 16]] [conv1.out Gradient[28 x 28 x 16 x *]] }
0xc935118: {[conv2.cpb Value[14 x 14 x 32 x *]] [conv2.w.W Gradient[32 x 400]] }
0xc9352d8: {[conv2.c.c Gradient[14 x 14 x 32 x *]] [conv2.out Value[14 x 14 x 32 x *]] }
0xc935498: {[conv2.cpb Gradient[14 x 14 x 32 x *]] [pool1 Gradient[14 x 14 x 16 x *]] [pool2.p Value[7 x 7 x 32 x *]] }
0xc935658: {[conv2.b.b Gradient[1 x 1 x 32]] [conv2.out Gradient[14 x 14 x 32 x *]] [h1.t Value[128 x *]] }
0xc935818: {[h1.W Gradient[128 x 7 x 7 x 32]] [h1.z Value[128 x 1 x *]] }
0xc9359d8: {[h1.t Gradient[128 x *]] [h1.y Value[128 x 1 x *]] }
0xc935b98: {[h1.z Gradient[128 x 1 x *]] [ol.t Value[10 x 1 x *]] [pool2.p Gradient[7 x 7 x 32 x *]] }
0xc935d58: {[ol.W Gradient[10 x 128]] [ol.z Value[10 x 1 x *]] }
0xc935f18: {[ce Value[1]] }
0xc936488: {[err Value[1]] }
0xc936b88: {[ce Gradient[1]] }
0xc936d48: {[h1.b Gradient[128 x 1]] [h1.y Gradient[128 x 1 x *]] [ol.z Gradient[10 x 1 x *]] }
0xc936f08: {[ol.t Gradient[10 x 1 x *]] }
0xc95c2a8: {[ol.b Gradient[10 x 1]] }

04/27/2016 16:24:15: No PreCompute nodes found, skipping PreCompute step.

04/27/2016 16:24:15: Starting Epoch 1: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples

04/27/2016 16:24:15: Starting minibatch loop.
04/27/2016 16:24:17:  Epoch[ 1 of 3]-Minibatch[   1- 500, 26.67%]: SamplesSeen = 16000; TrainLossPerSample =  1.04778442; EvalErr[0]PerSample = 0.34731250; TotalTime = 2.2357s; SamplesPerSecond = 7156.7
04/27/2016 16:24:18:  Epoch[ 1 of 3]-Minibatch[ 501-1000, 53.33%]: SamplesSeen = 16000; TrainLossPerSample =  0.16068323; EvalErr[0]PerSample = 0.04375000; TotalTime = 1.1103s; SamplesPerSecond = 14410.4
04/27/2016 16:24:20:  Epoch[ 1 of 3]-Minibatch[1001-1500, 80.00%]: SamplesSeen = 16000; TrainLossPerSample =  0.10928320; EvalErr[0]PerSample = 0.03175000; TotalTime = 1.1106s; SamplesPerSecond = 14406.3
04/27/2016 16:24:20: Finished Epoch[ 1 of 3]: [Training Set] TrainLossPerSample = 0.37035687; TotalSamplesSeen = 60000; EvalErrPerSample = 0.11876667; AvgLearningRatePerSample = 0.003125; EpochTime=5.3069
04/27/2016 16:24:20: SGD: Saving checkpoint model '/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/Models/02_Convolution.1'

04/27/2016 16:24:20: Starting Epoch 2: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples

04/27/2016 16:24:20: Starting minibatch loop.
04/27/2016 16:24:22:  Epoch[ 2 of 3]-Minibatch[   1- 500, 26.67%]: SamplesSeen = 16000; TrainLossPerSample =  0.07324461; EvalErr[0]PerSample = 0.02325000; TotalTime = 1.1108s; SamplesPerSecond = 14404.6
04/27/2016 16:24:23:  Epoch[ 2 of 3]-Minibatch[ 501-1000, 53.33%]: SamplesSeen = 16000; TrainLossPerSample =  0.06402154; EvalErr[0]PerSample = 0.01850000; TotalTime = 1.1103s; SamplesPerSecond = 14410.4
04/27/2016 16:24:24:  Epoch[ 2 of 3]-Minibatch[1001-1500, 80.00%]: SamplesSeen = 16000; TrainLossPerSample =  0.06553748; EvalErr[0]PerSample = 0.02012500; TotalTime = 1.1107s; SamplesPerSecond = 14405.5
04/27/2016 16:24:25: Finished Epoch[ 2 of 3]: [Training Set] TrainLossPerSample = 0.067015804; TotalSamplesSeen = 120000; EvalErrPerSample = 0.020516667; AvgLearningRatePerSample = 0.003125; EpochTime=4.18579
04/27/2016 16:24:25: SGD: Saving checkpoint model '/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/Models/02_Convolution.2'

04/27/2016 16:24:25: Starting Epoch 3: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples

04/27/2016 16:24:25: Starting minibatch loop.
04/27/2016 16:24:26:  Epoch[ 3 of 3]-Minibatch[   1- 500, 26.67%]: SamplesSeen = 16000; TrainLossPerSample =  0.04259983; EvalErr[0]PerSample = 0.01268750; TotalTime = 1.1110s; SamplesPerSecond = 14401.0
04/27/2016 16:24:27:  Epoch[ 3 of 3]-Minibatch[ 501-1000, 53.33%]: SamplesSeen = 16000; TrainLossPerSample =  0.04649073; EvalErr[0]PerSample = 0.01293750; TotalTime = 1.1106s; SamplesPerSecond = 14406.5
04/27/2016 16:24:28:  Epoch[ 3 of 3]-Minibatch[1001-1500, 80.00%]: SamplesSeen = 16000; TrainLossPerSample =  0.04900719; EvalErr[0]PerSample = 0.01500000; TotalTime = 1.1108s; SamplesPerSecond = 14404.4
04/27/2016 16:24:29: Finished Epoch[ 3 of 3]: [Training Set] TrainLossPerSample = 0.045348669; TotalSamplesSeen = 180000; EvalErrPerSample = 0.013416667; AvgLearningRatePerSample = 0.003125; EpochTime=4.18836
04/27/2016 16:24:29: SGD: Saving checkpoint model '/tmp/cntk-test-20160427162414.789686/CNTKTextFormatReader/Examples/Image/MNIST_02_Convolution@release_gpu/Models/02_Convolution'
04/27/2016 16:24:29: CNTKCommandTrainEnd: train

04/27/2016 16:24:29: Action "train" complete.


04/27/2016 16:24:29: ##############################################################################
04/27/2016 16:24:29: #                                                                            #
04/27/2016 16:24:29: # Action "test"                                                              #
04/27/2016 16:24:29: #                                                                            #
04/27/2016 16:24:29: ##############################################################################


Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	err = ErrorPrediction()
	ol.z = Plus()

Validating network. 27 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *1]
Validating --> ol.W = LearnableParameter() :  -> [10 x 128]
Validating --> h1.W = LearnableParameter() :  -> [128 x 7 x 7 x 32]
Validating --> conv2.w.W = LearnableParameter() :  -> [32 x 400]
Validating --> conv1.w.W = LearnableParameter() :  -> [16 x 25]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [28 x 28 x 1 x *1]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [28 x 28 x 1 x *1] -> [28 x 28 x 1 x *1]
Validating --> conv1.c.c = Convolution (conv1.w.W, featScaled) : [16 x 25], [28 x 28 x 1 x *1] -> [28 x 28 x 16 x *1]
Validating --> conv1.b.b = LearnableParameter() :  -> [1 x 1 x 16]
Validating --> conv1.cpb = Plus (conv1.c.c, conv1.b.b) : [28 x 28 x 16 x *1], [1 x 1 x 16] -> [28 x 28 x 16 x *1]
Validating --> conv1.out = RectifiedLinear (conv1.cpb) : [28 x 28 x 16 x *1] -> [28 x 28 x 16 x *1]
Validating --> pool1 = MaxPooling (conv1.out) : [28 x 28 x 16 x *1] -> [14 x 14 x 16 x *1]
Validating --> conv2.c.c = Convolution (conv2.w.W, pool1) : [32 x 400], [14 x 14 x 16 x *1] -> [14 x 14 x 32 x *1]
Validating --> conv2.b.b = LearnableParameter() :  -> [1 x 1 x 32]
Validating --> conv2.cpb = Plus (conv2.c.c, conv2.b.b) : [14 x 14 x 32 x *1], [1 x 1 x 32] -> [14 x 14 x 32 x *1]
Validating --> conv2.out = RectifiedLinear (conv2.cpb) : [14 x 14 x 32 x *1] -> [14 x 14 x 32 x *1]
Validating --> pool2.p = Pooling (conv2.out) : [14 x 14 x 32 x *1] -> [7 x 7 x 32 x *1]
Validating --> h1.t = Times (h1.W, pool2.p) : [128 x 7 x 7 x 32], [7 x 7 x 32 x *1] -> [128 x *1]
Validating --> h1.b = LearnableParameter() :  -> [128 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [128 x *1], [128 x 1] -> [128 x 1 x *1]
Validating --> h1.y = Sigmoid (h1.z) : [128 x 1 x *1] -> [128 x 1 x *1]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 128], [128 x 1 x *1] -> [10 x 1 x *1]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *1], [10 x 1] -> [10 x 1 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> err = ErrorPrediction (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]

Validating network. 16 nodes to process in pass 2.


Validating network, final pass.


Using cuDNN convolution engine for geometry: Input: 28 x 28 x 1, Output: 28 x 28 x 16, Kernel: 5 x 5 x 1, Map: 1 x 1 x 16, Stride: 1 x 1 x 1, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using cuDNN convolution engine for geometry: Input: 28 x 28 x 16, Output: 14 x 14 x 16, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.

Using cuDNN convolution engine for geometry: Input: 14 x 14 x 16, Output: 14 x 14 x 32, Kernel: 5 x 5 x 16, Map: 32, Stride: 1 x 1 x 16, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0, UpperPad: 0.

Using cuDNN convolution engine for geometry: Input: 14 x 14 x 32, Output: 7 x 7 x 32, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (1, 1, 0), LowerPad: 0, UpperPad: 0.


11 out of 27 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[ce Gradient[1]] [conv1.b.b Gradient[1 x 1 x 16]] [conv1.c.c Gradient[28 x 28 x 16 x *1]] [conv1.cpb Gradient[28 x 28 x 16 x *1]] [conv1.out Gradient[28 x 28 x 16 x *1]] [conv1.w.W Gradient[16 x 25]] [conv2.b.b Gradient[1 x 1 x 32]] [conv2.c.c Gradient[14 x 14 x 32 x *1]] [conv2.cpb Gradient[14 x 14 x 32 x *1]] [conv2.out Gradient[14 x 14 x 32 x *1]] [conv2.w.W Gradient[32 x 400]] [err Gradient[1]] [featScale Gradient[1 x 1]] [featScaled Gradient[28 x 28 x 1 x *1]] [features Gradient[28 x 28 x 1 x *1]] [h1.W Gradient[128 x 7 x 7 x 32]] [h1.b Gradient[128 x 1]] [h1.t Gradient[128 x *1]] [h1.y Gradient[128 x 1 x *1]] [h1.z Gradient[128 x 1 x *1]] [labels Gradient[10 x *1]] [ol.W Gradient[10 x 128]] [ol.b Gradient[10 x 1]] [ol.t Gradient[10 x 1 x *1]] [ol.z Gradient[10 x 1 x *1]] [pool1 Gradient[14 x 14 x 16 x *1]] [pool2.p Gradient[7 x 7 x 32 x *1]] }
0x2aa01a8: {[labels Value[10 x *1]] }
0x2aa0738: {[h1.W Value[128 x 7 x 7 x 32]] }
0x2aa0918: {[conv1.w.W Value[16 x 25]] }
0x2aa58b8: {[conv1.b.b Value[1 x 1 x 16]] }
0x2ab1848: {[conv2.b.b Value[1 x 1 x 32]] }
0x2adb8e8: {[featScale Value[1 x 1]] }
0x2ae0818: {[features Value[28 x 28 x 1 x *1]] }
0x3b50788: {[conv2.cpb Value[14 x 14 x 32 x *1]] }
0x3b50948: {[conv2.out Value[14 x 14 x 32 x *1]] }
0x3b50b08: {[pool2.p Value[7 x 7 x 32 x *1]] }
0x3b50cc8: {[h1.t Value[128 x *1]] }
0x3b50e88: {[h1.z Value[128 x 1 x *1]] }
0x3c40d98: {[ol.W Value[10 x 128]] }
0x3c43818: {[conv1.cpb Value[28 x 28 x 16 x *1]] }
0x3c439d8: {[conv1.out Value[28 x 28 x 16 x *1]] }
0x3c43b98: {[pool1 Value[14 x 14 x 16 x *1]] }
0x3c43d58: {[conv2.c.c Value[14 x 14 x 32 x *1]] }
0x3c48288: {[ol.b Value[10 x 1]] }
0x3c48898: {[h1.y Value[128 x 1 x *1]] }
0x3c48a58: {[ol.t Value[10 x 1 x *1]] }
0x3c48c18: {[ol.z Value[10 x 1 x *1]] }
0x3c48dd8: {[ce Value[1]] }
0x3c4c368: {[conv2.w.W Value[32 x 400]] }
0x3c4fdd8: {[err Value[1]] }
0xc95f1a8: {[featScaled Value[28 x 28 x 1 x *1]] }
0xc964538: {[conv1.c.c Value[28 x 28 x 16 x *1]] }
0x10ea6a68: {[h1.b Value[128 x 1]] }

Final Results: Minibatch[1-625]: SamplesSeen = 10000    err: ErrorPrediction/Sample = 0.0144    ce: CrossEntropyWithSoftmax/Sample = 0.043921811    Perplexity = 1.0449007    

04/27/2016 16:24:33: Action "test" complete.

04/27/2016 16:24:33: __COMPLETED__