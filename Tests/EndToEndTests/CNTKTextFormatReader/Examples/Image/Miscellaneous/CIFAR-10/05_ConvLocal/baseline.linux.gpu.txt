=== Running /home/alrezni/src/cntk_git/build/release/bin/cntk configFile=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal/../../../../../../../../Examples/Image/Miscellaneous/CIFAR-10/../../../../Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/Config/05_ConvLocal.cntk currentDirectory=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData RunDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu DataDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData ConfigDir=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal/../../../../../../../../Examples/Image/Miscellaneous/CIFAR-10 OutputDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu DeviceId=0 timestamping=true Train=[SGD=[maxEpochs=5]] Train=[SGD=[epochSize=100]] stderr=-
-------------------------------------------------------------------
Build info: 

		Built time: Apr 26 2016 17:04:28
		Last modified date: Tue Apr  5 16:01:37 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: acml
		CUDA_PATH: /usr/local/cuda-7.0
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: alrezni/examples_text
		Build SHA1: 780d0d14f555f568d393793562f374f04af79a73
		Built by alrezni on atleneu04
		Build Path: /home/alrezni/src/cntk_git
-------------------------------------------------------------------
Changed current directory to /tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData
04/28/2016 17:02:50: Redirecting stderr to file -_Train_Test.log
04/28/2016 17:02:50: -------------------------------------------------------------------
04/28/2016 17:02:50: Build info: 

04/28/2016 17:02:50: 		Built time: Apr 26 2016 17:04:28
04/28/2016 17:02:50: 		Last modified date: Tue Apr  5 16:01:37 2016
04/28/2016 17:02:50: 		Build type: release
04/28/2016 17:02:50: 		Build target: GPU
04/28/2016 17:02:50: 		With 1bit-SGD: yes
04/28/2016 17:02:50: 		Math lib: acml
04/28/2016 17:02:50: 		CUDA_PATH: /usr/local/cuda-7.0
04/28/2016 17:02:50: 		CUB_PATH: /usr/local/cub-1.4.1
04/28/2016 17:02:50: 		CUDNN_PATH: /usr/local/cudnn-4.0
04/28/2016 17:02:50: 		Build Branch: alrezni/examples_text
04/28/2016 17:02:50: 		Build SHA1: 780d0d14f555f568d393793562f374f04af79a73
04/28/2016 17:02:50: 		Built by alrezni on atleneu04
04/28/2016 17:02:50: 		Build Path: /home/alrezni/src/cntk_git
04/28/2016 17:02:50: -------------------------------------------------------------------

04/28/2016 17:02:50: Running on localhost at 2016/04/28 17:02:50
04/28/2016 17:02:50: Command line: 
/home/alrezni/src/cntk_git/build/release/bin/cntk  configFile=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal/../../../../../../../../Examples/Image/Miscellaneous/CIFAR-10/../../../../Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/Config/05_ConvLocal.cntk  currentDirectory=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData  RunDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu  DataDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData  ConfigDir=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal/../../../../../../../../Examples/Image/Miscellaneous/CIFAR-10  OutputDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu  DeviceId=0  timestamping=true  Train=[SGD=[maxEpochs=5]]  Train=[SGD=[epochSize=100]]  stderr=-



04/28/2016 17:02:50: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
04/28/2016 17:02:50: RootDir = "."
ConfigDir = "$RootDir$"
DataDir = "$RootDir$"
OutputDir = "$RootDir$/Output"
ModelDir = "$OutputDir$/Models"
ndlMacros = "$ConfigDir$/Macros.ndl"
precision = "float"
deviceId = 0
imageLayout = "cudnn"
prefetch = "true"
command = Train:Test
modelPath = "$ModelDir$/05_ConvLocal"
stderr = "$OutputDir$/05_ConvLocal"
traceLevel = 1
numMBsToShowResult = 50
Train = [
    action = "train"
     NDLNetworkBuilder = [
        networkDescription = "$ConfigDir$/05_ConvLocal.ndl"
    ]
    SGD = [
        epochSize = 49984
        minibatchSize = 64
        learningRatesPerMB = 0.01*10:0.003*10:0.001
        momentumPerMB = 0.9*20:0.99
        maxEpochs = 30
        L2RegWeight = 0.03
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Train_cntk_text.txt"
        input = [
            features = [
                dim = 3072
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
Test = [
    action = "test"
    minibatchSize = 16
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Test_cntk_text.txt"
        input = [
            features = [
                dim = 3072
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData
RunDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu
DataDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData
ConfigDir=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal/../../../../../../../../Examples/Image/Miscellaneous/CIFAR-10
OutputDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu
DeviceId=0
timestamping=true
Train=[SGD=[maxEpochs=5]]
Train=[SGD=[epochSize=100]]
stderr=-

04/28/2016 17:02:50: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

04/28/2016 17:02:50: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
04/28/2016 17:02:50: RootDir = "."
ConfigDir = "."
DataDir = "."
OutputDir = "./Output"
ModelDir = "/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/Models"
ndlMacros = "/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal/../../../../../../../../Examples/Image/Miscellaneous/CIFAR-10/Macros.ndl"
precision = "float"
deviceId = 0
imageLayout = "cudnn"
prefetch = "true"
command = Train:Test
modelPath = "/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/Models/05_ConvLocal"
stderr = "/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/05_ConvLocal"
traceLevel = 1
numMBsToShowResult = 50
Train = [
    action = "train"
     NDLNetworkBuilder = [
        networkDescription = "/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal/../../../../../../../../Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal.ndl"
    ]
    SGD = [
        epochSize = 49984
        minibatchSize = 64
        learningRatesPerMB = 0.01*10:0.003*10:0.001
        momentumPerMB = 0.9*20:0.99
        maxEpochs = 30
        L2RegWeight = 0.03
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData/Train_cntk_text.txt"
        input = [
            features = [
                dim = 3072
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
Test = [
    action = "test"
    minibatchSize = 16
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData/Test_cntk_text.txt"
        input = [
            features = [
                dim = 3072
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData
RunDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu
DataDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData
ConfigDir=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal/../../../../../../../../Examples/Image/Miscellaneous/CIFAR-10
OutputDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu
DeviceId=0
timestamping=true
Train=[SGD=[maxEpochs=5]]
Train=[SGD=[epochSize=100]]
stderr=-

04/28/2016 17:02:50: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

04/28/2016 17:02:50: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: 05_ConvLocal.cntk:command=Train:Test
configparameters: 05_ConvLocal.cntk:ConfigDir=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal/../../../../../../../../Examples/Image/Miscellaneous/CIFAR-10
configparameters: 05_ConvLocal.cntk:currentDirectory=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData
configparameters: 05_ConvLocal.cntk:DataDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData
configparameters: 05_ConvLocal.cntk:deviceId=0
configparameters: 05_ConvLocal.cntk:imageLayout=cudnn
configparameters: 05_ConvLocal.cntk:ModelDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/Models
configparameters: 05_ConvLocal.cntk:modelPath=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/Models/05_ConvLocal
configparameters: 05_ConvLocal.cntk:ndlMacros=/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal/../../../../../../../../Examples/Image/Miscellaneous/CIFAR-10/Macros.ndl
configparameters: 05_ConvLocal.cntk:numMBsToShowResult=50
configparameters: 05_ConvLocal.cntk:OutputDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu
configparameters: 05_ConvLocal.cntk:precision=float
configparameters: 05_ConvLocal.cntk:prefetch=true
configparameters: 05_ConvLocal.cntk:RootDir=.
configparameters: 05_ConvLocal.cntk:RunDir=/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu
configparameters: 05_ConvLocal.cntk:stderr=-
configparameters: 05_ConvLocal.cntk:Test=[
    action = "test"
    minibatchSize = 16
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData/Test_cntk_text.txt"
        input = [
            features = [
                dim = 3072
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]

configparameters: 05_ConvLocal.cntk:timestamping=true
configparameters: 05_ConvLocal.cntk:traceLevel=1
configparameters: 05_ConvLocal.cntk:Train=[
    action = "train"
     NDLNetworkBuilder = [
        networkDescription = "/home/alrezni/src/cntk_git/Tests/EndToEndTests/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal/../../../../../../../../Examples/Image/Miscellaneous/CIFAR-10/05_ConvLocal.ndl"
    ]
    SGD = [
        epochSize = 49984
        minibatchSize = 64
        learningRatesPerMB = 0.01*10:0.003*10:0.001
        momentumPerMB = 0.9*20:0.99
        maxEpochs = 30
        L2RegWeight = 0.03
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/TestData/Train_cntk_text.txt"
        input = [
            features = [
                dim = 3072
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
] [SGD=[maxEpochs=5]] [SGD=[epochSize=100]]

04/28/2016 17:02:50: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
04/28/2016 17:02:50: Commands: Train Test
04/28/2016 17:02:50: Precision = "float"
04/28/2016 17:02:50: CNTKModelPath: /tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/Models/05_ConvLocal
04/28/2016 17:02:50: CNTKCommandTrainInfo: Train : 5
04/28/2016 17:02:50: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5

04/28/2016 17:02:50: ##############################################################################
04/28/2016 17:02:50: #                                                                            #
04/28/2016 17:02:50: # Action "train"                                                             #
04/28/2016 17:02:50: #                                                                            #
04/28/2016 17:02:50: ##############################################################################

04/28/2016 17:02:50: CNTKCommandTrainBegin: Train
NDLBuilder Using GPU 0

04/28/2016 17:02:50: Creating virgin network.
SetGaussianRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==4

Post-processing network...

3 roots:
	CE = CrossEntropyWithSoftmax()
	Err = ErrorPrediction()
	OutputNodes.z = Plus()

Validating network. 32 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *]
Validating --> OutputNodes.W = LearnableParameter() :  -> [10 x 7 x 7 x 32]
Validating --> conv4.W = LearnableParameter() :  -> [1568 x 576]
Validating --> conv3.W = LearnableParameter() :  -> [3136 x 576]
Validating --> conv2.W = LearnableParameter() :  -> [64 x 1600]
Validating --> conv1.W = LearnableParameter() :  -> [64 x 75]
Validating --> features = InputValue() :  -> [32 x 32 x 3 x *]
Validating --> featOffs = LearnableParameter() :  -> [1 x 1]
Validating --> featScaled = Minus (features, featOffs) : [32 x 32 x 3 x *], [1 x 1] -> [32 x 32 x 3 x *]
Validating --> conv1.c = Convolution (conv1.W, featScaled) : [64 x 75], [32 x 32 x 3 x *] -> [32 x 32 x 64 x *]
Validating --> conv1.b = LearnableParameter() :  -> [1 x 1 x 64]
Validating --> conv1.p = Plus (conv1.c, conv1.b) : [32 x 32 x 64 x *], [1 x 1 x 64] -> [32 x 32 x 64 x *]
Validating --> conv1.y = RectifiedLinear (conv1.p) : [32 x 32 x 64 x *] -> [32 x 32 x 64 x *]
Validating --> pool1 = MaxPooling (conv1.y) : [32 x 32 x 64 x *] -> [15 x 15 x 64 x *]
Validating --> conv2.c = Convolution (conv2.W, pool1) : [64 x 1600], [15 x 15 x 64 x *] -> [15 x 15 x 64 x *]
Validating --> conv2.b = LearnableParameter() :  -> [1 x 1 x 64]
Validating --> conv2.p = Plus (conv2.c, conv2.b) : [15 x 15 x 64 x *], [1 x 1 x 64] -> [15 x 15 x 64 x *]
Validating --> conv2.y = RectifiedLinear (conv2.p) : [15 x 15 x 64 x *] -> [15 x 15 x 64 x *]
Validating --> pool2 = MaxPooling (conv2.y) : [15 x 15 x 64 x *] -> [7 x 7 x 64 x *]
Validating --> conv3.c = Convolution (conv3.W, pool2) : [3136 x 576], [7 x 7 x 64 x *] -> [7 x 7 x 64 x *]
Validating --> conv3.b = LearnableParameter() :  -> [1 x 1 x 64]
Validating --> conv3.p = Plus (conv3.c, conv3.b) : [7 x 7 x 64 x *], [1 x 1 x 64] -> [7 x 7 x 64 x *]
Validating --> conv3.y = RectifiedLinear (conv3.p) : [7 x 7 x 64 x *] -> [7 x 7 x 64 x *]
Validating --> conv4.c = Convolution (conv4.W, conv3.y) : [1568 x 576], [7 x 7 x 64 x *] -> [7 x 7 x 32 x *]
Validating --> conv4.b = LearnableParameter() :  -> [1 x 1 x 32]
Validating --> conv4.p = Plus (conv4.c, conv4.b) : [7 x 7 x 32 x *], [1 x 1 x 32] -> [7 x 7 x 32 x *]
Validating --> conv4.y = RectifiedLinear (conv4.p) : [7 x 7 x 32 x *] -> [7 x 7 x 32 x *]
Validating --> OutputNodes.t = Times (OutputNodes.W, conv4.y) : [10 x 7 x 7 x 32], [7 x 7 x 32 x *] -> [10 x *]
Validating --> OutputNodes.b = LearnableParameter() :  -> [10]
Validating --> OutputNodes.z = Plus (OutputNodes.t, OutputNodes.b) : [10 x *], [10] -> [10 x *]
Validating --> CE = CrossEntropyWithSoftmax (labels, OutputNodes.z) : [10 x *], [10 x *] -> [1]
Validating --> Err = ErrorPrediction (labels, OutputNodes.z) : [10 x *], [10 x *] -> [1]

Validating network. 19 nodes to process in pass 2.


Validating network, final pass.


Using cuDNN convolution engine for geometry: Input: 32 x 32 x 3, Output: 32 x 32 x 64, Kernel: 5 x 5 x 3, Map: 1 x 1 x 64, Stride: 1 x 1 x 3, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using cuDNN convolution engine for geometry: Input: 32 x 32 x 64, Output: 15 x 15 x 64, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.

Using cuDNN convolution engine for geometry: Input: 15 x 15 x 64, Output: 15 x 15 x 64, Kernel: 5 x 5 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using cuDNN convolution engine for geometry: Input: 15 x 15 x 64, Output: 7 x 7 x 64, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.

Using reference convolution engine for geometry: Input: 7 x 7 x 64, Output: 7 x 7 x 64, Kernel: 3 x 3 x 64, Map: 64, Stride: 1 x 1 x 64, Sharing: (0, 0, 0), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using reference convolution engine for geometry: Input: 7 x 7 x 64, Output: 7 x 7 x 32, Kernel: 3 x 3 x 64, Map: 32, Stride: 1 x 1 x 64, Sharing: (0, 0, 0), AutoPad: (1), LowerPad: 0, UpperPad: 0.


13 out of 32 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

04/28/2016 17:02:51: Created model with 32 nodes on GPU 0.

04/28/2016 17:02:51: Training criterion node(s):
04/28/2016 17:02:51: 	CE = CrossEntropyWithSoftmax

04/28/2016 17:02:51: Evaluation criterion node(s):

04/28/2016 17:02:51: 	Err = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[Err Gradient[1]] [featOffs Gradient[1 x 1]] [featScaled Gradient[32 x 32 x 3 x *]] [features Gradient[32 x 32 x 3 x *]] [labels Gradient[10 x *]] }
0x1b55718: {[features Value[32 x 32 x 3 x *]] }
0x26779e8: {[featOffs Value[1 x 1]] }
0x2bb0548: {[labels Value[10 x *]] }
0x2bb0c98: {[conv1.b Value[1 x 1 x 64]] }
0x2bb1028: {[conv1.W Value[64 x 75]] }
0x2bb3a48: {[conv2.W Value[64 x 1600]] }
0x2bb49b8: {[conv2.b Value[1 x 1 x 64]] }
0x2bb64c8: {[conv3.W Value[3136 x 576]] }
0x2bb73e8: {[conv3.b Value[1 x 1 x 64]] }
0x2bb97f8: {[conv4.W Value[1568 x 576]] }
0x2bba558: {[conv4.b Value[1 x 1 x 32]] }
0x2bbc858: {[OutputNodes.W Value[10 x 7 x 7 x 32]] }
0x2bbd1a8: {[OutputNodes.b Value[10]] }
0xc8517a8: {[featScaled Value[32 x 32 x 3 x *]] }
0xc852018: {[conv1.c Value[32 x 32 x 64 x *]] }
0xc852338: {[conv1.W Gradient[64 x 75]] [conv1.p Value[32 x 32 x 64 x *]] }
0xc8524f8: {[conv1.c Gradient[32 x 32 x 64 x *]] [conv1.y Value[32 x 32 x 64 x *]] }
0xc8526b8: {[conv1.p Gradient[32 x 32 x 64 x *]] [pool1 Value[15 x 15 x 64 x *]] }
0xc852878: {[conv2.c Value[15 x 15 x 64 x *]] }
0xc852a38: {[conv1.b Gradient[1 x 1 x 64]] [conv1.y Gradient[32 x 32 x 64 x *]] }
0xc8bd528: {[CE Gradient[1]] }
0xc8bd6e8: {[OutputNodes.z Gradient[10 x *]] [conv4.b Gradient[1 x 1 x 32]] [conv4.y Gradient[7 x 7 x 32 x *]] }
0xc8bd8a8: {[OutputNodes.t Gradient[10 x *]] }
0xc8bda68: {[OutputNodes.b Gradient[10]] }
0xc8c4238: {[conv2.W Gradient[64 x 1600]] [conv2.p Value[15 x 15 x 64 x *]] }
0xc8c4398: {[conv2.c Gradient[15 x 15 x 64 x *]] [conv2.y Value[15 x 15 x 64 x *]] }
0xc8c4558: {[conv2.p Gradient[15 x 15 x 64 x *]] [pool1 Gradient[15 x 15 x 64 x *]] [pool2 Value[7 x 7 x 64 x *]] }
0xc8c4718: {[conv3.c Value[7 x 7 x 64 x *]] }
0xc8c48d8: {[conv2.b Gradient[1 x 1 x 64]] [conv2.y Gradient[15 x 15 x 64 x *]] }
0xc8c4a98: {[conv3.W Gradient[3136 x 576]] [conv3.p Value[7 x 7 x 64 x *]] }
0xc8c4c58: {[conv3.c Gradient[7 x 7 x 64 x *]] [conv3.y Value[7 x 7 x 64 x *]] }
0xc8c4e18: {[conv4.c Value[7 x 7 x 32 x *]] }
0xc8c4fd8: {[conv3.p Gradient[7 x 7 x 64 x *]] [pool2 Gradient[7 x 7 x 64 x *]] }
0xc8c5198: {[conv4.W Gradient[1568 x 576]] [conv4.p Value[7 x 7 x 32 x *]] }
0xc8c5358: {[conv4.c Gradient[7 x 7 x 32 x *]] [conv4.y Value[7 x 7 x 32 x *]] }
0xc8c5518: {[OutputNodes.t Value[10 x *]] [conv3.b Gradient[1 x 1 x 64]] [conv3.y Gradient[7 x 7 x 64 x *]] [conv4.p Gradient[7 x 7 x 32 x *]] }
0xc8c56d8: {[OutputNodes.W Gradient[10 x 7 x 7 x 32]] [OutputNodes.z Value[10 x *]] }
0xc8c5898: {[CE Value[1]] }
0xc8c5e08: {[Err Value[1]] }

04/28/2016 17:02:51: No PreCompute nodes found, skipping PreCompute step.

04/28/2016 17:02:51: Starting Epoch 1: learning rate per sample = 0.000156  effective momentum = 0.900000  momentum as time constant = 607.4 samples

04/28/2016 17:02:51: Starting minibatch loop.
04/28/2016 17:02:54: Finished Epoch[ 1 of 5]: [Training Set] TrainLossPerSample = 2.3026172; TotalSamplesSeen = 100; EvalErrPerSample = 0.9; AvgLearningRatePerSample = 0.00015625; EpochTime=3.58178
04/28/2016 17:02:54: SGD: Saving checkpoint model '/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/Models/05_ConvLocal.1'

04/28/2016 17:02:55: Starting Epoch 2: learning rate per sample = 0.000156  effective momentum = 0.900000  momentum as time constant = 607.4 samples

04/28/2016 17:02:55: Starting minibatch loop.
04/28/2016 17:02:55: Finished Epoch[ 2 of 5]: [Training Set] TrainLossPerSample = 2.3025876; TotalSamplesSeen = 200; EvalErrPerSample = 0.94; AvgLearningRatePerSample = 0.00015625; EpochTime=0.432811
04/28/2016 17:02:55: SGD: Saving checkpoint model '/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/Models/05_ConvLocal.2'

04/28/2016 17:02:55: Starting Epoch 3: learning rate per sample = 0.000156  effective momentum = 0.900000  momentum as time constant = 607.4 samples

04/28/2016 17:02:55: Starting minibatch loop.
04/28/2016 17:02:56: Finished Epoch[ 3 of 5]: [Training Set] TrainLossPerSample = 2.302565; TotalSamplesSeen = 300; EvalErrPerSample = 0.93; AvgLearningRatePerSample = 0.00015625; EpochTime=0.410578
04/28/2016 17:02:56: SGD: Saving checkpoint model '/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/Models/05_ConvLocal.3'

04/28/2016 17:02:56: Starting Epoch 4: learning rate per sample = 0.000156  effective momentum = 0.900000  momentum as time constant = 607.4 samples

04/28/2016 17:02:56: Starting minibatch loop.
04/28/2016 17:02:56: Finished Epoch[ 4 of 5]: [Training Set] TrainLossPerSample = 2.3025299; TotalSamplesSeen = 400; EvalErrPerSample = 0.88; AvgLearningRatePerSample = 0.00015625; EpochTime=0.399472
04/28/2016 17:02:56: SGD: Saving checkpoint model '/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/Models/05_ConvLocal.4'

04/28/2016 17:02:56: Starting Epoch 5: learning rate per sample = 0.000156  effective momentum = 0.900000  momentum as time constant = 607.4 samples

04/28/2016 17:02:56: Starting minibatch loop.
04/28/2016 17:02:57: Finished Epoch[ 5 of 5]: [Training Set] TrainLossPerSample = 2.3026071; TotalSamplesSeen = 500; EvalErrPerSample = 0.93; AvgLearningRatePerSample = 0.00015625; EpochTime=0.394194
04/28/2016 17:02:57: SGD: Saving checkpoint model '/tmp/cntk-test-20160428170249.945990/CNTKTextFormatReader/Examples/Image/Miscellaneous/CIFAR-10_05_ConvLocal@release_gpu/Models/05_ConvLocal'
04/28/2016 17:02:57: CNTKCommandTrainEnd: Train

04/28/2016 17:02:57: Action "train" complete.


04/28/2016 17:02:57: ##############################################################################
04/28/2016 17:02:57: #                                                                            #
04/28/2016 17:02:57: # Action "test"                                                              #
04/28/2016 17:02:57: #                                                                            #
04/28/2016 17:02:57: ##############################################################################


Post-processing network...

3 roots:
	CE = CrossEntropyWithSoftmax()
	Err = ErrorPrediction()
	OutputNodes.z = Plus()

Validating network. 32 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *1]
Validating --> OutputNodes.W = LearnableParameter() :  -> [10 x 7 x 7 x 32]
Validating --> conv4.W = LearnableParameter() :  -> [1568 x 576]
Validating --> conv3.W = LearnableParameter() :  -> [3136 x 576]
Validating --> conv2.W = LearnableParameter() :  -> [64 x 1600]
Validating --> conv1.W = LearnableParameter() :  -> [64 x 75]
Validating --> features = InputValue() :  -> [32 x 32 x 3 x *1]
Validating --> featOffs = LearnableParameter() :  -> [1 x 1]
Validating --> featScaled = Minus (features, featOffs) : [32 x 32 x 3 x *1], [1 x 1] -> [32 x 32 x 3 x *1]
Validating --> conv1.c = Convolution (conv1.W, featScaled) : [64 x 75], [32 x 32 x 3 x *1] -> [32 x 32 x 64 x *1]
Validating --> conv1.b = LearnableParameter() :  -> [1 x 1 x 64]
Validating --> conv1.p = Plus (conv1.c, conv1.b) : [32 x 32 x 64 x *1], [1 x 1 x 64] -> [32 x 32 x 64 x *1]
Validating --> conv1.y = RectifiedLinear (conv1.p) : [32 x 32 x 64 x *1] -> [32 x 32 x 64 x *1]
Validating --> pool1 = MaxPooling (conv1.y) : [32 x 32 x 64 x *1] -> [15 x 15 x 64 x *1]
Validating --> conv2.c = Convolution (conv2.W, pool1) : [64 x 1600], [15 x 15 x 64 x *1] -> [15 x 15 x 64 x *1]
Validating --> conv2.b = LearnableParameter() :  -> [1 x 1 x 64]
Validating --> conv2.p = Plus (conv2.c, conv2.b) : [15 x 15 x 64 x *1], [1 x 1 x 64] -> [15 x 15 x 64 x *1]
Validating --> conv2.y = RectifiedLinear (conv2.p) : [15 x 15 x 64 x *1] -> [15 x 15 x 64 x *1]
Validating --> pool2 = MaxPooling (conv2.y) : [15 x 15 x 64 x *1] -> [7 x 7 x 64 x *1]
Validating --> conv3.c = Convolution (conv3.W, pool2) : [3136 x 576], [7 x 7 x 64 x *1] -> [7 x 7 x 64 x *1]
Validating --> conv3.b = LearnableParameter() :  -> [1 x 1 x 64]
Validating --> conv3.p = Plus (conv3.c, conv3.b) : [7 x 7 x 64 x *1], [1 x 1 x 64] -> [7 x 7 x 64 x *1]
Validating --> conv3.y = RectifiedLinear (conv3.p) : [7 x 7 x 64 x *1] -> [7 x 7 x 64 x *1]
Validating --> conv4.c = Convolution (conv4.W, conv3.y) : [1568 x 576], [7 x 7 x 64 x *1] -> [7 x 7 x 32 x *1]
Validating --> conv4.b = LearnableParameter() :  -> [1 x 1 x 32]
Validating --> conv4.p = Plus (conv4.c, conv4.b) : [7 x 7 x 32 x *1], [1 x 1 x 32] -> [7 x 7 x 32 x *1]
Validating --> conv4.y = RectifiedLinear (conv4.p) : [7 x 7 x 32 x *1] -> [7 x 7 x 32 x *1]
Validating --> OutputNodes.t = Times (OutputNodes.W, conv4.y) : [10 x 7 x 7 x 32], [7 x 7 x 32 x *1] -> [10 x *1]
Validating --> OutputNodes.b = LearnableParameter() :  -> [10]
Validating --> OutputNodes.z = Plus (OutputNodes.t, OutputNodes.b) : [10 x *1], [10] -> [10 x *1]
Validating --> CE = CrossEntropyWithSoftmax (labels, OutputNodes.z) : [10 x *1], [10 x *1] -> [1]
Validating --> Err = ErrorPrediction (labels, OutputNodes.z) : [10 x *1], [10 x *1] -> [1]

Validating network. 19 nodes to process in pass 2.


Validating network, final pass.


Using cuDNN convolution engine for geometry: Input: 32 x 32 x 3, Output: 32 x 32 x 64, Kernel: 5 x 5 x 3, Map: 1 x 1 x 64, Stride: 1 x 1 x 3, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using cuDNN convolution engine for geometry: Input: 32 x 32 x 64, Output: 15 x 15 x 64, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.

Using cuDNN convolution engine for geometry: Input: 15 x 15 x 64, Output: 15 x 15 x 64, Kernel: 5 x 5 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using cuDNN convolution engine for geometry: Input: 15 x 15 x 64, Output: 7 x 7 x 64, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.

Using reference convolution engine for geometry: Input: 7 x 7 x 64, Output: 7 x 7 x 64, Kernel: 3 x 3 x 64, Map: 64, Stride: 1 x 1 x 64, Sharing: (0, 0, 0), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using reference convolution engine for geometry: Input: 7 x 7 x 64, Output: 7 x 7 x 32, Kernel: 3 x 3 x 64, Map: 32, Stride: 1 x 1 x 64, Sharing: (0, 0, 0), AutoPad: (1), LowerPad: 0, UpperPad: 0.


13 out of 32 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[CE Gradient[1]] [Err Gradient[1]] [OutputNodes.W Gradient[10 x 7 x 7 x 32]] [OutputNodes.b Gradient[10]] [OutputNodes.t Gradient[10 x *1]] [OutputNodes.z Gradient[10 x *1]] [conv1.W Gradient[64 x 75]] [conv1.b Gradient[1 x 1 x 64]] [conv1.c Gradient[32 x 32 x 64 x *1]] [conv1.p Gradient[32 x 32 x 64 x *1]] [conv1.y Gradient[32 x 32 x 64 x *1]] [conv2.W Gradient[64 x 1600]] [conv2.b Gradient[1 x 1 x 64]] [conv2.c Gradient[15 x 15 x 64 x *1]] [conv2.p Gradient[15 x 15 x 64 x *1]] [conv2.y Gradient[15 x 15 x 64 x *1]] [conv3.W Gradient[3136 x 576]] [conv3.b Gradient[1 x 1 x 64]] [conv3.c Gradient[7 x 7 x 64 x *1]] [conv3.p Gradient[7 x 7 x 64 x *1]] [conv3.y Gradient[7 x 7 x 64 x *1]] [conv4.W Gradient[1568 x 576]] [conv4.b Gradient[1 x 1 x 32]] [conv4.c Gradient[7 x 7 x 32 x *1]] [conv4.p Gradient[7 x 7 x 32 x *1]] [conv4.y Gradient[7 x 7 x 32 x *1]] [featOffs Gradient[1 x 1]] [featScaled Gradient[32 x 32 x 3 x *1]] [features Gradient[32 x 32 x 3 x *1]] [labels Gradient[10 x *1]] [pool1 Gradient[15 x 15 x 64 x *1]] [pool2 Gradient[7 x 7 x 64 x *1]] }
0x1b4ce38: {[conv3.W Value[3136 x 576]] }
0x1b51a28: {[labels Value[10 x *1]] }
0x1b52348: {[OutputNodes.b Value[10]] }
0x1b54fa8: {[features Value[32 x 32 x 3 x *1]] }
0x1b64568: {[conv2.W Value[64 x 1600]] }
0x1b77548: {[conv2.b Value[1 x 1 x 64]] }
0x1b93ab8: {[featOffs Value[1 x 1]] }
0x1b9cbd8: {[conv3.y Value[7 x 7 x 64 x *1]] }
0x1b9cd98: {[conv4.c Value[7 x 7 x 32 x *1]] }
0x1b9d118: {[conv4.p Value[7 x 7 x 32 x *1]] }
0x1b9d2d8: {[conv4.y Value[7 x 7 x 32 x *1]] }
0x1b9d498: {[OutputNodes.t Value[10 x *1]] }
0x1ba84f8: {[conv4.b Value[1 x 1 x 32]] }
0x1ba8768: {[featScaled Value[32 x 32 x 3 x *1]] }
0x1ba8f18: {[conv1.c Value[32 x 32 x 64 x *1]] }
0x2bb1e08: {[OutputNodes.W Value[10 x 7 x 7 x 32]] }
0x2bbe6d8: {[conv1.b Value[1 x 1 x 64]] }
0x2d5ab78: {[conv2.p Value[15 x 15 x 64 x *1]] }
0x2d5ad38: {[conv2.y Value[15 x 15 x 64 x *1]] }
0x2d5aef8: {[pool2 Value[7 x 7 x 64 x *1]] }
0x2d5b0b8: {[conv3.c Value[7 x 7 x 64 x *1]] }
0x2d5b438: {[conv3.p Value[7 x 7 x 64 x *1]] }
0x2d60488: {[conv1.W Value[64 x 75]] }
0xc8a0ec8: {[conv4.W Value[1568 x 576]] }
0xc8d9898: {[conv1.p Value[32 x 32 x 64 x *1]] }
0xc8d9a58: {[conv1.y Value[32 x 32 x 64 x *1]] }
0xc8d9c18: {[pool1 Value[15 x 15 x 64 x *1]] }
0xc8d9dd8: {[conv2.c Value[15 x 15 x 64 x *1]] }
0xc8e0928: {[OutputNodes.z Value[10 x *1]] }
0xc8e0ae8: {[CE Value[1]] }
0xc8e1028: {[Err Value[1]] }
0x108f58e8: {[conv3.b Value[1 x 1 x 64]] }

Final Results: Minibatch[1-625]: SamplesSeen = 10000    Err: ErrorPrediction/Sample = 0.8462    CE: CrossEntropyWithSoftmax/Sample = 2.3025091    Perplexity = 9.9992397    

04/28/2016 17:03:10: Action "test" complete.

04/28/2016 17:03:10: __COMPLETED__