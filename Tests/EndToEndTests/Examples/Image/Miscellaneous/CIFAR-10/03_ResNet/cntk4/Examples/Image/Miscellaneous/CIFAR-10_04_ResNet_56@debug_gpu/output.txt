CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz
    Hardware threads: 24
    Total Memory: 33476764 kB
-------------------------------------------------------------------
Looking for data in: /cygdrive/c/Data/CNTKTestData
Copying test data to local directory
=== Running /cygdrive/c/R/CNTK/x64/debug/cntk.exe configFile=C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10/04_ResNet_56.cntk currentDirectory=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData RunDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu DataDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData ConfigDir=C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10 OutputDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu DeviceId=0 timestamping=true Train=[SGD=[maxEpochs=1]] Train=[SGD=[epochSize=128]] Train=[reader=[randomize=none]] Train=[SGD=[minibatchSize=16]] Test=[minibatchSize=16] stderr=-
-------------------------------------------------------------------
Build info: 

		Built time: Aug 16 2016 13:07:01
		Last modified date: Tue Aug 16 13:02:53 2016
		Build type: Debug
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: acml
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\R\cub-1.4.1
		CUDNN_PATH: C:\R\cudnn-7.0-win-x64-v4.0-prod\cuda
		Build Branch: mahilleb/CuDnn5Test-aux
		Build SHA1: 1c76f2c946964a61d528a90aad4e8f8fde1230aa
		Built by mahilleb on mahilleb57
		Build Path: C:\R\CNTK\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData
08/16/2016 12:14:52: Redirecting stderr to file -_Train_Test.log
08/16/2016 12:14:52: -------------------------------------------------------------------
08/16/2016 12:14:52: Build info: 

08/16/2016 12:14:52: 		Built time: Aug 16 2016 13:07:01
08/16/2016 12:14:52: 		Last modified date: Tue Aug 16 13:02:53 2016
08/16/2016 12:14:52: 		Build type: Debug
08/16/2016 12:14:52: 		Build target: GPU
08/16/2016 12:14:52: 		With 1bit-SGD: yes
08/16/2016 12:14:52: 		Math lib: acml
08/16/2016 12:14:52: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
08/16/2016 12:14:52: 		CUB_PATH: C:\R\cub-1.4.1
08/16/2016 12:14:52: 		CUDNN_PATH: C:\R\cudnn-7.0-win-x64-v4.0-prod\cuda
08/16/2016 12:14:52: 		Build Branch: mahilleb/CuDnn5Test-aux
08/16/2016 12:14:52: 		Build SHA1: 1c76f2c946964a61d528a90aad4e8f8fde1230aa
08/16/2016 12:14:52: 		Built by mahilleb on mahilleb57
08/16/2016 12:14:52: 		Build Path: C:\R\CNTK\Source\CNTK\
08/16/2016 12:14:52: -------------------------------------------------------------------
08/16/2016 12:14:52: -------------------------------------------------------------------
08/16/2016 12:14:52: GPU info:

08/16/2016 12:14:52: 		Device[0]: cores = 1536; computeCapability = 5.2; type = "GeForce GTX 960"; memory = 2048 MB
08/16/2016 12:14:52: -------------------------------------------------------------------

08/16/2016 12:14:52: Running on mahilleb57 at 2016/08/16 12:14:52
08/16/2016 12:14:52: Command line: 
C:\R\CNTK\x64\debug\cntk.exe  configFile=C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10/04_ResNet_56.cntk  currentDirectory=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData  RunDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu  DataDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData  ConfigDir=C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10  OutputDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu  DeviceId=0  timestamping=true  Train=[SGD=[maxEpochs=1]]  Train=[SGD=[epochSize=128]]  Train=[reader=[randomize=none]]  Train=[SGD=[minibatchSize=16]]  Test=[minibatchSize=16]  stderr=-



08/16/2016 12:14:52: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
08/16/2016 12:14:52: RootDir = "."
ConfigDir = "$RootDir$"
DataDir = "$RootDir$"
OutputDir = "$RootDir$/Output"
ModelDir = "$OutputDir$/Models"
ndlMacros="$ConfigDir$/Macros.ndl"
precision="float"
deviceId = 0
imageLayout = "cudnn"
initOnCPUOnly=true
prefetch="true"
parallelTrain="false"
command=Train:Test
stderr="$OutputDir$/04_ResNet_56"
traceLevel=1
numMBsToShowResult=200
Proj16to32Filename = "$ConfigDir$/16to32.txt"
Proj32to64Filename = "$ConfigDir$/32to64.txt"
Train=[
    action="train"
    modelPath="$ModelDir$/04_ResNet_56"
     NDLNetworkBuilder=[
        networkDescription="$ConfigDir$/04_ResNet_56.ndl"
    ]
    SGD=[
        epochSize=0
        minibatchSize=128
        learningRatesPerMB=0.1*1:1.0*80:0.1*40:0.01
        momentumPerMB=0.9
        maxEpochs=160
        L2RegWeight=0.0001
        dropoutRate=0
        ParallelTrain=[
            parallelizationMethod="DataParallelSGD"
            distributedMBReading="true"
            parallelizationStartEpoch=1
            DataParallelSGD=[
                gradientBits=32
            ]
        ]
    ]
    reader=[
        readerType="ImageReader"
        file="$DataDir$/cifar-10-batches-py/train_map.txt"
        randomize="auto"
        features=[
            width=32
            height=32
            channels=3
            cropType="random"
            cropRatio=0.8
            jitterType="uniRatio"
            interpolations="linear"
            meanFile="$DataDir$/cifar-10-batches-py/CIFAR-10_mean.xml"
        ]
        labels=[
            labelDim=10
        ]
    ]    
]
Test=[
    action="test"
    modelPath="$ModelDir$/04_ResNet_56"
    minibatchSize=512
    reader=[
        readerType="ImageReader"
        file="$DataDir$/cifar-10-batches-py/test_map.txt"
        randomize="none"
        features=[
            width=32
            height=32
            channels=3
            cropType="center"
            cropRatio=1
            jitterType="uniRatio"
            interpolations="linear"
            meanFile="$DataDir$/cifar-10-batches-py/CIFAR-10_mean.xml"
        ]
        labels=[
            labelDim=10
        ]
    ]    
]
currentDirectory=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData
RunDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu
DataDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData
ConfigDir=C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10
OutputDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu
DeviceId=0
timestamping=true
Train=[SGD=[maxEpochs=1]]
Train=[SGD=[epochSize=128]]
Train=[reader=[randomize=none]]
Train=[SGD=[minibatchSize=16]]
Test=[minibatchSize=16]
stderr=-

08/16/2016 12:14:52: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

08/16/2016 12:14:52: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
08/16/2016 12:14:52: RootDir = "."
ConfigDir = "."
DataDir = "."
OutputDir = "./Output"
ModelDir = "C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu/Models"
ndlMacros="C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10/Macros.ndl"
precision="float"
deviceId = 0
imageLayout = "cudnn"
initOnCPUOnly=true
prefetch="true"
parallelTrain="false"
command=Train:Test
stderr="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu/04_ResNet_56"
traceLevel=1
numMBsToShowResult=200
Proj16to32Filename = "C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10/16to32.txt"
Proj32to64Filename = "C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10/32to64.txt"
Train=[
    action="train"
    modelPath="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu/Models/04_ResNet_56"
     NDLNetworkBuilder=[
        networkDescription="C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10/04_ResNet_56.ndl"
    ]
    SGD=[
        epochSize=0
        minibatchSize=128
        learningRatesPerMB=0.1*1:1.0*80:0.1*40:0.01
        momentumPerMB=0.9
        maxEpochs=160
        L2RegWeight=0.0001
        dropoutRate=0
        ParallelTrain=[
            parallelizationMethod="DataParallelSGD"
            distributedMBReading="true"
            parallelizationStartEpoch=1
            DataParallelSGD=[
                gradientBits=32
            ]
        ]
    ]
    reader=[
        readerType="ImageReader"
        file="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData/cifar-10-batches-py/train_map.txt"
        randomize="auto"
        features=[
            width=32
            height=32
            channels=3
            cropType="random"
            cropRatio=0.8
            jitterType="uniRatio"
            interpolations="linear"
            meanFile="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData/cifar-10-batches-py/CIFAR-10_mean.xml"
        ]
        labels=[
            labelDim=10
        ]
    ]    
]
Test=[
    action="test"
    modelPath="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu/Models/04_ResNet_56"
    minibatchSize=512
    reader=[
        readerType="ImageReader"
        file="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData/cifar-10-batches-py/test_map.txt"
        randomize="none"
        features=[
            width=32
            height=32
            channels=3
            cropType="center"
            cropRatio=1
            jitterType="uniRatio"
            interpolations="linear"
            meanFile="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData/cifar-10-batches-py/CIFAR-10_mean.xml"
        ]
        labels=[
            labelDim=10
        ]
    ]    
]
currentDirectory=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData
RunDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu
DataDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData
ConfigDir=C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10
OutputDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu
DeviceId=0
timestamping=true
Train=[SGD=[maxEpochs=1]]
Train=[SGD=[epochSize=128]]
Train=[reader=[randomize=none]]
Train=[SGD=[minibatchSize=16]]
Test=[minibatchSize=16]
stderr=-

08/16/2016 12:14:52: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

08/16/2016 12:14:52: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: 04_ResNet_56.cntk:command=Train:Test
configparameters: 04_ResNet_56.cntk:ConfigDir=C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10
configparameters: 04_ResNet_56.cntk:currentDirectory=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData
configparameters: 04_ResNet_56.cntk:DataDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData
configparameters: 04_ResNet_56.cntk:deviceId=0
configparameters: 04_ResNet_56.cntk:imageLayout=cudnn
configparameters: 04_ResNet_56.cntk:initOnCPUOnly=true
configparameters: 04_ResNet_56.cntk:ModelDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu/Models
configparameters: 04_ResNet_56.cntk:ndlMacros=C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10/Macros.ndl
configparameters: 04_ResNet_56.cntk:numMBsToShowResult=200
configparameters: 04_ResNet_56.cntk:OutputDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu
configparameters: 04_ResNet_56.cntk:parallelTrain=false
configparameters: 04_ResNet_56.cntk:precision=float
configparameters: 04_ResNet_56.cntk:prefetch=true
configparameters: 04_ResNet_56.cntk:Proj16to32Filename=C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10/16to32.txt
configparameters: 04_ResNet_56.cntk:Proj32to64Filename=C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10/32to64.txt
configparameters: 04_ResNet_56.cntk:RootDir=.
configparameters: 04_ResNet_56.cntk:RunDir=C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu
configparameters: 04_ResNet_56.cntk:stderr=-
configparameters: 04_ResNet_56.cntk:Test=[
    action="test"
    modelPath="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu/Models/04_ResNet_56"
    minibatchSize=512
    reader=[
        readerType="ImageReader"
        file="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData/cifar-10-batches-py/test_map.txt"
        randomize="none"
        features=[
            width=32
            height=32
            channels=3
            cropType="center"
            cropRatio=1
            jitterType="uniRatio"
            interpolations="linear"
            meanFile="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData/cifar-10-batches-py/CIFAR-10_mean.xml"
        ]
        labels=[
            labelDim=10
        ]
    ]    
] [minibatchSize=16]

configparameters: 04_ResNet_56.cntk:timestamping=true
configparameters: 04_ResNet_56.cntk:traceLevel=1
configparameters: 04_ResNet_56.cntk:Train=[
    action="train"
    modelPath="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu/Models/04_ResNet_56"
     NDLNetworkBuilder=[
        networkDescription="C:\R\CNTK\Examples\Image\Miscellaneous\CIFAR-10/04_ResNet_56.ndl"
    ]
    SGD=[
        epochSize=0
        minibatchSize=128
        learningRatesPerMB=0.1*1:1.0*80:0.1*40:0.01
        momentumPerMB=0.9
        maxEpochs=160
        L2RegWeight=0.0001
        dropoutRate=0
        ParallelTrain=[
            parallelizationMethod="DataParallelSGD"
            distributedMBReading="true"
            parallelizationStartEpoch=1
            DataParallelSGD=[
                gradientBits=32
            ]
        ]
    ]
    reader=[
        readerType="ImageReader"
        file="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData/cifar-10-batches-py/train_map.txt"
        randomize="auto"
        features=[
            width=32
            height=32
            channels=3
            cropType="random"
            cropRatio=0.8
            jitterType="uniRatio"
            interpolations="linear"
            meanFile="C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu\TestData/cifar-10-batches-py/CIFAR-10_mean.xml"
        ]
        labels=[
            labelDim=10
        ]
    ]    
] [SGD=[maxEpochs=1]] [SGD=[epochSize=128]] [reader=[randomize=none]] [SGD=[minibatchSize=16]]

08/16/2016 12:14:53: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
08/16/2016 12:14:53: Commands: Train Test
08/16/2016 12:14:53: Precision = "float"
08/16/2016 12:14:53: CNTKModelPath: C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu/Models/04_ResNet_56
08/16/2016 12:14:53: CNTKCommandTrainInfo: Train : 1
08/16/2016 12:14:53: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 1

08/16/2016 12:14:53: ##############################################################################
08/16/2016 12:14:53: #                                                                            #
08/16/2016 12:14:53: # Action "train"                                                             #
08/16/2016 12:14:53: #                                                                            #
08/16/2016 12:14:53: ##############################################################################

08/16/2016 12:14:53: CNTKCommandTrainBegin: Train
NDLBuilder Using GPU 0
useParallelTrain option is not enabled. ParallelTrain config will be ignored.
08/16/2016 12:14:59: Creating virgin network.
Node 'conv1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 27] <- 0.000000.
Node 'conv1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'conv1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'conv1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'conv1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_1.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_1.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_2.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_2.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_3.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_3.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_4.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_4.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_5.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_5.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_6.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_6.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_7.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_7.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_8.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_8.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_9.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_9.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_10.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_10.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_11.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_11.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_12.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_12.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_13.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_13.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_14.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_14.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_15.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_15.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_16.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_16.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_17.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_17.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_18.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- 0.000000.
Node 'rn1_18.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn2_1_Wproj' (LearnableParameter operation): Initializing Parameter[32 x 16] <- 0.000000.
Node 'rn2_1.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 144] <- 0.000000.
Node 'rn2_1.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_1.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c_proj.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c_proj.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c_proj.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c_proj.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_2.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_2.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_3.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_3.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_4.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_4.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_5.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_5.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_6.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_6.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_7.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_7.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_8.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_8.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_9.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_9.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_10.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_10.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_11.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_11.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_12.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_12.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_13.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_13.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_14.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_14.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_15.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_15.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_16.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_16.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_17.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_17.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_18.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- 0.000000.
Node 'rn2_18.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn3_1_Wproj' (LearnableParameter operation): Initializing Parameter[64 x 32] <- 0.000000.
Node 'rn3_1.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 288] <- 0.000000.
Node 'rn3_1.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_1.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c_proj.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c_proj.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c_proj.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c_proj.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_2.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_2.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_3.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_3.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_4.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_4.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_5.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_5.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_6.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_6.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_7.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_7.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_8.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_8.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_9.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_9.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_10.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_10.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_11.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_11.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_12.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_12.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_13.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_13.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_14.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_14.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_15.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_15.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_16.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_16.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_17.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_17.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_18.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- 0.000000.
Node 'rn3_18.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'OutputNodes.W' (LearnableParameter operation): Initializing Parameter[10 x 64] <- 0.000000.
Node 'OutputNodes.b' (LearnableParameter operation): Initializing Parameter[10] <- 0.000000.
Node 'conv1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 27] <- gaussian(seed=1, range=0.038490*0.260000, onCPU=false).
Microsoft::MSR::CNTK::GPUMatrix<ElemType>::SetGaussianRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==4
Node 'conv1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'conv1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'conv1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'conv1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=2, range=0.016667*7.070000, onCPU=false).
Node 'rn1_1.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_1.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=3, range=0.016667*7.070000, onCPU=false).
Node 'rn1_1.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_1.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_1.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=4, range=0.016667*7.070000, onCPU=false).
Node 'rn1_2.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_2.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=5, range=0.016667*7.070000, onCPU=false).
Node 'rn1_2.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_2.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_2.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=6, range=0.016667*7.070000, onCPU=false).
Node 'rn1_3.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_3.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=7, range=0.016667*7.070000, onCPU=false).
Node 'rn1_3.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_3.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_3.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=8, range=0.016667*7.070000, onCPU=false).
Node 'rn1_4.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_4.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=9, range=0.016667*7.070000, onCPU=false).
Node 'rn1_4.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_4.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_4.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=10, range=0.016667*7.070000, onCPU=false).
Node 'rn1_5.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_5.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=11, range=0.016667*7.070000, onCPU=false).
Node 'rn1_5.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_5.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_5.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=12, range=0.016667*7.070000, onCPU=false).
Node 'rn1_6.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_6.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=13, range=0.016667*7.070000, onCPU=false).
Node 'rn1_6.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_6.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_6.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=14, range=0.016667*7.070000, onCPU=false).
Node 'rn1_7.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_7.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=15, range=0.016667*7.070000, onCPU=false).
Node 'rn1_7.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_7.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_7.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=16, range=0.016667*7.070000, onCPU=false).
Node 'rn1_8.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_8.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=17, range=0.016667*7.070000, onCPU=false).
Node 'rn1_8.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_8.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_8.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=18, range=0.016667*7.070000, onCPU=false).
Node 'rn1_9.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_9.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=19, range=0.016667*7.070000, onCPU=false).
Node 'rn1_9.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_9.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_9.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=20, range=0.016667*7.070000, onCPU=false).
Node 'rn1_10.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_10.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=21, range=0.016667*7.070000, onCPU=false).
Node 'rn1_10.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_10.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_10.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=22, range=0.016667*7.070000, onCPU=false).
Node 'rn1_11.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_11.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=23, range=0.016667*7.070000, onCPU=false).
Node 'rn1_11.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_11.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_11.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=24, range=0.016667*7.070000, onCPU=false).
Node 'rn1_12.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_12.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=25, range=0.016667*7.070000, onCPU=false).
Node 'rn1_12.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_12.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_12.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=26, range=0.016667*7.070000, onCPU=false).
Node 'rn1_13.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_13.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=27, range=0.016667*7.070000, onCPU=false).
Node 'rn1_13.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_13.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_13.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=28, range=0.016667*7.070000, onCPU=false).
Node 'rn1_14.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_14.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=29, range=0.016667*7.070000, onCPU=false).
Node 'rn1_14.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_14.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_14.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=30, range=0.016667*7.070000, onCPU=false).
Node 'rn1_15.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_15.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=31, range=0.016667*7.070000, onCPU=false).
Node 'rn1_15.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_15.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_15.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=32, range=0.016667*7.070000, onCPU=false).
Node 'rn1_16.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_16.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=33, range=0.016667*7.070000, onCPU=false).
Node 'rn1_16.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_16.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_16.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=34, range=0.016667*7.070000, onCPU=false).
Node 'rn1_17.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_17.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=35, range=0.016667*7.070000, onCPU=false).
Node 'rn1_17.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_17.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_17.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c1.c.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=36, range=0.016667*7.070000, onCPU=false).
Node 'rn1_18.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_18.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c2.W' (LearnableParameter operation): Initializing Parameter[16 x 144] <- gaussian(seed=37, range=0.016667*7.070000, onCPU=false).
Node 'rn1_18.c2.c.b' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c2.c.sc' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 1.000000.
Node 'rn1_18.c2.c.m' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn1_18.c2.c.isd' (LearnableParameter operation): Initializing Parameter[16 x 1] <- 0.000000.
Node 'rn2_1.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 144] <- gaussian(seed=38, range=0.016667*7.070000, onCPU=false).
Node 'rn2_1.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_1.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=39, range=0.011785*7.070000, onCPU=false).
Node 'rn2_1.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_1.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c_proj.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c_proj.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_1.c_proj.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_1.c_proj.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=40, range=0.011785*7.070000, onCPU=false).
Node 'rn2_2.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_2.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=41, range=0.011785*7.070000, onCPU=false).
Node 'rn2_2.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_2.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_2.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=42, range=0.011785*7.070000, onCPU=false).
Node 'rn2_3.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_3.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=43, range=0.011785*7.070000, onCPU=false).
Node 'rn2_3.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_3.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_3.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=44, range=0.011785*7.070000, onCPU=false).
Node 'rn2_4.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_4.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=45, range=0.011785*7.070000, onCPU=false).
Node 'rn2_4.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_4.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_4.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=46, range=0.011785*7.070000, onCPU=false).
Node 'rn2_5.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_5.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=47, range=0.011785*7.070000, onCPU=false).
Node 'rn2_5.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_5.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_5.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=48, range=0.011785*7.070000, onCPU=false).
Node 'rn2_6.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_6.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=49, range=0.011785*7.070000, onCPU=false).
Node 'rn2_6.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_6.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_6.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=50, range=0.011785*7.070000, onCPU=false).
Node 'rn2_7.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_7.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=51, range=0.011785*7.070000, onCPU=false).
Node 'rn2_7.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_7.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_7.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=52, range=0.011785*7.070000, onCPU=false).
Node 'rn2_8.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_8.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=53, range=0.011785*7.070000, onCPU=false).
Node 'rn2_8.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_8.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_8.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=54, range=0.011785*7.070000, onCPU=false).
Node 'rn2_9.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_9.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=55, range=0.011785*7.070000, onCPU=false).
Node 'rn2_9.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_9.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_9.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=56, range=0.011785*7.070000, onCPU=false).
Node 'rn2_10.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_10.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=57, range=0.011785*7.070000, onCPU=false).
Node 'rn2_10.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_10.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_10.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=58, range=0.011785*7.070000, onCPU=false).
Node 'rn2_11.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_11.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=59, range=0.011785*7.070000, onCPU=false).
Node 'rn2_11.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_11.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_11.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=60, range=0.011785*7.070000, onCPU=false).
Node 'rn2_12.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_12.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=61, range=0.011785*7.070000, onCPU=false).
Node 'rn2_12.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_12.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_12.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=62, range=0.011785*7.070000, onCPU=false).
Node 'rn2_13.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_13.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=63, range=0.011785*7.070000, onCPU=false).
Node 'rn2_13.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_13.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_13.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=64, range=0.011785*7.070000, onCPU=false).
Node 'rn2_14.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_14.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=65, range=0.011785*7.070000, onCPU=false).
Node 'rn2_14.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_14.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_14.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=66, range=0.011785*7.070000, onCPU=false).
Node 'rn2_15.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_15.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=67, range=0.011785*7.070000, onCPU=false).
Node 'rn2_15.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_15.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_15.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=68, range=0.011785*7.070000, onCPU=false).
Node 'rn2_16.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_16.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=69, range=0.011785*7.070000, onCPU=false).
Node 'rn2_16.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_16.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_16.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=70, range=0.011785*7.070000, onCPU=false).
Node 'rn2_17.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_17.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=71, range=0.011785*7.070000, onCPU=false).
Node 'rn2_17.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_17.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_17.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c1.c.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=72, range=0.011785*7.070000, onCPU=false).
Node 'rn2_18.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_18.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c2.W' (LearnableParameter operation): Initializing Parameter[32 x 288] <- gaussian(seed=73, range=0.011785*7.070000, onCPU=false).
Node 'rn2_18.c2.c.b' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c2.c.sc' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 1.000000.
Node 'rn2_18.c2.c.m' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn2_18.c2.c.isd' (LearnableParameter operation): Initializing Parameter[32 x 1] <- 0.000000.
Node 'rn3_1.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 288] <- gaussian(seed=74, range=0.011785*7.070000, onCPU=false).
Node 'rn3_1.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_1.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=75, range=0.008333*7.070000, onCPU=false).
Node 'rn3_1.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_1.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c_proj.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c_proj.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_1.c_proj.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_1.c_proj.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=76, range=0.008333*7.070000, onCPU=false).
Node 'rn3_2.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_2.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=77, range=0.008333*7.070000, onCPU=false).
Node 'rn3_2.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_2.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_2.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=78, range=0.008333*7.070000, onCPU=false).
Node 'rn3_3.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_3.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=79, range=0.008333*7.070000, onCPU=false).
Node 'rn3_3.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_3.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_3.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=80, range=0.008333*7.070000, onCPU=false).
Node 'rn3_4.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_4.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=81, range=0.008333*7.070000, onCPU=false).
Node 'rn3_4.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_4.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_4.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=82, range=0.008333*7.070000, onCPU=false).
Node 'rn3_5.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_5.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=83, range=0.008333*7.070000, onCPU=false).
Node 'rn3_5.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_5.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_5.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=84, range=0.008333*7.070000, onCPU=false).
Node 'rn3_6.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_6.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=85, range=0.008333*7.070000, onCPU=false).
Node 'rn3_6.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_6.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_6.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=86, range=0.008333*7.070000, onCPU=false).
Node 'rn3_7.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_7.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=87, range=0.008333*7.070000, onCPU=false).
Node 'rn3_7.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_7.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_7.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=88, range=0.008333*7.070000, onCPU=false).
Node 'rn3_8.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_8.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=89, range=0.008333*7.070000, onCPU=false).
Node 'rn3_8.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_8.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_8.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=90, range=0.008333*7.070000, onCPU=false).
Node 'rn3_9.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_9.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=91, range=0.008333*7.070000, onCPU=false).
Node 'rn3_9.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_9.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_9.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=92, range=0.008333*7.070000, onCPU=false).
Node 'rn3_10.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_10.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=93, range=0.008333*7.070000, onCPU=false).
Node 'rn3_10.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_10.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_10.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=94, range=0.008333*7.070000, onCPU=false).
Node 'rn3_11.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_11.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=95, range=0.008333*7.070000, onCPU=false).
Node 'rn3_11.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_11.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_11.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=96, range=0.008333*7.070000, onCPU=false).
Node 'rn3_12.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_12.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=97, range=0.008333*7.070000, onCPU=false).
Node 'rn3_12.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_12.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_12.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=98, range=0.008333*7.070000, onCPU=false).
Node 'rn3_13.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_13.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=99, range=0.008333*7.070000, onCPU=false).
Node 'rn3_13.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_13.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_13.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=100, range=0.008333*7.070000, onCPU=false).
Node 'rn3_14.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_14.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=101, range=0.008333*7.070000, onCPU=false).
Node 'rn3_14.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_14.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_14.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=102, range=0.008333*7.070000, onCPU=false).
Node 'rn3_15.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_15.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=103, range=0.008333*7.070000, onCPU=false).
Node 'rn3_15.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_15.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_15.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=104, range=0.008333*7.070000, onCPU=false).
Node 'rn3_16.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_16.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=105, range=0.008333*7.070000, onCPU=false).
Node 'rn3_16.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_16.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_16.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=106, range=0.008333*7.070000, onCPU=false).
Node 'rn3_17.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_17.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=107, range=0.008333*7.070000, onCPU=false).
Node 'rn3_17.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_17.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_17.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c1.c.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=108, range=0.008333*7.070000, onCPU=false).
Node 'rn3_18.c1.c.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c1.c.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_18.c1.c.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c1.c.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c2.W' (LearnableParameter operation): Initializing Parameter[64 x 576] <- gaussian(seed=109, range=0.008333*7.070000, onCPU=false).
Node 'rn3_18.c2.c.b' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c2.c.sc' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 1.000000.
Node 'rn3_18.c2.c.m' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'rn3_18.c2.c.isd' (LearnableParameter operation): Initializing Parameter[64 x 1] <- 0.000000.
Node 'OutputNodes.W' (LearnableParameter operation): Initializing Parameter[10 x 64] <- gaussian(seed=110, range=0.025000*0.400000, onCPU=false).
Node 'OutputNodes.b' (LearnableParameter operation): Initializing Parameter[10] <- 0.000000.

Post-processing network...

3 roots:
	CE = CrossEntropyWithSoftmax()
	Err = ErrorPrediction()
	OutputNodes.z = Plus()

Validating network. 949 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *]
Validating --> OutputNodes.W = LearnableParameter() :  -> [10 x 64]
Validating --> rn3_18.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_18.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_17.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_17.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_16.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_16.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_15.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_15.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_14.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_14.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_13.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_13.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_12.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_12.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_11.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_11.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_10.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_10.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_9.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_9.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_8.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_8.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_7.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_7.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_6.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_6.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_5.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_5.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_4.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_4.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_3.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_3.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_2.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_2.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_1.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_1.c1.c.W = LearnableParameter() :  -> [64 x 288]
Validating --> rn2_18.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_18.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_17.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_17.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_16.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_16.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_15.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_15.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_14.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_14.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_13.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_13.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_12.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_12.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_11.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_11.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_10.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_10.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_9.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_9.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_8.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_8.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_7.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_7.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_6.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_6.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_5.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_5.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_4.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_4.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_3.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_3.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_2.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_2.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_1.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_1.c1.c.W = LearnableParameter() :  -> [32 x 144]
Validating --> rn1_18.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_18.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_17.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_17.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_16.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_16.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_15.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_15.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_14.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_14.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_13.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_13.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_12.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_12.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_11.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_11.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_10.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_10.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_9.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_9.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_8.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_8.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_7.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_7.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_6.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_6.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_5.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_5.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_4.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_4.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_3.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_3.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_2.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_2.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_1.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_1.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> conv1.c.W = LearnableParameter() :  -> [16 x 27]
Validating --> features = InputValue() :  -> [32 x 32 x 3 x *]
Validating --> conv1.c.c.c = Convolution (conv1.c.W, features) : [16 x 27], [32 x 32 x 3 x *] -> [32 x 32 x 16 x *]
Validating --> conv1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.y = BatchNormalization (conv1.c.c.c, conv1.c.c.sc, conv1.c.c.b, conv1.c.c.m, conv1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> conv1.y = RectifiedLinear (conv1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_1.c1.c.c.c = Convolution (rn1_1.c1.c.W, conv1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_1.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c1.c.c.y = BatchNormalization (rn1_1.c1.c.c.c, rn1_1.c1.c.c.sc, rn1_1.c1.c.c.b, rn1_1.c1.c.c.m, rn1_1.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_1.c1.y = RectifiedLinear (rn1_1.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_1.c2.c.c = Convolution (rn1_1.c2.W, rn1_1.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_1.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c2.c.y = BatchNormalization (rn1_1.c2.c.c, rn1_1.c2.c.sc, rn1_1.c2.c.b, rn1_1.c2.c.m, rn1_1.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_1.p = Plus (rn1_1.c2.c.y, conv1.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_1.y = RectifiedLinear (rn1_1.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_2.c1.c.c.c = Convolution (rn1_2.c1.c.W, rn1_1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_2.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c1.c.c.y = BatchNormalization (rn1_2.c1.c.c.c, rn1_2.c1.c.c.sc, rn1_2.c1.c.c.b, rn1_2.c1.c.c.m, rn1_2.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_2.c1.y = RectifiedLinear (rn1_2.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_2.c2.c.c = Convolution (rn1_2.c2.W, rn1_2.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_2.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c2.c.y = BatchNormalization (rn1_2.c2.c.c, rn1_2.c2.c.sc, rn1_2.c2.c.b, rn1_2.c2.c.m, rn1_2.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_2.p = Plus (rn1_2.c2.c.y, rn1_1.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_2.y = RectifiedLinear (rn1_2.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_3.c1.c.c.c = Convolution (rn1_3.c1.c.W, rn1_2.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_3.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c1.c.c.y = BatchNormalization (rn1_3.c1.c.c.c, rn1_3.c1.c.c.sc, rn1_3.c1.c.c.b, rn1_3.c1.c.c.m, rn1_3.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_3.c1.y = RectifiedLinear (rn1_3.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_3.c2.c.c = Convolution (rn1_3.c2.W, rn1_3.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_3.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c2.c.y = BatchNormalization (rn1_3.c2.c.c, rn1_3.c2.c.sc, rn1_3.c2.c.b, rn1_3.c2.c.m, rn1_3.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_3.p = Plus (rn1_3.c2.c.y, rn1_2.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_3.y = RectifiedLinear (rn1_3.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_4.c1.c.c.c = Convolution (rn1_4.c1.c.W, rn1_3.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_4.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c1.c.c.y = BatchNormalization (rn1_4.c1.c.c.c, rn1_4.c1.c.c.sc, rn1_4.c1.c.c.b, rn1_4.c1.c.c.m, rn1_4.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_4.c1.y = RectifiedLinear (rn1_4.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_4.c2.c.c = Convolution (rn1_4.c2.W, rn1_4.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_4.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c2.c.y = BatchNormalization (rn1_4.c2.c.c, rn1_4.c2.c.sc, rn1_4.c2.c.b, rn1_4.c2.c.m, rn1_4.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_4.p = Plus (rn1_4.c2.c.y, rn1_3.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_4.y = RectifiedLinear (rn1_4.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_5.c1.c.c.c = Convolution (rn1_5.c1.c.W, rn1_4.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_5.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c1.c.c.y = BatchNormalization (rn1_5.c1.c.c.c, rn1_5.c1.c.c.sc, rn1_5.c1.c.c.b, rn1_5.c1.c.c.m, rn1_5.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_5.c1.y = RectifiedLinear (rn1_5.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_5.c2.c.c = Convolution (rn1_5.c2.W, rn1_5.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_5.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c2.c.y = BatchNormalization (rn1_5.c2.c.c, rn1_5.c2.c.sc, rn1_5.c2.c.b, rn1_5.c2.c.m, rn1_5.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_5.p = Plus (rn1_5.c2.c.y, rn1_4.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_5.y = RectifiedLinear (rn1_5.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_6.c1.c.c.c = Convolution (rn1_6.c1.c.W, rn1_5.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_6.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c1.c.c.y = BatchNormalization (rn1_6.c1.c.c.c, rn1_6.c1.c.c.sc, rn1_6.c1.c.c.b, rn1_6.c1.c.c.m, rn1_6.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_6.c1.y = RectifiedLinear (rn1_6.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_6.c2.c.c = Convolution (rn1_6.c2.W, rn1_6.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_6.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c2.c.y = BatchNormalization (rn1_6.c2.c.c, rn1_6.c2.c.sc, rn1_6.c2.c.b, rn1_6.c2.c.m, rn1_6.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_6.p = Plus (rn1_6.c2.c.y, rn1_5.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_6.y = RectifiedLinear (rn1_6.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_7.c1.c.c.c = Convolution (rn1_7.c1.c.W, rn1_6.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_7.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c1.c.c.y = BatchNormalization (rn1_7.c1.c.c.c, rn1_7.c1.c.c.sc, rn1_7.c1.c.c.b, rn1_7.c1.c.c.m, rn1_7.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_7.c1.y = RectifiedLinear (rn1_7.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_7.c2.c.c = Convolution (rn1_7.c2.W, rn1_7.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_7.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c2.c.y = BatchNormalization (rn1_7.c2.c.c, rn1_7.c2.c.sc, rn1_7.c2.c.b, rn1_7.c2.c.m, rn1_7.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_7.p = Plus (rn1_7.c2.c.y, rn1_6.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_7.y = RectifiedLinear (rn1_7.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_8.c1.c.c.c = Convolution (rn1_8.c1.c.W, rn1_7.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_8.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c1.c.c.y = BatchNormalization (rn1_8.c1.c.c.c, rn1_8.c1.c.c.sc, rn1_8.c1.c.c.b, rn1_8.c1.c.c.m, rn1_8.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_8.c1.y = RectifiedLinear (rn1_8.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_8.c2.c.c = Convolution (rn1_8.c2.W, rn1_8.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_8.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c2.c.y = BatchNormalization (rn1_8.c2.c.c, rn1_8.c2.c.sc, rn1_8.c2.c.b, rn1_8.c2.c.m, rn1_8.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_8.p = Plus (rn1_8.c2.c.y, rn1_7.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_8.y = RectifiedLinear (rn1_8.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_9.c1.c.c.c = Convolution (rn1_9.c1.c.W, rn1_8.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_9.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c1.c.c.y = BatchNormalization (rn1_9.c1.c.c.c, rn1_9.c1.c.c.sc, rn1_9.c1.c.c.b, rn1_9.c1.c.c.m, rn1_9.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_9.c1.y = RectifiedLinear (rn1_9.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_9.c2.c.c = Convolution (rn1_9.c2.W, rn1_9.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_9.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c2.c.y = BatchNormalization (rn1_9.c2.c.c, rn1_9.c2.c.sc, rn1_9.c2.c.b, rn1_9.c2.c.m, rn1_9.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_9.p = Plus (rn1_9.c2.c.y, rn1_8.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_9.y = RectifiedLinear (rn1_9.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_10.c1.c.c.c = Convolution (rn1_10.c1.c.W, rn1_9.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_10.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c1.c.c.y = BatchNormalization (rn1_10.c1.c.c.c, rn1_10.c1.c.c.sc, rn1_10.c1.c.c.b, rn1_10.c1.c.c.m, rn1_10.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_10.c1.y = RectifiedLinear (rn1_10.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_10.c2.c.c = Convolution (rn1_10.c2.W, rn1_10.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_10.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c2.c.y = BatchNormalization (rn1_10.c2.c.c, rn1_10.c2.c.sc, rn1_10.c2.c.b, rn1_10.c2.c.m, rn1_10.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_10.p = Plus (rn1_10.c2.c.y, rn1_9.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_10.y = RectifiedLinear (rn1_10.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_11.c1.c.c.c = Convolution (rn1_11.c1.c.W, rn1_10.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_11.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c1.c.c.y = BatchNormalization (rn1_11.c1.c.c.c, rn1_11.c1.c.c.sc, rn1_11.c1.c.c.b, rn1_11.c1.c.c.m, rn1_11.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_11.c1.y = RectifiedLinear (rn1_11.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_11.c2.c.c = Convolution (rn1_11.c2.W, rn1_11.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_11.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c2.c.y = BatchNormalization (rn1_11.c2.c.c, rn1_11.c2.c.sc, rn1_11.c2.c.b, rn1_11.c2.c.m, rn1_11.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_11.p = Plus (rn1_11.c2.c.y, rn1_10.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_11.y = RectifiedLinear (rn1_11.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_12.c1.c.c.c = Convolution (rn1_12.c1.c.W, rn1_11.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_12.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c1.c.c.y = BatchNormalization (rn1_12.c1.c.c.c, rn1_12.c1.c.c.sc, rn1_12.c1.c.c.b, rn1_12.c1.c.c.m, rn1_12.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_12.c1.y = RectifiedLinear (rn1_12.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_12.c2.c.c = Convolution (rn1_12.c2.W, rn1_12.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_12.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c2.c.y = BatchNormalization (rn1_12.c2.c.c, rn1_12.c2.c.sc, rn1_12.c2.c.b, rn1_12.c2.c.m, rn1_12.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_12.p = Plus (rn1_12.c2.c.y, rn1_11.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_12.y = RectifiedLinear (rn1_12.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_13.c1.c.c.c = Convolution (rn1_13.c1.c.W, rn1_12.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_13.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c1.c.c.y = BatchNormalization (rn1_13.c1.c.c.c, rn1_13.c1.c.c.sc, rn1_13.c1.c.c.b, rn1_13.c1.c.c.m, rn1_13.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_13.c1.y = RectifiedLinear (rn1_13.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_13.c2.c.c = Convolution (rn1_13.c2.W, rn1_13.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_13.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c2.c.y = BatchNormalization (rn1_13.c2.c.c, rn1_13.c2.c.sc, rn1_13.c2.c.b, rn1_13.c2.c.m, rn1_13.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_13.p = Plus (rn1_13.c2.c.y, rn1_12.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_13.y = RectifiedLinear (rn1_13.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_14.c1.c.c.c = Convolution (rn1_14.c1.c.W, rn1_13.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_14.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c1.c.c.y = BatchNormalization (rn1_14.c1.c.c.c, rn1_14.c1.c.c.sc, rn1_14.c1.c.c.b, rn1_14.c1.c.c.m, rn1_14.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_14.c1.y = RectifiedLinear (rn1_14.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_14.c2.c.c = Convolution (rn1_14.c2.W, rn1_14.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_14.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c2.c.y = BatchNormalization (rn1_14.c2.c.c, rn1_14.c2.c.sc, rn1_14.c2.c.b, rn1_14.c2.c.m, rn1_14.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_14.p = Plus (rn1_14.c2.c.y, rn1_13.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_14.y = RectifiedLinear (rn1_14.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_15.c1.c.c.c = Convolution (rn1_15.c1.c.W, rn1_14.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_15.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c1.c.c.y = BatchNormalization (rn1_15.c1.c.c.c, rn1_15.c1.c.c.sc, rn1_15.c1.c.c.b, rn1_15.c1.c.c.m, rn1_15.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_15.c1.y = RectifiedLinear (rn1_15.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_15.c2.c.c = Convolution (rn1_15.c2.W, rn1_15.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_15.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c2.c.y = BatchNormalization (rn1_15.c2.c.c, rn1_15.c2.c.sc, rn1_15.c2.c.b, rn1_15.c2.c.m, rn1_15.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_15.p = Plus (rn1_15.c2.c.y, rn1_14.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_15.y = RectifiedLinear (rn1_15.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_16.c1.c.c.c = Convolution (rn1_16.c1.c.W, rn1_15.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_16.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c1.c.c.y = BatchNormalization (rn1_16.c1.c.c.c, rn1_16.c1.c.c.sc, rn1_16.c1.c.c.b, rn1_16.c1.c.c.m, rn1_16.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_16.c1.y = RectifiedLinear (rn1_16.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_16.c2.c.c = Convolution (rn1_16.c2.W, rn1_16.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_16.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c2.c.y = BatchNormalization (rn1_16.c2.c.c, rn1_16.c2.c.sc, rn1_16.c2.c.b, rn1_16.c2.c.m, rn1_16.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_16.p = Plus (rn1_16.c2.c.y, rn1_15.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_16.y = RectifiedLinear (rn1_16.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_17.c1.c.c.c = Convolution (rn1_17.c1.c.W, rn1_16.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_17.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c1.c.c.y = BatchNormalization (rn1_17.c1.c.c.c, rn1_17.c1.c.c.sc, rn1_17.c1.c.c.b, rn1_17.c1.c.c.m, rn1_17.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_17.c1.y = RectifiedLinear (rn1_17.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_17.c2.c.c = Convolution (rn1_17.c2.W, rn1_17.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_17.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c2.c.y = BatchNormalization (rn1_17.c2.c.c, rn1_17.c2.c.sc, rn1_17.c2.c.b, rn1_17.c2.c.m, rn1_17.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_17.p = Plus (rn1_17.c2.c.y, rn1_16.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_17.y = RectifiedLinear (rn1_17.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_18.c1.c.c.c = Convolution (rn1_18.c1.c.W, rn1_17.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_18.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c1.c.c.y = BatchNormalization (rn1_18.c1.c.c.c, rn1_18.c1.c.c.sc, rn1_18.c1.c.c.b, rn1_18.c1.c.c.m, rn1_18.c1.c.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_18.c1.y = RectifiedLinear (rn1_18.c1.c.c.y) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_18.c2.c.c = Convolution (rn1_18.c2.W, rn1_18.c1.y) : [16 x 144], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_18.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c2.c.isd = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c2.c.y = BatchNormalization (rn1_18.c2.c.c, rn1_18.c2.c.sc, rn1_18.c2.c.b, rn1_18.c2.c.m, rn1_18.c2.c.isd) : [32 x 32 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *]
Validating --> rn1_18.p = Plus (rn1_18.c2.c.y, rn1_17.y) : [32 x 32 x 16 x *], [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn1_18.y = RectifiedLinear (rn1_18.p) : [32 x 32 x 16 x *] -> [32 x 32 x 16 x *]
Validating --> rn2_1.c1.c.c.c = Convolution (rn2_1.c1.c.W, rn1_18.y) : [32 x 144], [32 x 32 x 16 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_1.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c1.c.c.y = BatchNormalization (rn2_1.c1.c.c.c, rn2_1.c1.c.c.sc, rn2_1.c1.c.c.b, rn2_1.c1.c.c.m, rn2_1.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_1.c1.y = RectifiedLinear (rn2_1.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_1.c2.c.c = Convolution (rn2_1.c2.W, rn2_1.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_1.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c2.c.y = BatchNormalization (rn2_1.c2.c.c, rn2_1.c2.c.sc, rn2_1.c2.c.b, rn2_1.c2.c.m, rn2_1.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_1_Wproj = LearnableParameter() :  -> [32 x 16]
Validating --> rn2_1.c_proj.c = Convolution (rn2_1_Wproj, rn1_18.y) : [32 x 16], [32 x 32 x 16 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_1.c_proj.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c_proj.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c_proj.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c_proj.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c_proj.y = BatchNormalization (rn2_1.c_proj.c, rn2_1.c_proj.sc, rn2_1.c_proj.b, rn2_1.c_proj.m, rn2_1.c_proj.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_1.p = Plus (rn2_1.c2.c.y, rn2_1.c_proj.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_1.y = RectifiedLinear (rn2_1.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_2.c1.c.c.c = Convolution (rn2_2.c1.c.W, rn2_1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_2.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c1.c.c.y = BatchNormalization (rn2_2.c1.c.c.c, rn2_2.c1.c.c.sc, rn2_2.c1.c.c.b, rn2_2.c1.c.c.m, rn2_2.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_2.c1.y = RectifiedLinear (rn2_2.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_2.c2.c.c = Convolution (rn2_2.c2.W, rn2_2.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_2.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c2.c.y = BatchNormalization (rn2_2.c2.c.c, rn2_2.c2.c.sc, rn2_2.c2.c.b, rn2_2.c2.c.m, rn2_2.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_2.p = Plus (rn2_2.c2.c.y, rn2_1.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_2.y = RectifiedLinear (rn2_2.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_3.c1.c.c.c = Convolution (rn2_3.c1.c.W, rn2_2.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_3.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c1.c.c.y = BatchNormalization (rn2_3.c1.c.c.c, rn2_3.c1.c.c.sc, rn2_3.c1.c.c.b, rn2_3.c1.c.c.m, rn2_3.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_3.c1.y = RectifiedLinear (rn2_3.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_3.c2.c.c = Convolution (rn2_3.c2.W, rn2_3.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_3.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c2.c.y = BatchNormalization (rn2_3.c2.c.c, rn2_3.c2.c.sc, rn2_3.c2.c.b, rn2_3.c2.c.m, rn2_3.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_3.p = Plus (rn2_3.c2.c.y, rn2_2.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_3.y = RectifiedLinear (rn2_3.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_4.c1.c.c.c = Convolution (rn2_4.c1.c.W, rn2_3.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_4.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c1.c.c.y = BatchNormalization (rn2_4.c1.c.c.c, rn2_4.c1.c.c.sc, rn2_4.c1.c.c.b, rn2_4.c1.c.c.m, rn2_4.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_4.c1.y = RectifiedLinear (rn2_4.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_4.c2.c.c = Convolution (rn2_4.c2.W, rn2_4.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_4.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c2.c.y = BatchNormalization (rn2_4.c2.c.c, rn2_4.c2.c.sc, rn2_4.c2.c.b, rn2_4.c2.c.m, rn2_4.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_4.p = Plus (rn2_4.c2.c.y, rn2_3.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_4.y = RectifiedLinear (rn2_4.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_5.c1.c.c.c = Convolution (rn2_5.c1.c.W, rn2_4.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_5.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c1.c.c.y = BatchNormalization (rn2_5.c1.c.c.c, rn2_5.c1.c.c.sc, rn2_5.c1.c.c.b, rn2_5.c1.c.c.m, rn2_5.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_5.c1.y = RectifiedLinear (rn2_5.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_5.c2.c.c = Convolution (rn2_5.c2.W, rn2_5.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_5.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c2.c.y = BatchNormalization (rn2_5.c2.c.c, rn2_5.c2.c.sc, rn2_5.c2.c.b, rn2_5.c2.c.m, rn2_5.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_5.p = Plus (rn2_5.c2.c.y, rn2_4.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_5.y = RectifiedLinear (rn2_5.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_6.c1.c.c.c = Convolution (rn2_6.c1.c.W, rn2_5.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_6.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c1.c.c.y = BatchNormalization (rn2_6.c1.c.c.c, rn2_6.c1.c.c.sc, rn2_6.c1.c.c.b, rn2_6.c1.c.c.m, rn2_6.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_6.c1.y = RectifiedLinear (rn2_6.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_6.c2.c.c = Convolution (rn2_6.c2.W, rn2_6.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_6.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c2.c.y = BatchNormalization (rn2_6.c2.c.c, rn2_6.c2.c.sc, rn2_6.c2.c.b, rn2_6.c2.c.m, rn2_6.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_6.p = Plus (rn2_6.c2.c.y, rn2_5.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_6.y = RectifiedLinear (rn2_6.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_7.c1.c.c.c = Convolution (rn2_7.c1.c.W, rn2_6.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_7.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c1.c.c.y = BatchNormalization (rn2_7.c1.c.c.c, rn2_7.c1.c.c.sc, rn2_7.c1.c.c.b, rn2_7.c1.c.c.m, rn2_7.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_7.c1.y = RectifiedLinear (rn2_7.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_7.c2.c.c = Convolution (rn2_7.c2.W, rn2_7.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_7.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c2.c.y = BatchNormalization (rn2_7.c2.c.c, rn2_7.c2.c.sc, rn2_7.c2.c.b, rn2_7.c2.c.m, rn2_7.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_7.p = Plus (rn2_7.c2.c.y, rn2_6.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_7.y = RectifiedLinear (rn2_7.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_8.c1.c.c.c = Convolution (rn2_8.c1.c.W, rn2_7.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_8.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c1.c.c.y = BatchNormalization (rn2_8.c1.c.c.c, rn2_8.c1.c.c.sc, rn2_8.c1.c.c.b, rn2_8.c1.c.c.m, rn2_8.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_8.c1.y = RectifiedLinear (rn2_8.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_8.c2.c.c = Convolution (rn2_8.c2.W, rn2_8.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_8.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c2.c.y = BatchNormalization (rn2_8.c2.c.c, rn2_8.c2.c.sc, rn2_8.c2.c.b, rn2_8.c2.c.m, rn2_8.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_8.p = Plus (rn2_8.c2.c.y, rn2_7.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_8.y = RectifiedLinear (rn2_8.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_9.c1.c.c.c = Convolution (rn2_9.c1.c.W, rn2_8.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_9.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c1.c.c.y = BatchNormalization (rn2_9.c1.c.c.c, rn2_9.c1.c.c.sc, rn2_9.c1.c.c.b, rn2_9.c1.c.c.m, rn2_9.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_9.c1.y = RectifiedLinear (rn2_9.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_9.c2.c.c = Convolution (rn2_9.c2.W, rn2_9.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_9.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c2.c.y = BatchNormalization (rn2_9.c2.c.c, rn2_9.c2.c.sc, rn2_9.c2.c.b, rn2_9.c2.c.m, rn2_9.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_9.p = Plus (rn2_9.c2.c.y, rn2_8.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_9.y = RectifiedLinear (rn2_9.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_10.c1.c.c.c = Convolution (rn2_10.c1.c.W, rn2_9.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_10.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c1.c.c.y = BatchNormalization (rn2_10.c1.c.c.c, rn2_10.c1.c.c.sc, rn2_10.c1.c.c.b, rn2_10.c1.c.c.m, rn2_10.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_10.c1.y = RectifiedLinear (rn2_10.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_10.c2.c.c = Convolution (rn2_10.c2.W, rn2_10.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_10.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c2.c.y = BatchNormalization (rn2_10.c2.c.c, rn2_10.c2.c.sc, rn2_10.c2.c.b, rn2_10.c2.c.m, rn2_10.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_10.p = Plus (rn2_10.c2.c.y, rn2_9.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_10.y = RectifiedLinear (rn2_10.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_11.c1.c.c.c = Convolution (rn2_11.c1.c.W, rn2_10.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_11.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c1.c.c.y = BatchNormalization (rn2_11.c1.c.c.c, rn2_11.c1.c.c.sc, rn2_11.c1.c.c.b, rn2_11.c1.c.c.m, rn2_11.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_11.c1.y = RectifiedLinear (rn2_11.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_11.c2.c.c = Convolution (rn2_11.c2.W, rn2_11.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_11.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c2.c.y = BatchNormalization (rn2_11.c2.c.c, rn2_11.c2.c.sc, rn2_11.c2.c.b, rn2_11.c2.c.m, rn2_11.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_11.p = Plus (rn2_11.c2.c.y, rn2_10.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_11.y = RectifiedLinear (rn2_11.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_12.c1.c.c.c = Convolution (rn2_12.c1.c.W, rn2_11.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_12.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c1.c.c.y = BatchNormalization (rn2_12.c1.c.c.c, rn2_12.c1.c.c.sc, rn2_12.c1.c.c.b, rn2_12.c1.c.c.m, rn2_12.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_12.c1.y = RectifiedLinear (rn2_12.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_12.c2.c.c = Convolution (rn2_12.c2.W, rn2_12.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_12.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c2.c.y = BatchNormalization (rn2_12.c2.c.c, rn2_12.c2.c.sc, rn2_12.c2.c.b, rn2_12.c2.c.m, rn2_12.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_12.p = Plus (rn2_12.c2.c.y, rn2_11.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_12.y = RectifiedLinear (rn2_12.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_13.c1.c.c.c = Convolution (rn2_13.c1.c.W, rn2_12.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_13.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c1.c.c.y = BatchNormalization (rn2_13.c1.c.c.c, rn2_13.c1.c.c.sc, rn2_13.c1.c.c.b, rn2_13.c1.c.c.m, rn2_13.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_13.c1.y = RectifiedLinear (rn2_13.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_13.c2.c.c = Convolution (rn2_13.c2.W, rn2_13.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_13.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c2.c.y = BatchNormalization (rn2_13.c2.c.c, rn2_13.c2.c.sc, rn2_13.c2.c.b, rn2_13.c2.c.m, rn2_13.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_13.p = Plus (rn2_13.c2.c.y, rn2_12.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_13.y = RectifiedLinear (rn2_13.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_14.c1.c.c.c = Convolution (rn2_14.c1.c.W, rn2_13.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_14.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c1.c.c.y = BatchNormalization (rn2_14.c1.c.c.c, rn2_14.c1.c.c.sc, rn2_14.c1.c.c.b, rn2_14.c1.c.c.m, rn2_14.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_14.c1.y = RectifiedLinear (rn2_14.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_14.c2.c.c = Convolution (rn2_14.c2.W, rn2_14.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_14.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c2.c.y = BatchNormalization (rn2_14.c2.c.c, rn2_14.c2.c.sc, rn2_14.c2.c.b, rn2_14.c2.c.m, rn2_14.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_14.p = Plus (rn2_14.c2.c.y, rn2_13.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_14.y = RectifiedLinear (rn2_14.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_15.c1.c.c.c = Convolution (rn2_15.c1.c.W, rn2_14.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_15.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c1.c.c.y = BatchNormalization (rn2_15.c1.c.c.c, rn2_15.c1.c.c.sc, rn2_15.c1.c.c.b, rn2_15.c1.c.c.m, rn2_15.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_15.c1.y = RectifiedLinear (rn2_15.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_15.c2.c.c = Convolution (rn2_15.c2.W, rn2_15.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_15.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c2.c.y = BatchNormalization (rn2_15.c2.c.c, rn2_15.c2.c.sc, rn2_15.c2.c.b, rn2_15.c2.c.m, rn2_15.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_15.p = Plus (rn2_15.c2.c.y, rn2_14.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_15.y = RectifiedLinear (rn2_15.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_16.c1.c.c.c = Convolution (rn2_16.c1.c.W, rn2_15.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_16.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c1.c.c.y = BatchNormalization (rn2_16.c1.c.c.c, rn2_16.c1.c.c.sc, rn2_16.c1.c.c.b, rn2_16.c1.c.c.m, rn2_16.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_16.c1.y = RectifiedLinear (rn2_16.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_16.c2.c.c = Convolution (rn2_16.c2.W, rn2_16.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_16.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c2.c.y = BatchNormalization (rn2_16.c2.c.c, rn2_16.c2.c.sc, rn2_16.c2.c.b, rn2_16.c2.c.m, rn2_16.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_16.p = Plus (rn2_16.c2.c.y, rn2_15.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_16.y = RectifiedLinear (rn2_16.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_17.c1.c.c.c = Convolution (rn2_17.c1.c.W, rn2_16.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_17.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c1.c.c.y = BatchNormalization (rn2_17.c1.c.c.c, rn2_17.c1.c.c.sc, rn2_17.c1.c.c.b, rn2_17.c1.c.c.m, rn2_17.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_17.c1.y = RectifiedLinear (rn2_17.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_17.c2.c.c = Convolution (rn2_17.c2.W, rn2_17.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_17.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c2.c.y = BatchNormalization (rn2_17.c2.c.c, rn2_17.c2.c.sc, rn2_17.c2.c.b, rn2_17.c2.c.m, rn2_17.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_17.p = Plus (rn2_17.c2.c.y, rn2_16.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_17.y = RectifiedLinear (rn2_17.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_18.c1.c.c.c = Convolution (rn2_18.c1.c.W, rn2_17.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_18.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c1.c.c.y = BatchNormalization (rn2_18.c1.c.c.c, rn2_18.c1.c.c.sc, rn2_18.c1.c.c.b, rn2_18.c1.c.c.m, rn2_18.c1.c.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_18.c1.y = RectifiedLinear (rn2_18.c1.c.c.y) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_18.c2.c.c = Convolution (rn2_18.c2.W, rn2_18.c1.y) : [32 x 288], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_18.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c2.c.isd = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c2.c.y = BatchNormalization (rn2_18.c2.c.c, rn2_18.c2.c.sc, rn2_18.c2.c.b, rn2_18.c2.c.m, rn2_18.c2.c.isd) : [16 x 16 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *]
Validating --> rn2_18.p = Plus (rn2_18.c2.c.y, rn2_17.y) : [16 x 16 x 32 x *], [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn2_18.y = RectifiedLinear (rn2_18.p) : [16 x 16 x 32 x *] -> [16 x 16 x 32 x *]
Validating --> rn3_1.c1.c.c.c = Convolution (rn3_1.c1.c.W, rn2_18.y) : [64 x 288], [16 x 16 x 32 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_1.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c1.c.c.y = BatchNormalization (rn3_1.c1.c.c.c, rn3_1.c1.c.c.sc, rn3_1.c1.c.c.b, rn3_1.c1.c.c.m, rn3_1.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_1.c1.y = RectifiedLinear (rn3_1.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_1.c2.c.c = Convolution (rn3_1.c2.W, rn3_1.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_1.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c2.c.y = BatchNormalization (rn3_1.c2.c.c, rn3_1.c2.c.sc, rn3_1.c2.c.b, rn3_1.c2.c.m, rn3_1.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_1_Wproj = LearnableParameter() :  -> [64 x 32]
Validating --> rn3_1.c_proj.c = Convolution (rn3_1_Wproj, rn2_18.y) : [64 x 32], [16 x 16 x 32 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_1.c_proj.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c_proj.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c_proj.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c_proj.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c_proj.y = BatchNormalization (rn3_1.c_proj.c, rn3_1.c_proj.sc, rn3_1.c_proj.b, rn3_1.c_proj.m, rn3_1.c_proj.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_1.p = Plus (rn3_1.c2.c.y, rn3_1.c_proj.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_1.y = RectifiedLinear (rn3_1.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_2.c1.c.c.c = Convolution (rn3_2.c1.c.W, rn3_1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_2.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c1.c.c.y = BatchNormalization (rn3_2.c1.c.c.c, rn3_2.c1.c.c.sc, rn3_2.c1.c.c.b, rn3_2.c1.c.c.m, rn3_2.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_2.c1.y = RectifiedLinear (rn3_2.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_2.c2.c.c = Convolution (rn3_2.c2.W, rn3_2.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_2.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c2.c.y = BatchNormalization (rn3_2.c2.c.c, rn3_2.c2.c.sc, rn3_2.c2.c.b, rn3_2.c2.c.m, rn3_2.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_2.p = Plus (rn3_2.c2.c.y, rn3_1.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_2.y = RectifiedLinear (rn3_2.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_3.c1.c.c.c = Convolution (rn3_3.c1.c.W, rn3_2.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_3.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c1.c.c.y = BatchNormalization (rn3_3.c1.c.c.c, rn3_3.c1.c.c.sc, rn3_3.c1.c.c.b, rn3_3.c1.c.c.m, rn3_3.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_3.c1.y = RectifiedLinear (rn3_3.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_3.c2.c.c = Convolution (rn3_3.c2.W, rn3_3.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_3.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c2.c.y = BatchNormalization (rn3_3.c2.c.c, rn3_3.c2.c.sc, rn3_3.c2.c.b, rn3_3.c2.c.m, rn3_3.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_3.p = Plus (rn3_3.c2.c.y, rn3_2.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_3.y = RectifiedLinear (rn3_3.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_4.c1.c.c.c = Convolution (rn3_4.c1.c.W, rn3_3.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_4.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c1.c.c.y = BatchNormalization (rn3_4.c1.c.c.c, rn3_4.c1.c.c.sc, rn3_4.c1.c.c.b, rn3_4.c1.c.c.m, rn3_4.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_4.c1.y = RectifiedLinear (rn3_4.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_4.c2.c.c = Convolution (rn3_4.c2.W, rn3_4.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_4.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c2.c.y = BatchNormalization (rn3_4.c2.c.c, rn3_4.c2.c.sc, rn3_4.c2.c.b, rn3_4.c2.c.m, rn3_4.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_4.p = Plus (rn3_4.c2.c.y, rn3_3.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_4.y = RectifiedLinear (rn3_4.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_5.c1.c.c.c = Convolution (rn3_5.c1.c.W, rn3_4.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_5.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c1.c.c.y = BatchNormalization (rn3_5.c1.c.c.c, rn3_5.c1.c.c.sc, rn3_5.c1.c.c.b, rn3_5.c1.c.c.m, rn3_5.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_5.c1.y = RectifiedLinear (rn3_5.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_5.c2.c.c = Convolution (rn3_5.c2.W, rn3_5.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_5.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c2.c.y = BatchNormalization (rn3_5.c2.c.c, rn3_5.c2.c.sc, rn3_5.c2.c.b, rn3_5.c2.c.m, rn3_5.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_5.p = Plus (rn3_5.c2.c.y, rn3_4.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_5.y = RectifiedLinear (rn3_5.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_6.c1.c.c.c = Convolution (rn3_6.c1.c.W, rn3_5.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_6.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c1.c.c.y = BatchNormalization (rn3_6.c1.c.c.c, rn3_6.c1.c.c.sc, rn3_6.c1.c.c.b, rn3_6.c1.c.c.m, rn3_6.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_6.c1.y = RectifiedLinear (rn3_6.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_6.c2.c.c = Convolution (rn3_6.c2.W, rn3_6.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_6.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c2.c.y = BatchNormalization (rn3_6.c2.c.c, rn3_6.c2.c.sc, rn3_6.c2.c.b, rn3_6.c2.c.m, rn3_6.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_6.p = Plus (rn3_6.c2.c.y, rn3_5.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_6.y = RectifiedLinear (rn3_6.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_7.c1.c.c.c = Convolution (rn3_7.c1.c.W, rn3_6.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_7.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c1.c.c.y = BatchNormalization (rn3_7.c1.c.c.c, rn3_7.c1.c.c.sc, rn3_7.c1.c.c.b, rn3_7.c1.c.c.m, rn3_7.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_7.c1.y = RectifiedLinear (rn3_7.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_7.c2.c.c = Convolution (rn3_7.c2.W, rn3_7.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_7.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c2.c.y = BatchNormalization (rn3_7.c2.c.c, rn3_7.c2.c.sc, rn3_7.c2.c.b, rn3_7.c2.c.m, rn3_7.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_7.p = Plus (rn3_7.c2.c.y, rn3_6.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_7.y = RectifiedLinear (rn3_7.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_8.c1.c.c.c = Convolution (rn3_8.c1.c.W, rn3_7.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_8.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c1.c.c.y = BatchNormalization (rn3_8.c1.c.c.c, rn3_8.c1.c.c.sc, rn3_8.c1.c.c.b, rn3_8.c1.c.c.m, rn3_8.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_8.c1.y = RectifiedLinear (rn3_8.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_8.c2.c.c = Convolution (rn3_8.c2.W, rn3_8.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_8.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c2.c.y = BatchNormalization (rn3_8.c2.c.c, rn3_8.c2.c.sc, rn3_8.c2.c.b, rn3_8.c2.c.m, rn3_8.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_8.p = Plus (rn3_8.c2.c.y, rn3_7.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_8.y = RectifiedLinear (rn3_8.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_9.c1.c.c.c = Convolution (rn3_9.c1.c.W, rn3_8.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_9.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c1.c.c.y = BatchNormalization (rn3_9.c1.c.c.c, rn3_9.c1.c.c.sc, rn3_9.c1.c.c.b, rn3_9.c1.c.c.m, rn3_9.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_9.c1.y = RectifiedLinear (rn3_9.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_9.c2.c.c = Convolution (rn3_9.c2.W, rn3_9.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_9.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c2.c.y = BatchNormalization (rn3_9.c2.c.c, rn3_9.c2.c.sc, rn3_9.c2.c.b, rn3_9.c2.c.m, rn3_9.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_9.p = Plus (rn3_9.c2.c.y, rn3_8.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_9.y = RectifiedLinear (rn3_9.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_10.c1.c.c.c = Convolution (rn3_10.c1.c.W, rn3_9.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_10.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c1.c.c.y = BatchNormalization (rn3_10.c1.c.c.c, rn3_10.c1.c.c.sc, rn3_10.c1.c.c.b, rn3_10.c1.c.c.m, rn3_10.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_10.c1.y = RectifiedLinear (rn3_10.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_10.c2.c.c = Convolution (rn3_10.c2.W, rn3_10.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_10.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c2.c.y = BatchNormalization (rn3_10.c2.c.c, rn3_10.c2.c.sc, rn3_10.c2.c.b, rn3_10.c2.c.m, rn3_10.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_10.p = Plus (rn3_10.c2.c.y, rn3_9.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_10.y = RectifiedLinear (rn3_10.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_11.c1.c.c.c = Convolution (rn3_11.c1.c.W, rn3_10.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_11.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c1.c.c.y = BatchNormalization (rn3_11.c1.c.c.c, rn3_11.c1.c.c.sc, rn3_11.c1.c.c.b, rn3_11.c1.c.c.m, rn3_11.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_11.c1.y = RectifiedLinear (rn3_11.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_11.c2.c.c = Convolution (rn3_11.c2.W, rn3_11.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_11.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c2.c.y = BatchNormalization (rn3_11.c2.c.c, rn3_11.c2.c.sc, rn3_11.c2.c.b, rn3_11.c2.c.m, rn3_11.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_11.p = Plus (rn3_11.c2.c.y, rn3_10.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_11.y = RectifiedLinear (rn3_11.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_12.c1.c.c.c = Convolution (rn3_12.c1.c.W, rn3_11.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_12.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c1.c.c.y = BatchNormalization (rn3_12.c1.c.c.c, rn3_12.c1.c.c.sc, rn3_12.c1.c.c.b, rn3_12.c1.c.c.m, rn3_12.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_12.c1.y = RectifiedLinear (rn3_12.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_12.c2.c.c = Convolution (rn3_12.c2.W, rn3_12.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_12.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c2.c.y = BatchNormalization (rn3_12.c2.c.c, rn3_12.c2.c.sc, rn3_12.c2.c.b, rn3_12.c2.c.m, rn3_12.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_12.p = Plus (rn3_12.c2.c.y, rn3_11.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_12.y = RectifiedLinear (rn3_12.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_13.c1.c.c.c = Convolution (rn3_13.c1.c.W, rn3_12.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_13.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c1.c.c.y = BatchNormalization (rn3_13.c1.c.c.c, rn3_13.c1.c.c.sc, rn3_13.c1.c.c.b, rn3_13.c1.c.c.m, rn3_13.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_13.c1.y = RectifiedLinear (rn3_13.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_13.c2.c.c = Convolution (rn3_13.c2.W, rn3_13.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_13.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c2.c.y = BatchNormalization (rn3_13.c2.c.c, rn3_13.c2.c.sc, rn3_13.c2.c.b, rn3_13.c2.c.m, rn3_13.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_13.p = Plus (rn3_13.c2.c.y, rn3_12.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_13.y = RectifiedLinear (rn3_13.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_14.c1.c.c.c = Convolution (rn3_14.c1.c.W, rn3_13.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_14.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c1.c.c.y = BatchNormalization (rn3_14.c1.c.c.c, rn3_14.c1.c.c.sc, rn3_14.c1.c.c.b, rn3_14.c1.c.c.m, rn3_14.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_14.c1.y = RectifiedLinear (rn3_14.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_14.c2.c.c = Convolution (rn3_14.c2.W, rn3_14.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_14.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c2.c.y = BatchNormalization (rn3_14.c2.c.c, rn3_14.c2.c.sc, rn3_14.c2.c.b, rn3_14.c2.c.m, rn3_14.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_14.p = Plus (rn3_14.c2.c.y, rn3_13.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_14.y = RectifiedLinear (rn3_14.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_15.c1.c.c.c = Convolution (rn3_15.c1.c.W, rn3_14.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_15.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c1.c.c.y = BatchNormalization (rn3_15.c1.c.c.c, rn3_15.c1.c.c.sc, rn3_15.c1.c.c.b, rn3_15.c1.c.c.m, rn3_15.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_15.c1.y = RectifiedLinear (rn3_15.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_15.c2.c.c = Convolution (rn3_15.c2.W, rn3_15.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_15.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c2.c.y = BatchNormalization (rn3_15.c2.c.c, rn3_15.c2.c.sc, rn3_15.c2.c.b, rn3_15.c2.c.m, rn3_15.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_15.p = Plus (rn3_15.c2.c.y, rn3_14.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_15.y = RectifiedLinear (rn3_15.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_16.c1.c.c.c = Convolution (rn3_16.c1.c.W, rn3_15.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_16.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c1.c.c.y = BatchNormalization (rn3_16.c1.c.c.c, rn3_16.c1.c.c.sc, rn3_16.c1.c.c.b, rn3_16.c1.c.c.m, rn3_16.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_16.c1.y = RectifiedLinear (rn3_16.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_16.c2.c.c = Convolution (rn3_16.c2.W, rn3_16.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_16.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c2.c.y = BatchNormalization (rn3_16.c2.c.c, rn3_16.c2.c.sc, rn3_16.c2.c.b, rn3_16.c2.c.m, rn3_16.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_16.p = Plus (rn3_16.c2.c.y, rn3_15.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_16.y = RectifiedLinear (rn3_16.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_17.c1.c.c.c = Convolution (rn3_17.c1.c.W, rn3_16.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_17.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c1.c.c.y = BatchNormalization (rn3_17.c1.c.c.c, rn3_17.c1.c.c.sc, rn3_17.c1.c.c.b, rn3_17.c1.c.c.m, rn3_17.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_17.c1.y = RectifiedLinear (rn3_17.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_17.c2.c.c = Convolution (rn3_17.c2.W, rn3_17.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_17.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c2.c.y = BatchNormalization (rn3_17.c2.c.c, rn3_17.c2.c.sc, rn3_17.c2.c.b, rn3_17.c2.c.m, rn3_17.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_17.p = Plus (rn3_17.c2.c.y, rn3_16.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_17.y = RectifiedLinear (rn3_17.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_18.c1.c.c.c = Convolution (rn3_18.c1.c.W, rn3_17.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_18.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c1.c.c.y = BatchNormalization (rn3_18.c1.c.c.c, rn3_18.c1.c.c.sc, rn3_18.c1.c.c.b, rn3_18.c1.c.c.m, rn3_18.c1.c.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_18.c1.y = RectifiedLinear (rn3_18.c1.c.c.y) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_18.c2.c.c = Convolution (rn3_18.c2.W, rn3_18.c1.y) : [64 x 576], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_18.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c2.c.isd = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c2.c.y = BatchNormalization (rn3_18.c2.c.c, rn3_18.c2.c.sc, rn3_18.c2.c.b, rn3_18.c2.c.m, rn3_18.c2.c.isd) : [8 x 8 x 64 x *], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *]
Validating --> rn3_18.p = Plus (rn3_18.c2.c.y, rn3_17.y) : [8 x 8 x 64 x *], [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> rn3_18.y = RectifiedLinear (rn3_18.p) : [8 x 8 x 64 x *] -> [8 x 8 x 64 x *]
Validating --> pool = AveragePooling (rn3_18.y) : [8 x 8 x 64 x *] -> [1 x 1 x 64 x *]

OutputNodes.t Times operation: For legacy compatibility, the sample layout of left input (OutputNodes.W LearnableParameter operation) was patched to [10 x 1 x 1 x 64] (from [10 x 64])
Validating --> OutputNodes.t = Times (OutputNodes.W, pool) : [10 x 1 x 1 x 64], [1 x 1 x 64 x *] -> [10 x *]
Validating --> OutputNodes.b = LearnableParameter() :  -> [10]
Validating --> OutputNodes.z = Plus (OutputNodes.t, OutputNodes.b) : [10 x *], [10] -> [10 x *]
Validating --> CE = CrossEntropyWithSoftmax (labels, OutputNodes.z) : [10 x *], [10 x *] -> [1]
Validating --> Err = ErrorPrediction (labels, OutputNodes.z) : [10 x *], [10 x *] -> [1]

Validating network. 390 nodes to process in pass 2.


Validating network, final pass.


conv1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 3, Output: 32 x 32 x 16, Kernel: 3 x 3 x 3, Map: 1 x 1 x 16, Stride: 1 x 1 x 3, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_1.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_1.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_2.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_2.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_3.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_3.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_4.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_4.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_5.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_5.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_6.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_6.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_7.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_7.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_8.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_8.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_9.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_9.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_10.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_10.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_11.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_11.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_12.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_12.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_13.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_13.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_14.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_14.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_15.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_15.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_16.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_16.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_17.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_17.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_18.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_18.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_1.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 16 x 16 x 32, Kernel: 3 x 3 x 16, Map: 1 x 1 x 32, Stride: 2 x 2 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_1.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_1.c_proj.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 16 x 16 x 32, Kernel: 1 x 1 x 16, Map: 1 x 1 x 32, Stride: 2 x 2 x 16, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_2.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_2.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_3.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_3.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_4.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_4.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_5.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_5.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_6.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_6.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_7.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_7.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_8.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_8.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_9.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_9.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_10.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_10.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_11.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_11.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_12.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_12.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_13.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_13.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_14.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_14.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_15.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_15.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_16.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_16.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_17.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_17.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_18.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_18.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_1.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 8 x 8 x 64, Kernel: 3 x 3 x 32, Map: 1 x 1 x 64, Stride: 2 x 2 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_1.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_1.c_proj.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 8 x 8 x 64, Kernel: 1 x 1 x 32, Map: 1 x 1 x 64, Stride: 2 x 2 x 32, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_2.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_2.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_3.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_3.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_4.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_4.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_5.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_5.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_6.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_6.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_7.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_7.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_8.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_8.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_9.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_9.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_10.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_10.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_11.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_11.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_12.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_12.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_13.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_13.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_14.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_14.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_15.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_15.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_16.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_16.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_17.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_17.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_18.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_18.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

pool: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 1 x 1 x 64, Kernel: 8 x 8 x 1, Map: 1, Stride: 1 x 1 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.


559 out of 949 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/16/2016 12:15:12: Created model with 949 nodes on GPU 0.

08/16/2016 12:15:12: Training criterion node(s):
08/16/2016 12:15:12: 	CE = CrossEntropyWithSoftmax

08/16/2016 12:15:12: Evaluation criterion node(s):
08/16/2016 12:15:12: 	Err = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 1671 matrices, 880 are shared as 332, and 791 are not shared.

	{ rn1_1.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_1.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_3.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_3.c1.y : [32 x 32 x 16 x *] }
	{ rn1_1.c1.c.W : [16 x 144] (gradient)
	  rn1_1.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_1.p : [32 x 32 x 16 x *] }
	{ rn1_2.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_2.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_2.y : [32 x 32 x 16 x *] (gradient)
	  rn1_4.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_4.c1.y : [32 x 32 x 16 x *] }
	{ rn1_1.c2.W : [16 x 144] (gradient)
	  rn1_2.c1.c.c.c : [32 x 32 x 16 x *] }
	{ conv1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  conv1.y : [32 x 32 x 16 x *] }
	{ conv1.c.c.b : [16 x 1] (gradient)
	  rn1_1.c2.c.c : [32 x 32 x 16 x *] }
	{ conv1.c.c.sc : [16 x 1] (gradient)
	  conv1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_2.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_2.c1.y : [32 x 32 x 16 x *] }
	{ conv1.c.W : [16 x 27] (gradient)
	  rn1_1.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_1.c1.y : [32 x 32 x 16 x *] }
	{ rn1_1.c2.c.sc : [16 x 1] (gradient)
	  rn1_1.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_1.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_1.y : [32 x 32 x 16 x *] }
	{ rn1_1.c2.c.b : [16 x 1] (gradient)
	  rn1_2.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_2.c1.c.W : [16 x 144] (gradient)
	  rn1_2.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_2.p : [32 x 32 x 16 x *] }
	{ rn1_2.c2.c.sc : [16 x 1] (gradient)
	  rn1_2.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_3.c1.c.W : [16 x 144] (gradient)
	  rn1_3.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_3.p : [32 x 32 x 16 x *] }
	{ rn1_2.c2.c.b : [16 x 1] (gradient)
	  rn1_3.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_3.c2.W : [16 x 144] (gradient)
	  rn1_4.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_3.c2.c.sc : [16 x 1] (gradient)
	  rn1_3.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_2.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_2.y : [32 x 32 x 16 x *] }
	{ rn1_2.c2.W : [16 x 144] (gradient)
	  rn1_3.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_3.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_3.y : [32 x 32 x 16 x *] }
	{ rn1_5.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_5.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_5.y : [32 x 32 x 16 x *] (gradient)
	  rn1_7.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_7.c1.y : [32 x 32 x 16 x *] }
	{ rn1_3.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_3.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_3.y : [32 x 32 x 16 x *] (gradient)
	  rn1_5.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_5.c1.y : [32 x 32 x 16 x *] }
	{ rn1_4.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_4.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_4.y : [32 x 32 x 16 x *] (gradient)
	  rn1_6.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_6.c1.y : [32 x 32 x 16 x *] }
	{ rn1_8.c2.W : [16 x 144] (gradient)
	  rn1_9.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_4.c1.c.W : [16 x 144] (gradient)
	  rn1_4.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_4.p : [32 x 32 x 16 x *] }
	{ rn1_4.c2.c.b : [16 x 1] (gradient)
	  rn1_5.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_6.c1.c.W : [16 x 144] (gradient)
	  rn1_6.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_6.p : [32 x 32 x 16 x *] }
	{ rn1_4.c2.W : [16 x 144] (gradient)
	  rn1_5.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_5.c1.c.W : [16 x 144] (gradient)
	  rn1_5.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_5.p : [32 x 32 x 16 x *] }
	{ rn1_5.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_5.y : [32 x 32 x 16 x *] }
	{ rn1_5.c2.W : [16 x 144] (gradient)
	  rn1_6.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_4.c2.c.sc : [16 x 1] (gradient)
	  rn1_4.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_6.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_6.y : [32 x 32 x 16 x *] }
	{ rn1_4.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_4.y : [32 x 32 x 16 x *] }
	{ rn1_7.c2.W : [16 x 144] (gradient)
	  rn1_8.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_5.c2.c.b : [16 x 1] (gradient)
	  rn1_6.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_7.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_7.y : [32 x 32 x 16 x *] }
	{ rn1_7.c2.c.sc : [16 x 1] (gradient)
	  rn1_7.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_6.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_6.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_6.y : [32 x 32 x 16 x *] (gradient)
	  rn1_8.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_8.c1.y : [32 x 32 x 16 x *] }
	{ rn1_7.c2.c.b : [16 x 1] (gradient)
	  rn1_8.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_6.c2.c.b : [16 x 1] (gradient)
	  rn1_7.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_7.c1.c.W : [16 x 144] (gradient)
	  rn1_7.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_7.p : [32 x 32 x 16 x *] }
	{ rn1_8.c1.c.W : [16 x 144] (gradient)
	  rn1_8.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_8.p : [32 x 32 x 16 x *] }
	{ rn1_8.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_8.y : [32 x 32 x 16 x *] }
	{ rn1_3.c2.c.b : [16 x 1] (gradient)
	  rn1_4.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_6.c2.W : [16 x 144] (gradient)
	  rn1_7.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_6.c2.c.sc : [16 x 1] (gradient)
	  rn1_6.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_8.c2.c.sc : [16 x 1] (gradient)
	  rn1_8.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_5.c2.c.sc : [16 x 1] (gradient)
	  rn1_5.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_10.c2.W : [16 x 144] (gradient)
	  rn1_11.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_10.c2.c.c : [32 x 32 x 16 x *]
	  rn1_9.c2.c.b : [16 x 1] (gradient) }
	{ rn1_9.c1.c.W : [16 x 144] (gradient)
	  rn1_9.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_9.p : [32 x 32 x 16 x *] }
	{ rn1_9.c2.c.sc : [16 x 1] (gradient)
	  rn1_9.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_9.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_9.y : [32 x 32 x 16 x *] }
	{ rn1_8.c2.c.b : [16 x 1] (gradient)
	  rn1_9.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_10.c1.c.W : [16 x 144] (gradient)
	  rn1_10.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_10.p : [32 x 32 x 16 x *] }
	{ rn1_10.c1.c.c.c : [32 x 32 x 16 x *]
	  rn1_9.c2.W : [16 x 144] (gradient) }
	{ rn1_10.c2.c.sc : [16 x 1] (gradient)
	  rn1_10.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_7.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_7.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_7.y : [32 x 32 x 16 x *] (gradient)
	  rn1_9.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_9.c1.y : [32 x 32 x 16 x *] }
	{ rn1_10.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_10.c1.y : [32 x 32 x 16 x *]
	  rn1_8.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_8.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_8.y : [32 x 32 x 16 x *] (gradient) }
	{ rn1_11.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_11.c1.y : [32 x 32 x 16 x *]
	  rn1_9.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_9.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_9.y : [32 x 32 x 16 x *] (gradient) }
	{ rn1_10.c2.c.b : [16 x 1] (gradient)
	  rn1_11.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_10.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_10.y : [32 x 32 x 16 x *] }
	{ rn1_14.c1.c.W : [16 x 144] (gradient)
	  rn1_14.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_14.p : [32 x 32 x 16 x *] }
	{ rn1_10.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_10.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_10.y : [32 x 32 x 16 x *] (gradient)
	  rn1_12.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_12.c1.y : [32 x 32 x 16 x *] }
	{ rn1_12.c2.W : [16 x 144] (gradient)
	  rn1_13.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_11.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_11.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_11.y : [32 x 32 x 16 x *] (gradient)
	  rn1_13.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_13.c1.y : [32 x 32 x 16 x *] }
	{ rn1_12.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_12.y : [32 x 32 x 16 x *] }
	{ rn1_13.c2.c.b : [16 x 1] (gradient)
	  rn1_14.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_13.c1.c.W : [16 x 144] (gradient)
	  rn1_13.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_13.p : [32 x 32 x 16 x *] }
	{ rn1_15.c1.c.W : [16 x 144] (gradient)
	  rn1_15.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_15.p : [32 x 32 x 16 x *] }
	{ rn1_15.c2.c.sc : [16 x 1] (gradient)
	  rn1_15.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_13.c2.W : [16 x 144] (gradient)
	  rn1_14.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_14.c2.c.sc : [16 x 1] (gradient)
	  rn1_14.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_13.c2.c.sc : [16 x 1] (gradient)
	  rn1_13.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_15.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_15.y : [32 x 32 x 16 x *] }
	{ rn1_13.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_13.y : [32 x 32 x 16 x *] }
	{ rn1_15.c2.W : [16 x 144] (gradient)
	  rn1_16.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_14.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_14.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_14.y : [32 x 32 x 16 x *] (gradient)
	  rn1_16.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_16.c1.y : [32 x 32 x 16 x *] }
	{ rn1_15.c2.c.b : [16 x 1] (gradient)
	  rn1_16.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_11.c2.W : [16 x 144] (gradient)
	  rn1_12.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_12.c2.c.sc : [16 x 1] (gradient)
	  rn1_12.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_14.c2.W : [16 x 144] (gradient)
	  rn1_15.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_12.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_12.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_12.y : [32 x 32 x 16 x *] (gradient)
	  rn1_14.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_14.c1.y : [32 x 32 x 16 x *] }
	{ rn1_14.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_14.y : [32 x 32 x 16 x *] }
	{ rn1_12.c1.c.W : [16 x 144] (gradient)
	  rn1_12.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_12.p : [32 x 32 x 16 x *] }
	{ rn1_11.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_11.y : [32 x 32 x 16 x *] }
	{ rn1_11.c2.c.b : [16 x 1] (gradient)
	  rn1_12.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_13.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_13.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_13.y : [32 x 32 x 16 x *] (gradient)
	  rn1_15.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_15.c1.y : [32 x 32 x 16 x *] }
	{ rn1_12.c2.c.b : [16 x 1] (gradient)
	  rn1_13.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_14.c2.c.b : [16 x 1] (gradient)
	  rn1_15.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_11.c2.c.sc : [16 x 1] (gradient)
	  rn1_11.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_11.c1.c.W : [16 x 144] (gradient)
	  rn1_11.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_11.p : [32 x 32 x 16 x *] }
	{ rn1_16.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_16.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_16.y : [32 x 32 x 16 x *] (gradient)
	  rn1_18.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_18.c1.y : [32 x 32 x 16 x *] }
	{ rn1_18.c2.W : [16 x 144] (gradient)
	  rn2_1.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn1_18.c2.c.sc : [16 x 1] (gradient)
	  rn1_18.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_16.c2.c.b : [16 x 1] (gradient)
	  rn1_17.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_17.c1.c.W : [16 x 144] (gradient)
	  rn1_17.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_17.p : [32 x 32 x 16 x *] }
	{ rn1_17.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_17.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_17.y : [32 x 32 x 16 x *] (gradient)
	  rn2_1.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_1.c1.y : [16 x 16 x 32 x *] }
	{ rn1_18.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_18.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_18.y : [32 x 32 x 16 x *] (gradient) }
	{ rn1_15.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_15.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_15.y : [32 x 32 x 16 x *] (gradient)
	  rn1_17.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_17.c1.y : [32 x 32 x 16 x *] }
	{ rn1_18.c1.c.W : [16 x 144] (gradient)
	  rn1_18.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_18.p : [32 x 32 x 16 x *] }
	{ rn2_1.c1.c.W : [32 x 144] (gradient)
	  rn2_1.c2.c.c : [16 x 16 x 32 x *] (gradient) }
	{ rn1_18.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_18.y : [32 x 32 x 16 x *] }
	{ rn1_16.c2.c.sc : [16 x 1] (gradient)
	  rn1_16.p : [32 x 32 x 16 x *] (gradient) }
	{ rn2_1.c_proj.y : [16 x 16 x 32 x *] (gradient)
	  rn2_2.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_2.c1.y : [16 x 16 x 32 x *] }
	{ rn2_1.c2.W : [32 x 288] (gradient)
	  rn2_2.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_2.c1.c.W : [32 x 288] (gradient)
	  rn2_2.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_2.p : [16 x 16 x 32 x *] }
	{ rn1_18.c2.c.b : [16 x 1] (gradient)
	  rn2_1.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_2.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_2.y : [16 x 16 x 32 x *] }
	{ rn2_2.c2.W : [32 x 288] (gradient)
	  rn2_3.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn1_17.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_17.y : [32 x 32 x 16 x *] }
	{ rn1_17.c2.c.sc : [16 x 1] (gradient)
	  rn1_17.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_17.c2.c.b : [16 x 1] (gradient)
	  rn1_18.c2.c.c : [32 x 32 x 16 x *] }
	{ rn2_1.c2.c.sc : [32 x 1] (gradient)
	  rn2_1.c_proj.c : [16 x 16 x 32 x *] }
	{ rn1_16.c2.W : [16 x 144] (gradient)
	  rn1_17.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn2_1.c2.c.b : [32 x 1] (gradient)
	  rn2_1.c_proj.c : [16 x 16 x 32 x *] (gradient)
	  rn2_1.p : [16 x 16 x 32 x *] }
	{ rn2_1.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_1.y : [16 x 16 x 32 x *] }
	{ rn2_1.c_proj.sc : [32 x 1] (gradient)
	  rn2_1.p : [16 x 16 x 32 x *] (gradient) }
	{ rn1_16.c1.c.W : [16 x 144] (gradient)
	  rn1_16.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_16.p : [32 x 32 x 16 x *] }
	{ rn1_16.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_16.y : [32 x 32 x 16 x *] }
	{ rn1_17.c2.W : [16 x 144] (gradient)
	  rn1_18.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn2_2.c2.c.b : [32 x 1] (gradient)
	  rn2_3.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_4.c1.c.W : [32 x 288] (gradient)
	  rn2_4.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_4.p : [16 x 16 x 32 x *] }
	{ rn2_3.c2.W : [32 x 288] (gradient)
	  rn2_4.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_2.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_2.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_2.y : [16 x 16 x 32 x *] (gradient)
	  rn2_4.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_4.c1.y : [16 x 16 x 32 x *] }
	{ rn2_3.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_3.y : [16 x 16 x 32 x *] }
	{ rn2_4.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_4.y : [16 x 16 x 32 x *] }
	{ rn2_4.c2.W : [32 x 288] (gradient)
	  rn2_5.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_4.c2.c.sc : [32 x 1] (gradient)
	  rn2_4.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_3.c2.c.b : [32 x 1] (gradient)
	  rn2_4.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_3.c2.c.sc : [32 x 1] (gradient)
	  rn2_3.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_3.c1.c.W : [32 x 288] (gradient)
	  rn2_3.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_3.p : [16 x 16 x 32 x *] }
	{ rn2_1.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_1.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_3.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_3.c1.y : [16 x 16 x 32 x *] }
	{ rn2_2.c2.c.sc : [32 x 1] (gradient)
	  rn2_2.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_7.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_7.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_7.y : [16 x 16 x 32 x *] (gradient)
	  rn2_9.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_9.c1.y : [16 x 16 x 32 x *] }
	{ rn2_5.c2.c.b : [32 x 1] (gradient)
	  rn2_6.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_5.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_5.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_5.y : [16 x 16 x 32 x *] (gradient)
	  rn2_7.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_7.c1.y : [16 x 16 x 32 x *] }
	{ rn2_10.c1.c.c.c : [16 x 16 x 32 x *]
	  rn2_9.c2.W : [32 x 288] (gradient) }
	{ rn2_9.c2.c.sc : [32 x 1] (gradient)
	  rn2_9.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_5.c1.c.W : [32 x 288] (gradient)
	  rn2_5.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_5.p : [16 x 16 x 32 x *] }
	{ rn2_5.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_5.y : [16 x 16 x 32 x *] }
	{ rn2_7.c1.c.W : [32 x 288] (gradient)
	  rn2_7.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_7.p : [16 x 16 x 32 x *] }
	{ rn2_7.c2.W : [32 x 288] (gradient)
	  rn2_8.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_3.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_3.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_3.y : [16 x 16 x 32 x *] (gradient)
	  rn2_5.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_5.c1.y : [16 x 16 x 32 x *] }
	{ rn2_5.c2.c.sc : [32 x 1] (gradient)
	  rn2_5.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_4.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_4.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_4.y : [16 x 16 x 32 x *] (gradient)
	  rn2_6.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_6.c1.y : [16 x 16 x 32 x *] }
	{ rn2_6.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_6.y : [16 x 16 x 32 x *] }
	{ rn2_6.c2.W : [32 x 288] (gradient)
	  rn2_7.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_6.c2.c.sc : [32 x 1] (gradient)
	  rn2_6.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_6.c2.c.b : [32 x 1] (gradient)
	  rn2_7.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_7.c2.c.sc : [32 x 1] (gradient)
	  rn2_7.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_5.c2.W : [32 x 288] (gradient)
	  rn2_6.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_4.c2.c.b : [32 x 1] (gradient)
	  rn2_5.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_6.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_6.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_6.y : [16 x 16 x 32 x *] (gradient)
	  rn2_8.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_8.c1.y : [16 x 16 x 32 x *] }
	{ rn2_7.c2.c.b : [32 x 1] (gradient)
	  rn2_8.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_7.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_7.y : [16 x 16 x 32 x *] }
	{ rn2_8.c1.c.W : [32 x 288] (gradient)
	  rn2_8.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_8.p : [16 x 16 x 32 x *] }
	{ rn2_8.c2.c.sc : [32 x 1] (gradient)
	  rn2_8.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_8.c2.W : [32 x 288] (gradient)
	  rn2_9.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_6.c1.c.W : [32 x 288] (gradient)
	  rn2_6.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_6.p : [16 x 16 x 32 x *] }
	{ rn2_8.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_8.y : [16 x 16 x 32 x *] }
	{ rn2_8.c2.c.b : [32 x 1] (gradient)
	  rn2_9.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_9.c1.c.W : [32 x 288] (gradient)
	  rn2_9.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_9.p : [16 x 16 x 32 x *] }
	{ rn2_9.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_9.y : [16 x 16 x 32 x *] }
	{ rn2_12.c2.c.b : [32 x 1] (gradient)
	  rn2_13.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_11.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_11.c1.y : [16 x 16 x 32 x *]
	  rn2_9.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_9.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_9.y : [16 x 16 x 32 x *] (gradient) }
	{ rn2_11.c2.c.b : [32 x 1] (gradient)
	  rn2_12.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_14.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_14.y : [16 x 16 x 32 x *] }
	{ rn2_14.c2.W : [32 x 288] (gradient)
	  rn2_15.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_14.c2.c.sc : [32 x 1] (gradient)
	  rn2_14.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_10.c1.c.W : [32 x 288] (gradient)
	  rn2_10.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_10.p : [16 x 16 x 32 x *] }
	{ rn2_10.c2.c.b : [32 x 1] (gradient)
	  rn2_11.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_12.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_12.y : [16 x 16 x 32 x *] }
	{ rn2_10.c2.W : [32 x 288] (gradient)
	  rn2_11.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_11.c1.c.W : [32 x 288] (gradient)
	  rn2_11.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_11.p : [16 x 16 x 32 x *] }
	{ rn2_11.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_11.y : [16 x 16 x 32 x *] }
	{ rn2_11.c2.W : [32 x 288] (gradient)
	  rn2_12.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_10.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_10.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_10.y : [16 x 16 x 32 x *] (gradient)
	  rn2_12.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_12.c1.y : [16 x 16 x 32 x *] }
	{ rn2_12.c2.c.sc : [32 x 1] (gradient)
	  rn2_12.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_10.c2.c.sc : [32 x 1] (gradient)
	  rn2_10.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_12.c2.W : [32 x 288] (gradient)
	  rn2_13.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_10.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_10.y : [16 x 16 x 32 x *] }
	{ rn2_10.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_10.c1.y : [16 x 16 x 32 x *]
	  rn2_8.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_8.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_8.y : [16 x 16 x 32 x *] (gradient) }
	{ rn2_11.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_11.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_11.y : [16 x 16 x 32 x *] (gradient)
	  rn2_13.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_13.c1.y : [16 x 16 x 32 x *] }
	{ rn2_12.c1.c.W : [32 x 288] (gradient)
	  rn2_12.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_12.p : [16 x 16 x 32 x *] }
	{ rn2_13.c2.W : [32 x 288] (gradient)
	  rn2_14.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_13.c2.c.sc : [32 x 1] (gradient)
	  rn2_13.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_13.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_13.y : [16 x 16 x 32 x *] }
	{ rn2_13.c1.c.W : [32 x 288] (gradient)
	  rn2_13.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_13.p : [16 x 16 x 32 x *] }
	{ rn2_12.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_12.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_12.y : [16 x 16 x 32 x *] (gradient)
	  rn2_14.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_14.c1.y : [16 x 16 x 32 x *] }
	{ rn2_10.c2.c.c : [16 x 16 x 32 x *]
	  rn2_9.c2.c.b : [32 x 1] (gradient) }
	{ rn2_13.c2.c.b : [32 x 1] (gradient)
	  rn2_14.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_14.c1.c.W : [32 x 288] (gradient)
	  rn2_14.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_14.p : [16 x 16 x 32 x *] }
	{ rn2_11.c2.c.sc : [32 x 1] (gradient)
	  rn2_11.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_16.c2.c.sc : [32 x 1] (gradient)
	  rn2_16.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_14.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_14.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_14.y : [16 x 16 x 32 x *] (gradient)
	  rn2_16.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_16.c1.y : [16 x 16 x 32 x *] }
	{ rn2_15.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_15.y : [16 x 16 x 32 x *] }
	{ rn2_15.c2.W : [32 x 288] (gradient)
	  rn2_16.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_15.c1.c.W : [32 x 288] (gradient)
	  rn2_15.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_15.p : [16 x 16 x 32 x *] }
	{ rn2_15.c2.c.sc : [32 x 1] (gradient)
	  rn2_15.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_14.c2.c.b : [32 x 1] (gradient)
	  rn2_15.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_16.c1.c.W : [32 x 288] (gradient)
	  rn2_16.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_16.p : [16 x 16 x 32 x *] }
	{ rn2_16.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_16.y : [16 x 16 x 32 x *] }
	{ rn2_15.c2.c.b : [32 x 1] (gradient)
	  rn2_16.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_13.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_13.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_13.y : [16 x 16 x 32 x *] (gradient)
	  rn2_15.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_15.c1.y : [16 x 16 x 32 x *] }
	{ rn2_16.c2.W : [32 x 288] (gradient)
	  rn2_17.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn3_10.c1.c.W : [64 x 576] (gradient)
	  rn3_10.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_10.p : [8 x 8 x 64 x *] }
	{ rn3_10.c2.W : [64 x 576] (gradient)
	  rn3_11.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_11.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_11.c1.y : [8 x 8 x 64 x *]
	  rn3_9.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_9.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_9.y : [8 x 8 x 64 x *] (gradient) }
	{ rn3_9.c1.c.W : [64 x 576] (gradient)
	  rn3_9.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_9.p : [8 x 8 x 64 x *] }
	{ rn3_9.c2.c.sc : [64 x 1] (gradient)
	  rn3_9.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_10.c2.c.c : [8 x 8 x 64 x *]
	  rn3_9.c2.c.b : [64 x 1] (gradient) }
	{ rn3_10.c2.c.b : [64 x 1] (gradient)
	  rn3_11.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_10.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_10.c1.y : [8 x 8 x 64 x *]
	  rn3_8.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_8.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_8.y : [8 x 8 x 64 x *] (gradient) }
	{ rn3_11.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_11.y : [8 x 8 x 64 x *] }
	{ rn3_11.c2.W : [64 x 576] (gradient)
	  rn3_12.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_7.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_7.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_7.y : [8 x 8 x 64 x *] (gradient)
	  rn3_9.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_9.c1.y : [8 x 8 x 64 x *] }
	{ rn3_10.c1.c.c.c : [8 x 8 x 64 x *]
	  rn3_9.c2.W : [64 x 576] (gradient) }
	{ rn3_8.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_8.y : [8 x 8 x 64 x *] }
	{ rn3_7.c2.c.b : [64 x 1] (gradient)
	  rn3_8.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_12.c2.c.sc : [64 x 1] (gradient)
	  rn3_12.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_12.c2.W : [64 x 576] (gradient)
	  rn3_13.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_11.c2.c.sc : [64 x 1] (gradient)
	  rn3_11.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_10.c2.c.sc : [64 x 1] (gradient)
	  rn3_10.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_11.c1.c.W : [64 x 576] (gradient)
	  rn3_11.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_11.p : [8 x 8 x 64 x *] }
	{ rn3_8.c1.c.W : [64 x 576] (gradient)
	  rn3_8.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_8.p : [8 x 8 x 64 x *] }
	{ rn3_8.c2.c.sc : [64 x 1] (gradient)
	  rn3_8.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_10.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_10.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_10.y : [8 x 8 x 64 x *] (gradient)
	  rn3_12.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_12.c1.y : [8 x 8 x 64 x *] }
	{ rn3_9.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_9.y : [8 x 8 x 64 x *] }
	{ rn3_11.c2.c.b : [64 x 1] (gradient)
	  rn3_12.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_10.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_10.y : [8 x 8 x 64 x *] }
	{ rn3_8.c2.W : [64 x 576] (gradient)
	  rn3_9.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_12.c1.c.W : [64 x 576] (gradient)
	  rn3_12.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_12.p : [8 x 8 x 64 x *] }
	{ rn3_12.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_12.y : [8 x 8 x 64 x *] }
	{ rn3_8.c2.c.b : [64 x 1] (gradient)
	  rn3_9.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_6.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_6.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_6.y : [8 x 8 x 64 x *] (gradient)
	  rn3_8.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_8.c1.y : [8 x 8 x 64 x *] }
	{ rn3_15.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_15.y : [8 x 8 x 64 x *] }
	{ rn3_15.c2.c.sc : [64 x 1] (gradient)
	  rn3_15.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_14.c2.W : [64 x 576] (gradient)
	  rn3_15.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_13.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_13.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_13.y : [8 x 8 x 64 x *] (gradient)
	  rn3_15.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_15.c1.y : [8 x 8 x 64 x *] }
	{ rn3_14.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_14.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_14.y : [8 x 8 x 64 x *] (gradient)
	  rn3_16.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_16.c1.y : [8 x 8 x 64 x *] }
	{ rn3_16.c1.c.W : [64 x 576] (gradient)
	  rn3_16.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_16.p : [8 x 8 x 64 x *] }
	{ rn3_16.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_16.y : [8 x 8 x 64 x *] }
	{ rn3_14.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_14.y : [8 x 8 x 64 x *] }
	{ rn3_13.c1.c.W : [64 x 576] (gradient)
	  rn3_13.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_13.p : [8 x 8 x 64 x *] }
	{ rn3_11.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_11.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_11.y : [8 x 8 x 64 x *] (gradient)
	  rn3_13.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_13.c1.y : [8 x 8 x 64 x *] }
	{ rn3_15.c2.c.b : [64 x 1] (gradient)
	  rn3_16.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_16.c2.c.b : [64 x 1] (gradient)
	  rn3_17.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_17.c2.W : [64 x 576] (gradient)
	  rn3_18.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_17.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_17.y : [8 x 8 x 64 x *] }
	{ rn3_12.c2.c.b : [64 x 1] (gradient)
	  rn3_13.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_17.c2.c.sc : [64 x 1] (gradient)
	  rn3_17.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_16.c2.W : [64 x 576] (gradient)
	  rn3_17.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_14.c2.c.b : [64 x 1] (gradient)
	  rn3_15.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_15.c2.W : [64 x 576] (gradient)
	  rn3_16.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_13.c2.W : [64 x 576] (gradient)
	  rn3_14.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_14.c2.c.sc : [64 x 1] (gradient)
	  rn3_14.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_14.c1.c.W : [64 x 576] (gradient)
	  rn3_14.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_14.p : [8 x 8 x 64 x *] }
	{ rn3_15.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_15.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_15.y : [8 x 8 x 64 x *] (gradient)
	  rn3_17.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_17.c1.y : [8 x 8 x 64 x *] }
	{ rn3_15.c1.c.W : [64 x 576] (gradient)
	  rn3_15.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_15.p : [8 x 8 x 64 x *] }
	{ rn3_13.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_13.y : [8 x 8 x 64 x *] }
	{ rn3_17.c1.c.W : [64 x 576] (gradient)
	  rn3_17.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_17.p : [8 x 8 x 64 x *] }
	{ rn3_16.c2.c.sc : [64 x 1] (gradient)
	  rn3_16.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_12.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_12.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_12.y : [8 x 8 x 64 x *] (gradient)
	  rn3_14.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_14.c1.y : [8 x 8 x 64 x *] }
	{ rn3_13.c2.c.b : [64 x 1] (gradient)
	  rn3_14.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_13.c2.c.sc : [64 x 1] (gradient)
	  rn3_13.p : [8 x 8 x 64 x *] (gradient) }
	{ OutputNodes.W : [10 x 1 x 1 x 64] (gradient)
	  OutputNodes.z : [10 x *] (gradient) }
	{ pool : [1 x 1 x 64 x *] (gradient)
	  rn3_18.c2.W : [64 x 576] (gradient) }
	{ rn3_16.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_16.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_16.y : [8 x 8 x 64 x *] (gradient)
	  rn3_18.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_18.c1.y : [8 x 8 x 64 x *] }
	{ rn3_17.c2.c.b : [64 x 1] (gradient)
	  rn3_18.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_18.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_18.y : [8 x 8 x 64 x *] }
	{ OutputNodes.t : [10 x *] (gradient)
	  rn3_17.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_17.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_17.y : [8 x 8 x 64 x *] (gradient) }
	{ rn3_18.c1.c.W : [64 x 576] (gradient)
	  rn3_18.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_18.p : [8 x 8 x 64 x *] }
	{ OutputNodes.t : [10 x *]
	  rn3_18.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_18.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_18.y : [8 x 8 x 64 x *] (gradient) }
	{ pool : [1 x 1 x 64 x *]
	  rn3_18.c2.c.sc : [64 x 1] (gradient)
	  rn3_18.p : [8 x 8 x 64 x *] (gradient) }
	{ rn2_17.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_17.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_17.y : [16 x 16 x 32 x *] (gradient)
	  rn3_1.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_1.c1.y : [8 x 8 x 64 x *] }
	{ rn3_1.c1.c.W : [64 x 288] (gradient)
	  rn3_1.c2.c.c : [8 x 8 x 64 x *] (gradient) }
	{ rn2_17.c2.c.b : [32 x 1] (gradient)
	  rn2_18.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_18.c2.c.sc : [32 x 1] (gradient)
	  rn2_18.p : [16 x 16 x 32 x *] (gradient) }
	{ rn3_1.c2.c.b : [64 x 1] (gradient)
	  rn3_1.c_proj.c : [8 x 8 x 64 x *] (gradient)
	  rn3_1.p : [8 x 8 x 64 x *] }
	{ rn2_18.c2.W : [32 x 288] (gradient)
	  rn3_1.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_1.c_proj.sc : [64 x 1] (gradient)
	  rn3_1.p : [8 x 8 x 64 x *] (gradient) }
	{ rn2_16.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_16.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_16.y : [16 x 16 x 32 x *] (gradient)
	  rn2_18.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_18.c1.y : [16 x 16 x 32 x *] }
	{ rn3_1.c2.c.sc : [64 x 1] (gradient)
	  rn3_1.c_proj.c : [8 x 8 x 64 x *] }
	{ rn3_2.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_2.y : [8 x 8 x 64 x *] }
	{ rn2_17.c2.W : [32 x 288] (gradient)
	  rn2_18.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn3_1.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_1.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_3.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_3.c1.y : [8 x 8 x 64 x *] }
	{ rn3_1.c_proj.y : [8 x 8 x 64 x *] (gradient)
	  rn3_2.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_2.c1.y : [8 x 8 x 64 x *] }
	{ rn3_2.c2.c.b : [64 x 1] (gradient)
	  rn3_3.c2.c.c : [8 x 8 x 64 x *] }
	{ rn2_18.c1.c.W : [32 x 288] (gradient)
	  rn2_18.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_18.p : [16 x 16 x 32 x *] }
	{ rn3_3.c1.c.W : [64 x 576] (gradient)
	  rn3_3.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_3.p : [8 x 8 x 64 x *] }
	{ rn2_15.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_15.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_15.y : [16 x 16 x 32 x *] (gradient)
	  rn2_17.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_17.c1.y : [16 x 16 x 32 x *] }
	{ rn3_1.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_1.y : [8 x 8 x 64 x *] }
	{ rn3_1.c2.W : [64 x 576] (gradient)
	  rn3_2.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn2_16.c2.c.b : [32 x 1] (gradient)
	  rn2_17.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_18.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_18.y : [16 x 16 x 32 x *] }
	{ rn3_2.c2.W : [64 x 576] (gradient)
	  rn3_3.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn2_18.c2.c.b : [32 x 1] (gradient)
	  rn3_1.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_2.c2.c.sc : [64 x 1] (gradient)
	  rn3_2.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_2.c1.c.W : [64 x 576] (gradient)
	  rn3_2.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_2.p : [8 x 8 x 64 x *] }
	{ rn2_18.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_18.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_18.y : [16 x 16 x 32 x *] (gradient) }
	{ rn2_17.c2.c.sc : [32 x 1] (gradient)
	  rn2_17.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_17.c1.c.W : [32 x 288] (gradient)
	  rn2_17.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_17.p : [16 x 16 x 32 x *] }
	{ rn2_17.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_17.y : [16 x 16 x 32 x *] }
	{ rn3_5.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_5.y : [8 x 8 x 64 x *] }
	{ rn3_5.c2.c.sc : [64 x 1] (gradient)
	  rn3_5.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_4.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_4.y : [8 x 8 x 64 x *] }
	{ rn3_4.c2.c.b : [64 x 1] (gradient)
	  rn3_5.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_5.c2.c.b : [64 x 1] (gradient)
	  rn3_6.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_4.c1.c.W : [64 x 576] (gradient)
	  rn3_4.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_4.p : [8 x 8 x 64 x *] }
	{ rn3_6.c2.c.b : [64 x 1] (gradient)
	  rn3_7.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_3.c2.c.b : [64 x 1] (gradient)
	  rn3_4.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_4.c2.c.sc : [64 x 1] (gradient)
	  rn3_4.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_4.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_4.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_4.y : [8 x 8 x 64 x *] (gradient)
	  rn3_6.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_6.c1.y : [8 x 8 x 64 x *] }
	{ rn3_3.c2.W : [64 x 576] (gradient)
	  rn3_4.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_6.c2.W : [64 x 576] (gradient)
	  rn3_7.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_5.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_5.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_5.y : [8 x 8 x 64 x *] (gradient)
	  rn3_7.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_7.c1.y : [8 x 8 x 64 x *] }
	{ rn3_7.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_7.y : [8 x 8 x 64 x *] }
	{ rn3_6.c2.c.sc : [64 x 1] (gradient)
	  rn3_6.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_7.c2.W : [64 x 576] (gradient)
	  rn3_8.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_7.c2.c.sc : [64 x 1] (gradient)
	  rn3_7.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_3.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_3.y : [8 x 8 x 64 x *] }
	{ rn3_3.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_3.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_3.y : [8 x 8 x 64 x *] (gradient)
	  rn3_5.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_5.c1.y : [8 x 8 x 64 x *] }
	{ rn3_4.c2.W : [64 x 576] (gradient)
	  rn3_5.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_6.c1.c.W : [64 x 576] (gradient)
	  rn3_6.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_6.p : [8 x 8 x 64 x *] }
	{ rn3_3.c2.c.sc : [64 x 1] (gradient)
	  rn3_3.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_5.c2.W : [64 x 576] (gradient)
	  rn3_6.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_7.c1.c.W : [64 x 576] (gradient)
	  rn3_7.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_7.p : [8 x 8 x 64 x *] }
	{ rn3_5.c1.c.W : [64 x 576] (gradient)
	  rn3_5.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_5.p : [8 x 8 x 64 x *] }
	{ rn3_6.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_6.y : [8 x 8 x 64 x *] }
	{ rn3_2.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_2.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_2.y : [8 x 8 x 64 x *] (gradient)
	  rn3_4.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_4.c1.y : [8 x 8 x 64 x *] }


08/16/2016 12:15:14: Training 1728154 parameters in 333 out of 333 parameter tensors and 722 nodes with gradient:

08/16/2016 12:15:14: 	Node 'OutputNodes.W' (LearnableParameter operation) : [10 x 1 x 1 x 64]
08/16/2016 12:15:14: 	Node 'OutputNodes.b' (LearnableParameter operation) : [10]
08/16/2016 12:15:14: 	Node 'conv1.c.W' (LearnableParameter operation) : [16 x 27]
08/16/2016 12:15:14: 	Node 'conv1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'conv1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_1.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_1.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_1.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_1.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_1.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_1.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_10.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_10.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_10.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_10.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_10.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_10.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_11.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_11.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_11.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_11.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_11.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_11.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_12.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_12.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_12.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_12.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_12.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_12.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_13.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_13.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_13.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_13.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_13.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_13.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_14.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_14.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_14.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_14.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_14.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_14.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_15.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_15.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_15.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_15.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_15.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_15.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_16.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_16.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_16.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_16.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_16.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_16.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_17.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_17.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_17.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_17.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_17.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_17.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_18.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_18.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_18.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_18.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_18.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_18.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_2.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_2.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_2.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_2.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_2.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_2.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_3.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_3.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_3.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_3.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_3.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_3.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_4.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_4.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_4.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_4.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_4.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_4.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_5.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_5.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_5.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_5.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_5.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_5.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_6.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_6.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_6.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_6.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_6.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_6.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_7.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_7.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_7.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_7.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_7.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_7.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_8.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_8.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_8.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_8.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_8.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_8.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_9.c1.c.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_9.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_9.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_9.c2.W' (LearnableParameter operation) : [16 x 144]
08/16/2016 12:15:14: 	Node 'rn1_9.c2.c.b' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn1_9.c2.c.sc' (LearnableParameter operation) : [16 x 1]
08/16/2016 12:15:14: 	Node 'rn2_1.c1.c.W' (LearnableParameter operation) : [32 x 144]
08/16/2016 12:15:14: 	Node 'rn2_1.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_1.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_1.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_1.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_1.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_1.c_proj.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_1.c_proj.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_10.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_10.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_10.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_10.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_10.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_10.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_11.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_11.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_11.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_11.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_11.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_11.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_12.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_12.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_12.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_12.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_12.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_12.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_13.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_13.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_13.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_13.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_13.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_13.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_14.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_14.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_14.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_14.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_14.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_14.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_15.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_15.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_15.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_15.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_15.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_15.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_16.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_16.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_16.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_16.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_16.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_16.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_17.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_17.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_17.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_17.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_17.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_17.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_18.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_18.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_18.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_18.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_18.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_18.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_2.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_2.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_2.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_2.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_2.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_2.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_3.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_3.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_3.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_3.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_3.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_3.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_4.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_4.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_4.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_4.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_4.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_4.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_5.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_5.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_5.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_5.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_5.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_5.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_6.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_6.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_6.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_6.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_6.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_6.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_7.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_7.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_7.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_7.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_7.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_7.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_8.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_8.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_8.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_8.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_8.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_8.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_9.c1.c.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_9.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_9.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_9.c2.W' (LearnableParameter operation) : [32 x 288]
08/16/2016 12:15:14: 	Node 'rn2_9.c2.c.b' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn2_9.c2.c.sc' (LearnableParameter operation) : [32 x 1]
08/16/2016 12:15:14: 	Node 'rn3_1.c1.c.W' (LearnableParameter operation) : [64 x 288]
08/16/2016 12:15:14: 	Node 'rn3_1.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_1.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_1.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_1.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_1.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_1.c_proj.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_1.c_proj.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_10.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_10.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_10.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_10.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_10.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_10.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_11.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_11.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_11.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_11.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_11.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_11.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_12.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_12.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_12.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_12.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_12.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_12.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_13.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_13.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_13.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_13.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_13.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_13.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_14.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_14.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_14.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_14.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_14.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_14.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_15.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_15.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_15.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_15.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_15.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_15.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_16.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_16.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_16.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_16.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_16.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_16.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_17.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_17.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_17.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_17.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_17.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_17.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_18.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_18.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_18.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_18.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_18.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_18.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_2.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_2.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_2.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_2.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_2.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_2.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_3.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_3.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_3.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_3.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_3.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_3.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_4.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_4.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_4.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_4.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_4.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_4.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_5.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_5.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_5.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_5.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_5.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_5.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_6.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_6.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_6.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_6.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_6.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_6.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_7.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_7.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_7.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_7.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_7.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_7.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_8.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_8.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_8.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_8.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_8.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_8.c2.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_9.c1.c.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_9.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_9.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_9.c2.W' (LearnableParameter operation) : [64 x 576]
08/16/2016 12:15:14: 	Node 'rn3_9.c2.c.b' (LearnableParameter operation) : [64 x 1]
08/16/2016 12:15:14: 	Node 'rn3_9.c2.c.sc' (LearnableParameter operation) : [64 x 1]

08/16/2016 12:15:14: No PreCompute nodes found, or all already computed. Skipping pre-computation step.

08/16/2016 12:15:14: Starting Epoch 1: learning rate per sample = 0.006250  effective momentum = 0.900000  momentum as time constant = 151.9 samples

08/16/2016 12:15:14: Starting minibatch loop.
08/16/2016 12:15:26: Finished Epoch[ 1 of 1]: [Training] CE = 2.57826185 * 128; Err = 0.92187500 * 128; totalSamplesSeen = 128; learningRatePerSample = 0.0062500001; epochTime=11.7704s
08/16/2016 12:15:26: SGD: Saving checkpoint model 'C:\R\CNTK\Tests\EndToEndTests\Examples\Image\Miscellaneous\CIFAR-10\03_ResNet\cntk4\Examples\Image\Miscellaneous\CIFAR-10_04_ResNet_56@debug_gpu/Models/04_ResNet_56'
08/16/2016 12:15:27: CNTKCommandTrainEnd: Train

08/16/2016 12:15:27: Action "train" complete.


08/16/2016 12:15:27: ##############################################################################
08/16/2016 12:15:27: #                                                                            #
08/16/2016 12:15:27: # Action "test"                                                              #
08/16/2016 12:15:27: #                                                                            #
08/16/2016 12:15:27: ##############################################################################


Post-processing network...

3 roots:
	CE = CrossEntropyWithSoftmax()
	Err = ErrorPrediction()
	OutputNodes.z = Plus()

Validating network. 949 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *1]
Validating --> OutputNodes.W = LearnableParameter() :  -> [10 x 1 x 1 x 64]
Validating --> rn3_18.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_18.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_17.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_17.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_16.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_16.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_15.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_15.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_14.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_14.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_13.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_13.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_12.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_12.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_11.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_11.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_10.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_10.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_9.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_9.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_8.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_8.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_7.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_7.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_6.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_6.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_5.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_5.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_4.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_4.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_3.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_3.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_2.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_2.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_1.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_1.c1.c.W = LearnableParameter() :  -> [64 x 288]
Validating --> rn2_18.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_18.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_17.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_17.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_16.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_16.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_15.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_15.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_14.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_14.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_13.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_13.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_12.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_12.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_11.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_11.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_10.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_10.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_9.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_9.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_8.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_8.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_7.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_7.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_6.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_6.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_5.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_5.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_4.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_4.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_3.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_3.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_2.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_2.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_1.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_1.c1.c.W = LearnableParameter() :  -> [32 x 144]
Validating --> rn1_18.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_18.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_17.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_17.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_16.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_16.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_15.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_15.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_14.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_14.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_13.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_13.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_12.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_12.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_11.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_11.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_10.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_10.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_9.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_9.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_8.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_8.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_7.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_7.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_6.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_6.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_5.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_5.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_4.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_4.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_3.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_3.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_2.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_2.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_1.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_1.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> conv1.c.W = LearnableParameter() :  -> [16 x 27]
Validating --> features = InputValue() :  -> [32 x 32 x 3 x *1]
Validating --> conv1.c.c.c = Convolution (conv1.c.W, features) : [16 x 27], [32 x 32 x 3 x *1] -> [32 x 32 x 16 x *1]
Validating --> conv1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- conv1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0018643918	
0.0037058650	
0.0024907447	
0.0022123395	
0.0035068896	
0.0026209021	
0.0025425921	
0.0029008857	
0.0019481254	
0.0023256158	
0.0023589081	
0.0028457674	
0.0025282030	
0.0019148099	
0.0037491636	
0.0017954771	
Validating --> conv1.c.c.y = BatchNormalization (conv1.c.c.c, conv1.c.c.sc, conv1.c.c.b, conv1.c.c.m, conv1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> conv1.y = RectifiedLinear (conv1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.c1.c.c.c = Convolution (rn1_1.c1.c.W, conv1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_1.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0379333980	
0.0566234589	
0.0279226024	
0.0271218773	
0.0332270451	
0.0254448149	
0.0364050008	
0.0397174321	
0.0372420810	
0.0471106470	
0.0438613407	
0.0381040946	
0.0266152006	
0.0622146726	
0.0500501432	
0.0343788937	
Validating --> rn1_1.c1.c.c.y = BatchNormalization (rn1_1.c1.c.c.c, rn1_1.c1.c.c.sc, rn1_1.c1.c.c.b, rn1_1.c1.c.c.m, rn1_1.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.c1.y = RectifiedLinear (rn1_1.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.c2.c.c = Convolution (rn1_1.c2.W, rn1_1.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_1.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0398298763	
0.0269107893	
0.0480102710	
0.0397539064	
0.0421092138	
0.0497658029	
0.0386059657	
0.0284398720	
0.0360248201	
0.0376263745	
0.0534999929	
0.0358089395	
0.0463738479	
0.0529709570	
0.0259095188	
0.0318068191	
Validating --> rn1_1.c2.c.y = BatchNormalization (rn1_1.c2.c.c, rn1_1.c2.c.sc, rn1_1.c2.c.b, rn1_1.c2.c.m, rn1_1.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.p = Plus (rn1_1.c2.c.y, conv1.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.y = RectifiedLinear (rn1_1.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.c1.c.c.c = Convolution (rn1_2.c1.c.W, rn1_1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_2.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0217001159	
0.0230068062	
0.0309701692	
0.0197438374	
0.0224142727	
0.0198760610	
0.0335007831	
0.0289970879	
0.0295690969	
0.0221812744	
0.0247308295	
0.0243860912	
0.0258510038	
0.0304509662	
0.0358765535	
0.0180779733	
Validating --> rn1_2.c1.c.c.y = BatchNormalization (rn1_2.c1.c.c.c, rn1_2.c1.c.c.sc, rn1_2.c1.c.c.b, rn1_2.c1.c.c.m, rn1_2.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.c1.y = RectifiedLinear (rn1_2.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.c2.c.c = Convolution (rn1_2.c2.W, rn1_2.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_2.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0413653739	
0.0466973595	
0.0342660509	
0.0448748842	
0.0378360823	
0.0400073044	
0.0333296619	
0.0401305370	
0.0259302519	
0.0345154032	
0.0347166322	
0.0308289081	
0.0354131199	
0.0427250341	
0.0485913008	
0.0351927467	
Validating --> rn1_2.c2.c.y = BatchNormalization (rn1_2.c2.c.c, rn1_2.c2.c.sc, rn1_2.c2.c.b, rn1_2.c2.c.m, rn1_2.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.p = Plus (rn1_2.c2.c.y, rn1_1.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.y = RectifiedLinear (rn1_2.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.c1.c.c.c = Convolution (rn1_3.c1.c.W, rn1_2.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_3.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0256311037	
0.0251022521	
0.0291540250	
0.0277499203	
0.0220600907	
0.0197111294	
0.0220726728	
0.0169347078	
0.0250700004	
0.0376760885	
0.0216763355	
0.0171074830	
0.0247589499	
0.0247215908	
0.0134563725	
0.0164403524	
Validating --> rn1_3.c1.c.c.y = BatchNormalization (rn1_3.c1.c.c.c, rn1_3.c1.c.c.sc, rn1_3.c1.c.c.b, rn1_3.c1.c.c.m, rn1_3.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.c1.y = RectifiedLinear (rn1_3.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.c2.c.c = Convolution (rn1_3.c2.W, rn1_3.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_3.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0449674055	
0.0460007861	
0.0407654308	
0.0433214158	
0.0383543707	
0.0300120581	
0.0359544009	
0.0361788310	
0.0310880989	
0.0445548594	
0.0406838506	
0.0297485404	
0.0391369388	
0.0353576243	
0.0238366239	
0.0409955792	
Validating --> rn1_3.c2.c.y = BatchNormalization (rn1_3.c2.c.c, rn1_3.c2.c.sc, rn1_3.c2.c.b, rn1_3.c2.c.m, rn1_3.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.p = Plus (rn1_3.c2.c.y, rn1_2.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.y = RectifiedLinear (rn1_3.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.c1.c.c.c = Convolution (rn1_4.c1.c.W, rn1_3.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_4.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0192092415	
0.0210070796	
0.0106486659	
0.0163674038	
0.0154926442	
0.0150516946	
0.0207270700	
0.0112263346	
0.0122432048	
0.0151964761	
0.0133211436	
0.0201808177	
0.0128880721	
0.0115832780	
0.0129757663	
0.0197994597	
Validating --> rn1_4.c1.c.c.y = BatchNormalization (rn1_4.c1.c.c.c, rn1_4.c1.c.c.sc, rn1_4.c1.c.c.b, rn1_4.c1.c.c.m, rn1_4.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.c1.y = RectifiedLinear (rn1_4.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.c2.c.c = Convolution (rn1_4.c2.W, rn1_4.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_4.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0305912178	
0.0456634499	
0.0349614844	
0.0414182507	
0.0362375826	
0.0453819111	
0.0395215377	
0.0368374735	
0.0472477563	
0.0307873059	
0.0333263911	
0.0420406535	
0.0326208025	
0.0212526545	
0.0528117269	
0.0387058295	
Validating --> rn1_4.c2.c.y = BatchNormalization (rn1_4.c2.c.c, rn1_4.c2.c.sc, rn1_4.c2.c.b, rn1_4.c2.c.m, rn1_4.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.p = Plus (rn1_4.c2.c.y, rn1_3.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.y = RectifiedLinear (rn1_4.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.c1.c.c.c = Convolution (rn1_5.c1.c.W, rn1_4.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_5.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0179060474	
0.0186847169	
0.0225477759	
0.0159171987	
0.0125907660	
0.0159515664	
0.0156662073	
0.0144084329	
0.0075408099	
0.0142930811	
0.0121995080	
0.0206014514	
0.0202062856	
0.0176858306	
0.0111934394	
0.0184492432	
Validating --> rn1_5.c1.c.c.y = BatchNormalization (rn1_5.c1.c.c.c, rn1_5.c1.c.c.sc, rn1_5.c1.c.c.b, rn1_5.c1.c.c.m, rn1_5.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.c1.y = RectifiedLinear (rn1_5.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.c2.c.c = Convolution (rn1_5.c2.W, rn1_5.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_5.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0422771163	
0.0420941152	
0.0331879407	
0.0441901386	
0.0428051502	
0.0370340422	
0.0499818586	
0.0469012074	
0.0300193503	
0.0418907590	
0.0459172577	
0.0400351398	
0.0429672264	
0.0366327167	
0.0431782156	
0.0476063564	
Validating --> rn1_5.c2.c.y = BatchNormalization (rn1_5.c2.c.c, rn1_5.c2.c.sc, rn1_5.c2.c.b, rn1_5.c2.c.m, rn1_5.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.p = Plus (rn1_5.c2.c.y, rn1_4.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.y = RectifiedLinear (rn1_5.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.c1.c.c.c = Convolution (rn1_6.c1.c.W, rn1_5.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_6.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0136146871	
0.0131787052	
0.0125115151	
0.0188430771	
0.0186207909	
0.0146383336	
0.0148028778	
0.0170606319	
0.0148251979	
0.0145634450	
0.0151076335	
0.0202890895	
0.0146948779	
0.0151621904	
0.0142359221	
0.0125616193	
Validating --> rn1_6.c1.c.c.y = BatchNormalization (rn1_6.c1.c.c.c, rn1_6.c1.c.c.sc, rn1_6.c1.c.c.b, rn1_6.c1.c.c.m, rn1_6.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.c1.y = RectifiedLinear (rn1_6.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.c2.c.c = Convolution (rn1_6.c2.W, rn1_6.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_6.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0442269072	
0.0418804549	
0.0351645947	
0.0269822907	
0.0348088667	
0.0504022092	
0.0308458749	
0.0383664221	
0.0410711169	
0.0324103199	
0.0433594212	
0.0403101481	
0.0466720052	
0.0424531214	
0.0373996086	
0.0327858739	
Validating --> rn1_6.c2.c.y = BatchNormalization (rn1_6.c2.c.c, rn1_6.c2.c.sc, rn1_6.c2.c.b, rn1_6.c2.c.m, rn1_6.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.p = Plus (rn1_6.c2.c.y, rn1_5.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.y = RectifiedLinear (rn1_6.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.c1.c.c.c = Convolution (rn1_7.c1.c.W, rn1_6.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_7.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0153776519	
0.0114399809	
0.0109636355	
0.0174602382	
0.0162042622	
0.0139774922	
0.0135099310	
0.0143963955	
0.0111217303	
0.0105800284	
0.0168591347	
0.0105232205	
0.0122915059	
0.0158536937	
0.0151116624	
0.0158076044	
Validating --> rn1_7.c1.c.c.y = BatchNormalization (rn1_7.c1.c.c.c, rn1_7.c1.c.c.sc, rn1_7.c1.c.c.b, rn1_7.c1.c.c.m, rn1_7.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.c1.y = RectifiedLinear (rn1_7.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.c2.c.c = Convolution (rn1_7.c2.W, rn1_7.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_7.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0422205441	
0.0444455147	
0.0472248048	
0.0411341600	
0.0365554392	
0.0455004126	
0.0395693332	
0.0381958038	
0.0427252166	
0.0458662361	
0.0392309539	
0.0357776023	
0.0381013751	
0.0507492498	
0.0279177018	
0.0425689258	
Validating --> rn1_7.c2.c.y = BatchNormalization (rn1_7.c2.c.c, rn1_7.c2.c.sc, rn1_7.c2.c.b, rn1_7.c2.c.m, rn1_7.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.p = Plus (rn1_7.c2.c.y, rn1_6.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.y = RectifiedLinear (rn1_7.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.c1.c.c.c = Convolution (rn1_8.c1.c.W, rn1_7.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_8.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0117591750	
0.0143089471	
0.0080880327	
0.0179266632	
0.0131055033	
0.0103714187	
0.0129528614	
0.0124042574	
0.0121747563	
0.0137171550	
0.0130642336	
0.0142474789	
0.0132648563	
0.0085589085	
0.0109568015	
0.0139829610	
Validating --> rn1_8.c1.c.c.y = BatchNormalization (rn1_8.c1.c.c.c, rn1_8.c1.c.c.sc, rn1_8.c1.c.c.b, rn1_8.c1.c.c.m, rn1_8.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.c1.y = RectifiedLinear (rn1_8.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.c2.c.c = Convolution (rn1_8.c2.W, rn1_8.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_8.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0388547629	
0.0345866308	
0.0480150543	
0.0252047591	
0.0285676848	
0.0352427661	
0.0338200331	
0.0354494341	
0.0325019024	
0.0265107900	
0.0432484671	
0.0398304239	
0.0398841389	
0.0374255814	
0.0382784307	
0.0403531790	
Validating --> rn1_8.c2.c.y = BatchNormalization (rn1_8.c2.c.c, rn1_8.c2.c.sc, rn1_8.c2.c.b, rn1_8.c2.c.m, rn1_8.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.p = Plus (rn1_8.c2.c.y, rn1_7.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.y = RectifiedLinear (rn1_8.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.c1.c.c.c = Convolution (rn1_9.c1.c.W, rn1_8.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_9.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0126354638	
0.0078703538	
0.0139782075	
0.0132287648	
0.0154916150	
0.0127157206	
0.0094353147	
0.0139631638	
0.0101639070	
0.0117578162	
0.0072346171	
0.0111651216	
0.0114241866	
0.0104584685	
0.0142606618	
0.0112301763	
Validating --> rn1_9.c1.c.c.y = BatchNormalization (rn1_9.c1.c.c.c, rn1_9.c1.c.c.sc, rn1_9.c1.c.c.b, rn1_9.c1.c.c.m, rn1_9.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.c1.y = RectifiedLinear (rn1_9.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.c2.c.c = Convolution (rn1_9.c2.W, rn1_9.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_9.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0497426167	
0.0286767930	
0.0327409245	
0.0465070531	
0.0430299155	
0.0482152924	
0.0351757817	
0.0381931290	
0.0367129184	
0.0311487578	
0.0414148755	
0.0395817123	
0.0364923477	
0.0458182283	
0.0248037335	
0.0444605388	
Validating --> rn1_9.c2.c.y = BatchNormalization (rn1_9.c2.c.c, rn1_9.c2.c.sc, rn1_9.c2.c.b, rn1_9.c2.c.m, rn1_9.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.p = Plus (rn1_9.c2.c.y, rn1_8.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.y = RectifiedLinear (rn1_9.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.c1.c.c.c = Convolution (rn1_10.c1.c.W, rn1_9.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_10.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0129817370	
0.0113661271	
0.0092281038	
0.0126178516	
0.0127939684	
0.0110701472	
0.0072267288	
0.0104813622	
0.0108763566	
0.0095124366	
0.0096657565	
0.0099449027	
0.0130212400	
0.0088222502	
0.0123177227	
0.0127654728	
Validating --> rn1_10.c1.c.c.y = BatchNormalization (rn1_10.c1.c.c.c, rn1_10.c1.c.c.sc, rn1_10.c1.c.c.b, rn1_10.c1.c.c.m, rn1_10.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.c1.y = RectifiedLinear (rn1_10.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.c2.c.c = Convolution (rn1_10.c2.W, rn1_10.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_10.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0451172590	
0.0370367952	
0.0320648104	
0.0306352824	
0.0401827618	
0.0438312702	
0.0354102105	
0.0365608968	
0.0464569181	
0.0340262912	
0.0445303023	
0.0410884246	
0.0292722471	
0.0253988132	
0.0317797400	
0.0305985492	
Validating --> rn1_10.c2.c.y = BatchNormalization (rn1_10.c2.c.c, rn1_10.c2.c.sc, rn1_10.c2.c.b, rn1_10.c2.c.m, rn1_10.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.p = Plus (rn1_10.c2.c.y, rn1_9.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.y = RectifiedLinear (rn1_10.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.c1.c.c.c = Convolution (rn1_11.c1.c.W, rn1_10.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_11.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0074999603	
0.0103885792	
0.0102829663	
0.0063507124	
0.0070978180	
0.0110198725	
0.0121192727	
0.0111210169	
0.0106719015	
0.0113102682	
0.0125352638	
0.0127475383	
0.0086943619	
0.0132191274	
0.0136742666	
0.0137953209	
Validating --> rn1_11.c1.c.c.y = BatchNormalization (rn1_11.c1.c.c.c, rn1_11.c1.c.c.sc, rn1_11.c1.c.c.b, rn1_11.c1.c.c.m, rn1_11.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.c1.y = RectifiedLinear (rn1_11.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.c2.c.c = Convolution (rn1_11.c2.W, rn1_11.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_11.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0461502299	
0.0242294744	
0.0399850532	
0.0343795829	
0.0384661108	
0.0436776094	
0.0353448614	
0.0525426380	
0.0406790003	
0.0409882069	
0.0424624160	
0.0388922319	
0.0380786583	
0.0344569683	
0.0364103839	
0.0345311984	
Validating --> rn1_11.c2.c.y = BatchNormalization (rn1_11.c2.c.c, rn1_11.c2.c.sc, rn1_11.c2.c.b, rn1_11.c2.c.m, rn1_11.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.p = Plus (rn1_11.c2.c.y, rn1_10.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.y = RectifiedLinear (rn1_11.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.c1.c.c.c = Convolution (rn1_12.c1.c.W, rn1_11.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_12.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0091658067	
0.0088714221	
0.0104065966	
0.0079375058	
0.0105698211	
0.0113072284	
0.0077273697	
0.0084581962	
0.0109351436	
0.0069293259	
0.0129963830	
0.0080074072	
0.0113786757	
0.0088400180	
0.0053539579	
0.0125028556	
Validating --> rn1_12.c1.c.c.y = BatchNormalization (rn1_12.c1.c.c.c, rn1_12.c1.c.c.sc, rn1_12.c1.c.c.b, rn1_12.c1.c.c.m, rn1_12.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.c1.y = RectifiedLinear (rn1_12.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.c2.c.c = Convolution (rn1_12.c2.W, rn1_12.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_12.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0418650471	
0.0350157544	
0.0453554429	
0.0385669470	
0.0460420549	
0.0359193012	
0.0486457497	
0.0408286154	
0.0472682975	
0.0460832566	
0.0387710892	
0.0425715894	
0.0435873345	
0.0404138453	
0.0365560949	
0.0409966111	
Validating --> rn1_12.c2.c.y = BatchNormalization (rn1_12.c2.c.c, rn1_12.c2.c.sc, rn1_12.c2.c.b, rn1_12.c2.c.m, rn1_12.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.p = Plus (rn1_12.c2.c.y, rn1_11.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.y = RectifiedLinear (rn1_12.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.c1.c.c.c = Convolution (rn1_13.c1.c.W, rn1_12.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_13.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0051979953	
0.0112347677	
0.0133230332	
0.0118472185	
0.0052324999	
0.0106456252	
0.0095219947	
0.0109224264	
0.0100502698	
0.0070644664	
0.0070287604	
0.0100032082	
0.0094049955	
0.0093794363	
0.0112412414	
0.0061936975	
Validating --> rn1_13.c1.c.c.y = BatchNormalization (rn1_13.c1.c.c.c, rn1_13.c1.c.c.sc, rn1_13.c1.c.c.b, rn1_13.c1.c.c.m, rn1_13.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.c1.y = RectifiedLinear (rn1_13.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.c2.c.c = Convolution (rn1_13.c2.W, rn1_13.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_13.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0407554433	
0.0348742120	
0.0436667949	
0.0446042866	
0.0440670289	
0.0396118015	
0.0454120599	
0.0382482223	
0.0280281268	
0.0474974215	
0.0443012640	
0.0395522155	
0.0386176482	
0.0443795882	
0.0227214172	
0.0427725650	
Validating --> rn1_13.c2.c.y = BatchNormalization (rn1_13.c2.c.c, rn1_13.c2.c.sc, rn1_13.c2.c.b, rn1_13.c2.c.m, rn1_13.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.p = Plus (rn1_13.c2.c.y, rn1_12.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.y = RectifiedLinear (rn1_13.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.c1.c.c.c = Convolution (rn1_14.c1.c.W, rn1_13.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_14.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0072082677	
0.0067284890	
0.0101662027	
0.0121071991	
0.0064859502	
0.0092718629	
0.0062364596	
0.0080505405	
0.0112461522	
0.0090913055	
0.0104783317	
0.0091908434	
0.0079890201	
0.0084589804	
0.0072338609	
0.0112553239	
Validating --> rn1_14.c1.c.c.y = BatchNormalization (rn1_14.c1.c.c.c, rn1_14.c1.c.c.sc, rn1_14.c1.c.c.b, rn1_14.c1.c.c.m, rn1_14.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.c1.y = RectifiedLinear (rn1_14.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.c2.c.c = Convolution (rn1_14.c2.W, rn1_14.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_14.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0329360180	
0.0371577665	
0.0314560756	
0.0437489711	
0.0376113392	
0.0450047888	
0.0331650972	
0.0304505955	
0.0506981611	
0.0374235213	
0.0440066271	
0.0286387745	
0.0437489301	
0.0418143310	
0.0358163975	
0.0431017205	
Validating --> rn1_14.c2.c.y = BatchNormalization (rn1_14.c2.c.c, rn1_14.c2.c.sc, rn1_14.c2.c.b, rn1_14.c2.c.m, rn1_14.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.p = Plus (rn1_14.c2.c.y, rn1_13.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.y = RectifiedLinear (rn1_14.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.c1.c.c.c = Convolution (rn1_15.c1.c.W, rn1_14.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_15.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0076097222	
0.0103356065	
0.0083124368	
0.0087984558	
0.0098953368	
0.0068530217	
0.0083282869	
0.0079364972	
0.0056375088	
0.0109129585	
0.0109547395	
0.0087740682	
0.0105793122	
0.0091360202	
0.0074958238	
0.0081804432	
Validating --> rn1_15.c1.c.c.y = BatchNormalization (rn1_15.c1.c.c.c, rn1_15.c1.c.c.sc, rn1_15.c1.c.c.b, rn1_15.c1.c.c.m, rn1_15.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.c1.y = RectifiedLinear (rn1_15.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.c2.c.c = Convolution (rn1_15.c2.W, rn1_15.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_15.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0354378074	
0.0356383584	
0.0381647646	
0.0377983898	
0.0368600935	
0.0405724868	
0.0406909212	
0.0407591946	
0.0369380675	
0.0389896445	
0.0323163047	
0.0162003953	
0.0336341336	
0.0368884839	
0.0364062116	
0.0429430939	
Validating --> rn1_15.c2.c.y = BatchNormalization (rn1_15.c2.c.c, rn1_15.c2.c.sc, rn1_15.c2.c.b, rn1_15.c2.c.m, rn1_15.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.p = Plus (rn1_15.c2.c.y, rn1_14.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.y = RectifiedLinear (rn1_15.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.c1.c.c.c = Convolution (rn1_16.c1.c.W, rn1_15.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_16.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0085208910	
0.0087015079	
0.0094432523	
0.0105857346	
0.0084671155	
0.0066100522	
0.0083944062	
0.0088800676	
0.0093612913	
0.0097999452	
0.0063426327	
0.0078586424	
0.0095703239	
0.0109658614	
0.0102950698	
0.0096093612	
Validating --> rn1_16.c1.c.c.y = BatchNormalization (rn1_16.c1.c.c.c, rn1_16.c1.c.c.sc, rn1_16.c1.c.c.b, rn1_16.c1.c.c.m, rn1_16.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.c1.y = RectifiedLinear (rn1_16.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.c2.c.c = Convolution (rn1_16.c2.W, rn1_16.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_16.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0414272733	
0.0361043960	
0.0401185676	
0.0398301743	
0.0473864935	
0.0496790297	
0.0387936346	
0.0437119529	
0.0417911001	
0.0437762886	
0.0408516116	
0.0496418551	
0.0497324765	
0.0451042019	
0.0400924608	
0.0439020768	
Validating --> rn1_16.c2.c.y = BatchNormalization (rn1_16.c2.c.c, rn1_16.c2.c.sc, rn1_16.c2.c.b, rn1_16.c2.c.m, rn1_16.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.p = Plus (rn1_16.c2.c.y, rn1_15.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.y = RectifiedLinear (rn1_16.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.c1.c.c.c = Convolution (rn1_17.c1.c.W, rn1_16.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_17.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0085266661	
0.0110280626	
0.0070958254	
0.0097816261	
0.0095490366	
0.0077949199	
0.0072065550	
0.0066912151	
0.0091462927	
0.0099751903	
0.0085288808	
0.0090817641	
0.0083775008	
0.0090924501	
0.0065941797	
0.0086457217	
Validating --> rn1_17.c1.c.c.y = BatchNormalization (rn1_17.c1.c.c.c, rn1_17.c1.c.c.sc, rn1_17.c1.c.c.b, rn1_17.c1.c.c.m, rn1_17.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.c1.y = RectifiedLinear (rn1_17.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.c2.c.c = Convolution (rn1_17.c2.W, rn1_17.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_17.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0461863987	
0.0466700085	
0.0416416191	
0.0375056602	
0.0320928991	
0.0396844745	
0.0406453535	
0.0313438140	
0.0294382628	
0.0435007177	
0.0314530618	
0.0367733203	
0.0512565039	
0.0421194807	
0.0347347222	
0.0390633941	
Validating --> rn1_17.c2.c.y = BatchNormalization (rn1_17.c2.c.c, rn1_17.c2.c.sc, rn1_17.c2.c.b, rn1_17.c2.c.m, rn1_17.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.p = Plus (rn1_17.c2.c.y, rn1_16.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.y = RectifiedLinear (rn1_17.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.c1.c.c.c = Convolution (rn1_18.c1.c.W, rn1_17.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c1.c.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_18.c1.c.c.y runInvStdDev after loading

###### (16, 1) ######

0.0080681881	
0.0045991214	
0.0072255470	
0.0075609460	
0.0096773040	
0.0101821059	
0.0078200512	
0.0104603963	
0.0083837118	
0.0086030057	
0.0100783324	
0.0089176819	
0.0099206809	
0.0098001910	
0.0067047020	
0.0067494740	
Validating --> rn1_18.c1.c.c.y = BatchNormalization (rn1_18.c1.c.c.c, rn1_18.c1.c.c.sc, rn1_18.c1.c.c.b, rn1_18.c1.c.c.m, rn1_18.c1.c.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.c1.y = RectifiedLinear (rn1_18.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.c2.c.c = Convolution (rn1_18.c2.W, rn1_18.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c2.c.isd = LearnableParameter() :  -> [16 x 1]
--- rn1_18.c2.c.y runInvStdDev after loading

###### (16, 1) ######

0.0405604988	
0.0408030488	
0.0424104147	
0.0411357358	
0.0378154144	
0.0255882032	
0.0481536277	
0.0389119573	
0.0381543674	
0.0439716354	
0.0301156975	
0.0459171496	
0.0434016883	
0.0385876261	
0.0365931354	
0.0317292772	
Validating --> rn1_18.c2.c.y = BatchNormalization (rn1_18.c2.c.c, rn1_18.c2.c.sc, rn1_18.c2.c.b, rn1_18.c2.c.m, rn1_18.c2.c.isd) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.p = Plus (rn1_18.c2.c.y, rn1_17.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.y = RectifiedLinear (rn1_18.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn2_1.c1.c.c.c = Convolution (rn2_1.c1.c.W, rn1_18.y) : [32 x 144], [32 x 32 x 16 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_1.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0082109757	
0.0079698553	
0.0062346505	
0.0088782664	
0.0060264561	
0.0083823632	
0.0086650951	
0.0069551482	
0.0064994418	
0.0087168468	
0.0072834673	
0.0069436454	
0.0055369651	
0.0085783564	
0.0094733071	
0.0078476248	
0.0080827875	
0.0071333600	
0.0069503440	
0.0062143235	
0.0100422800	
0.0070356629	
0.0071142283	
0.0087629063	
0.0094756363	
0.0083918441	
0.0093325190	
0.0095512038	
0.0056754644	
0.0084205158	
0.0073849112	
0.0066380021	
Validating --> rn2_1.c1.c.c.y = BatchNormalization (rn2_1.c1.c.c.c, rn2_1.c1.c.c.sc, rn2_1.c1.c.c.b, rn2_1.c1.c.c.m, rn2_1.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.c1.y = RectifiedLinear (rn2_1.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.c2.c.c = Convolution (rn2_1.c2.W, rn2_1.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_1.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0405464284	
0.0372896343	
0.0347168036	
0.0373007059	
0.0384144038	
0.0364294536	
0.0396293774	
0.0462640300	
0.0328840502	
0.0287607946	
0.0276221875	
0.0251159240	
0.0388407744	
0.0390899219	
0.0393918939	
0.0256979167	
0.0354354605	
0.0325178318	
0.0418314561	
0.0326242857	
0.0279972181	
0.0342115574	
0.0388740115	
0.0345883109	
0.0310026798	
0.0384353735	
0.0355739407	
0.0316598229	
0.0314618051	
0.0354455113	
0.0325178616	
0.0428692065	
Validating --> rn2_1.c2.c.y = BatchNormalization (rn2_1.c2.c.c, rn2_1.c2.c.sc, rn2_1.c2.c.b, rn2_1.c2.c.m, rn2_1.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1_Wproj = LearnableParameter() :  -> [32 x 16]
Validating --> rn2_1.c_proj.c = Convolution (rn2_1_Wproj, rn1_18.y) : [32 x 16], [32 x 32 x 16 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.c_proj.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c_proj.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c_proj.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c_proj.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_1.c_proj.y runInvStdDev after loading

###### (32, 1) ######

0.0081015304	
9.7293052673	
0.0104761869	
9.7293052673	
0.0080675967	
9.7293052673	
0.0124136452	
9.7293052673	
0.0098159155	
9.7293052673	
0.0107709272	
9.7293052673	
0.0115355784	
9.7293052673	
0.0131485714	
9.7293052673	
0.0103271380	
9.7293052673	
0.0115566850	
9.7293052673	
0.0124062961	
9.7293052673	
0.0144158658	
9.7293052673	
0.0104460279	
9.7293052673	
0.0127464421	
9.7293052673	
0.0137526980	
9.7293052673	
0.0088577708	
9.7293052673	
Validating --> rn2_1.c_proj.y = BatchNormalization (rn2_1.c_proj.c, rn2_1.c_proj.sc, rn2_1.c_proj.b, rn2_1.c_proj.m, rn2_1.c_proj.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.p = Plus (rn2_1.c2.c.y, rn2_1.c_proj.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.y = RectifiedLinear (rn2_1.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.c1.c.c.c = Convolution (rn2_2.c1.c.W, rn2_1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_2.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0336786583	
0.0298426896	
0.0294217113	
0.0300029684	
0.0381988138	
0.0254041608	
0.0296305977	
0.0253227409	
0.0301990118	
0.0329735726	
0.0309764370	
0.0322365314	
0.0275349673	
0.0323494077	
0.0270011108	
0.0264666583	
0.0275134053	
0.0299431868	
0.0243296344	
0.0307534188	
0.0288998038	
0.0305140112	
0.0216029920	
0.0354816169	
0.0241861381	
0.0253440831	
0.0263679288	
0.0257302169	
0.0223055594	
0.0246271621	
0.0293579306	
0.0210343692	
Validating --> rn2_2.c1.c.c.y = BatchNormalization (rn2_2.c1.c.c.c, rn2_2.c1.c.c.sc, rn2_2.c1.c.c.b, rn2_2.c1.c.c.m, rn2_2.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.c1.y = RectifiedLinear (rn2_2.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.c2.c.c = Convolution (rn2_2.c2.W, rn2_2.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_2.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0347516686	
0.0279032178	
0.0412718393	
0.0269281827	
0.0413547121	
0.0360138044	
0.0397750065	
0.0364134125	
0.0376684517	
0.0349891409	
0.0366984569	
0.0406337567	
0.0346223675	
0.0348113813	
0.0353903547	
0.0347492062	
0.0343391709	
0.0309098270	
0.0320208520	
0.0389954820	
0.0377315059	
0.0392591991	
0.0278387107	
0.0368516371	
0.0316587575	
0.0398155935	
0.0386108309	
0.0366537645	
0.0326896571	
0.0325514413	
0.0364276096	
0.0190521386	
Validating --> rn2_2.c2.c.y = BatchNormalization (rn2_2.c2.c.c, rn2_2.c2.c.sc, rn2_2.c2.c.b, rn2_2.c2.c.m, rn2_2.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.p = Plus (rn2_2.c2.c.y, rn2_1.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.y = RectifiedLinear (rn2_2.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.c1.c.c.c = Convolution (rn2_3.c1.c.W, rn2_2.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_3.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0268509872	
0.0208070092	
0.0147855505	
0.0247864909	
0.0247733407	
0.0207609180	
0.0256061982	
0.0206105635	
0.0171084274	
0.0246773306	
0.0164875612	
0.0124739213	
0.0246730074	
0.0203579105	
0.0207728837	
0.0222049225	
0.0209883880	
0.0163057204	
0.0152404150	
0.0228748396	
0.0221489947	
0.0230993088	
0.0227996800	
0.0204487070	
0.0246909000	
0.0274445321	
0.0174730066	
0.0213477984	
0.0209996197	
0.0146073345	
0.0267764330	
0.0231940579	
Validating --> rn2_3.c1.c.c.y = BatchNormalization (rn2_3.c1.c.c.c, rn2_3.c1.c.c.sc, rn2_3.c1.c.c.b, rn2_3.c1.c.c.m, rn2_3.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.c1.y = RectifiedLinear (rn2_3.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.c2.c.c = Convolution (rn2_3.c2.W, rn2_3.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_3.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0334249251	
0.0438089967	
0.0316712335	
0.0399256349	
0.0376655497	
0.0344024040	
0.0421207100	
0.0327059180	
0.0351549275	
0.0431086421	
0.0482629538	
0.0268258806	
0.0348554887	
0.0425258018	
0.0402297266	
0.0394095331	
0.0384554975	
0.0373923369	
0.0375351235	
0.0375347473	
0.0446317792	
0.0360904969	
0.0416301005	
0.0403511636	
0.0413189009	
0.0308935512	
0.0330975503	
0.0356867015	
0.0389909521	
0.0418655723	
0.0345541388	
0.0347469039	
Validating --> rn2_3.c2.c.y = BatchNormalization (rn2_3.c2.c.c, rn2_3.c2.c.sc, rn2_3.c2.c.b, rn2_3.c2.c.m, rn2_3.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.p = Plus (rn2_3.c2.c.y, rn2_2.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.y = RectifiedLinear (rn2_3.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.c1.c.c.c = Convolution (rn2_4.c1.c.W, rn2_3.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_4.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0173607748	
0.0179757681	
0.0186504126	
0.0223538615	
0.0178923011	
0.0211631414	
0.0171896443	
0.0150767267	
0.0220102705	
0.0181366876	
0.0164176729	
0.0202069264	
0.0185514633	
0.0112955738	
0.0215900522	
0.0197084378	
0.0212554205	
0.0219743643	
0.0198077783	
0.0176087208	
0.0092131346	
0.0136087677	
0.0135648595	
0.0187567081	
0.0194029566	
0.0175449587	
0.0170377512	
0.0135198431	
0.0206557605	
0.0154444231	
0.0163773280	
0.0220744237	
Validating --> rn2_4.c1.c.c.y = BatchNormalization (rn2_4.c1.c.c.c, rn2_4.c1.c.c.sc, rn2_4.c1.c.c.b, rn2_4.c1.c.c.m, rn2_4.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.c1.y = RectifiedLinear (rn2_4.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.c2.c.c = Convolution (rn2_4.c2.W, rn2_4.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_4.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0406434499	
0.0427660756	
0.0413934179	
0.0400480218	
0.0424838327	
0.0342931561	
0.0435928740	
0.0421450064	
0.0426189378	
0.0381900445	
0.0429704115	
0.0451130196	
0.0415132679	
0.0350536816	
0.0361251868	
0.0389458500	
0.0380966030	
0.0362879485	
0.0415436290	
0.0413372330	
0.0397186950	
0.0430873744	
0.0460001156	
0.0445479937	
0.0417877734	
0.0435290970	
0.0327426270	
0.0481646135	
0.0439927205	
0.0458163135	
0.0345757827	
0.0370706059	
Validating --> rn2_4.c2.c.y = BatchNormalization (rn2_4.c2.c.c, rn2_4.c2.c.sc, rn2_4.c2.c.b, rn2_4.c2.c.m, rn2_4.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.p = Plus (rn2_4.c2.c.y, rn2_3.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.y = RectifiedLinear (rn2_4.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.c1.c.c.c = Convolution (rn2_5.c1.c.W, rn2_4.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_5.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0177474692	
0.0190982204	
0.0162081588	
0.0167795699	
0.0174782537	
0.0149875656	
0.0183503944	
0.0180310011	
0.0156015670	
0.0167230722	
0.0138571449	
0.0139098791	
0.0157277863	
0.0154536236	
0.0105615230	
0.0185798630	
0.0169601366	
0.0186054986	
0.0165936165	
0.0145999854	
0.0180736948	
0.0178455710	
0.0179638639	
0.0186908431	
0.0126062008	
0.0198917855	
0.0197865590	
0.0186409708	
0.0184998307	
0.0159615185	
0.0182169601	
0.0150179584	
Validating --> rn2_5.c1.c.c.y = BatchNormalization (rn2_5.c1.c.c.c, rn2_5.c1.c.c.sc, rn2_5.c1.c.c.b, rn2_5.c1.c.c.m, rn2_5.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.c1.y = RectifiedLinear (rn2_5.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.c2.c.c = Convolution (rn2_5.c2.W, rn2_5.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_5.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0296303891	
0.0333907008	
0.0403884985	
0.0393833742	
0.0400717072	
0.0362374857	
0.0438133702	
0.0397903174	
0.0402473696	
0.0409459211	
0.0408391468	
0.0386054963	
0.0410209112	
0.0384398103	
0.0367233604	
0.0440100059	
0.0420509018	
0.0393647850	
0.0454146862	
0.0429223366	
0.0340004414	
0.0395475477	
0.0382884480	
0.0400709622	
0.0369732082	
0.0392549783	
0.0417738520	
0.0424611345	
0.0338638313	
0.0373679288	
0.0388218313	
0.0417301580	
Validating --> rn2_5.c2.c.y = BatchNormalization (rn2_5.c2.c.c, rn2_5.c2.c.sc, rn2_5.c2.c.b, rn2_5.c2.c.m, rn2_5.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.p = Plus (rn2_5.c2.c.y, rn2_4.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.y = RectifiedLinear (rn2_5.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.c1.c.c.c = Convolution (rn2_6.c1.c.W, rn2_5.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_6.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0122846430	
0.0162105262	
0.0171052590	
0.0123396469	
0.0164865907	
0.0143372286	
0.0155466413	
0.0133996103	
0.0153909205	
0.0153319202	
0.0169881973	
0.0180002991	
0.0080135204	
0.0097873602	
0.0152999889	
0.0149858259	
0.0125672985	
0.0114819342	
0.0156098288	
0.0171393063	
0.0099131418	
0.0125165014	
0.0179219376	
0.0170534495	
0.0181809682	
0.0138382716	
0.0144648012	
0.0140184928	
0.0157764927	
0.0173689108	
0.0157486666	
0.0150197009	
Validating --> rn2_6.c1.c.c.y = BatchNormalization (rn2_6.c1.c.c.c, rn2_6.c1.c.c.sc, rn2_6.c1.c.c.b, rn2_6.c1.c.c.m, rn2_6.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.c1.y = RectifiedLinear (rn2_6.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.c2.c.c = Convolution (rn2_6.c2.W, rn2_6.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_6.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0411763676	
0.0377336591	
0.0375734121	
0.0385673530	
0.0451136455	
0.0428850576	
0.0415686369	
0.0418710932	
0.0381482840	
0.0348671824	
0.0336737446	
0.0418123119	
0.0399306677	
0.0391323008	
0.0436449200	
0.0395640023	
0.0411699563	
0.0408827215	
0.0435457230	
0.0452836268	
0.0295062885	
0.0476461314	
0.0410476699	
0.0390386917	
0.0408504754	
0.0324341021	
0.0379966907	
0.0387363881	
0.0398162194	
0.0403704271	
0.0383564495	
0.0365184993	
Validating --> rn2_6.c2.c.y = BatchNormalization (rn2_6.c2.c.c, rn2_6.c2.c.sc, rn2_6.c2.c.b, rn2_6.c2.c.m, rn2_6.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.p = Plus (rn2_6.c2.c.y, rn2_5.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.y = RectifiedLinear (rn2_6.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.c1.c.c.c = Convolution (rn2_7.c1.c.W, rn2_6.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_7.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0139993466	
0.0153644020	
0.0137073947	
0.0154877603	
0.0133890184	
0.0102041513	
0.0105993319	
0.0148812206	
0.0122713568	
0.0163241718	
0.0107802534	
0.0146468040	
0.0143066049	
0.0157166924	
0.0131859938	
0.0110278064	
0.0126425745	
0.0110515738	
0.0121172667	
0.0138172926	
0.0134520717	
0.0162004326	
0.0135913100	
0.0154747982	
0.0140315257	
0.0147338118	
0.0134709263	
0.0141350208	
0.0115849962	
0.0150223486	
0.0151797589	
0.0112983100	
Validating --> rn2_7.c1.c.c.y = BatchNormalization (rn2_7.c1.c.c.c, rn2_7.c1.c.c.sc, rn2_7.c1.c.c.b, rn2_7.c1.c.c.m, rn2_7.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.c1.y = RectifiedLinear (rn2_7.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.c2.c.c = Convolution (rn2_7.c2.W, rn2_7.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_7.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0400421657	
0.0334071703	
0.0379288793	
0.0453185476	
0.0380174816	
0.0413468853	
0.0314640664	
0.0301670209	
0.0333253369	
0.0324157439	
0.0406326316	
0.0449323133	
0.0344461501	
0.0344221778	
0.0394511633	
0.0362982415	
0.0375672914	
0.0390936248	
0.0322811194	
0.0416276008	
0.0358441360	
0.0403772108	
0.0403303020	
0.0367664136	
0.0349865593	
0.0420751460	
0.0293185413	
0.0399042554	
0.0293726791	
0.0374499634	
0.0411485173	
0.0376508459	
Validating --> rn2_7.c2.c.y = BatchNormalization (rn2_7.c2.c.c, rn2_7.c2.c.sc, rn2_7.c2.c.b, rn2_7.c2.c.m, rn2_7.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.p = Plus (rn2_7.c2.c.y, rn2_6.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.y = RectifiedLinear (rn2_7.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.c1.c.c.c = Convolution (rn2_8.c1.c.W, rn2_7.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_8.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0135623831	
0.0139245018	
0.0128021929	
0.0090880664	
0.0123902103	
0.0077715935	
0.0100420834	
0.0137855001	
0.0120570799	
0.0119373947	
0.0145737827	
0.0147542255	
0.0143033220	
0.0131592462	
0.0117150629	
0.0132309766	
0.0154659636	
0.0122088110	
0.0121517451	
0.0093662050	
0.0092629762	
0.0126914801	
0.0143656638	
0.0128189381	
0.0129814567	
0.0111128641	
0.0141485929	
0.0123900697	
0.0151121346	
0.0127168205	
0.0134432213	
0.0093710842	
Validating --> rn2_8.c1.c.c.y = BatchNormalization (rn2_8.c1.c.c.c, rn2_8.c1.c.c.sc, rn2_8.c1.c.c.b, rn2_8.c1.c.c.m, rn2_8.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.c1.y = RectifiedLinear (rn2_8.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.c2.c.c = Convolution (rn2_8.c2.W, rn2_8.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_8.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0391617194	
0.0294432715	
0.0322940126	
0.0349397250	
0.0273904316	
0.0376925841	
0.0449260026	
0.0285774935	
0.0377727933	
0.0287893917	
0.0332116261	
0.0328523144	
0.0283845942	
0.0315152742	
0.0358940065	
0.0370194018	
0.0415096655	
0.0276851766	
0.0467738435	
0.0414629765	
0.0258326363	
0.0362097621	
0.0399462879	
0.0370876156	
0.0406392142	
0.0407333784	
0.0315014198	
0.0392738506	
0.0418367200	
0.0361534543	
0.0322361030	
0.0366998017	
Validating --> rn2_8.c2.c.y = BatchNormalization (rn2_8.c2.c.c, rn2_8.c2.c.sc, rn2_8.c2.c.b, rn2_8.c2.c.m, rn2_8.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.p = Plus (rn2_8.c2.c.y, rn2_7.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.y = RectifiedLinear (rn2_8.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.c1.c.c.c = Convolution (rn2_9.c1.c.W, rn2_8.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_9.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0118009923	
0.0129611688	
0.0125349835	
0.0134687088	
0.0119449506	
0.0097675081	
0.0102791321	
0.0115174167	
0.0111553483	
0.0120782349	
0.0135288378	
0.0118843131	
0.0127636930	
0.0124345981	
0.0105264485	
0.0120808678	
0.0138012758	
0.0128363688	
0.0097028725	
0.0108735617	
0.0091181528	
0.0124674067	
0.0136636468	
0.0116290264	
0.0137187559	
0.0094565125	
0.0148634370	
0.0135132866	
0.0136361783	
0.0136877205	
0.0120859249	
0.0111008007	
Validating --> rn2_9.c1.c.c.y = BatchNormalization (rn2_9.c1.c.c.c, rn2_9.c1.c.c.sc, rn2_9.c1.c.c.b, rn2_9.c1.c.c.m, rn2_9.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.c1.y = RectifiedLinear (rn2_9.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.c2.c.c = Convolution (rn2_9.c2.W, rn2_9.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_9.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0371471718	
0.0420902334	
0.0448590517	
0.0384389460	
0.0414645597	
0.0286190603	
0.0381883644	
0.0341785848	
0.0293772519	
0.0372906737	
0.0392877534	
0.0290695280	
0.0409701988	
0.0251250360	
0.0369541049	
0.0400821902	
0.0375995971	
0.0363720171	
0.0356703028	
0.0389545523	
0.0349001102	
0.0401109345	
0.0267086476	
0.0290830508	
0.0240493454	
0.0215839501	
0.0342942066	
0.0264369473	
0.0427425094	
0.0357613862	
0.0312898941	
0.0418198220	
Validating --> rn2_9.c2.c.y = BatchNormalization (rn2_9.c2.c.c, rn2_9.c2.c.sc, rn2_9.c2.c.b, rn2_9.c2.c.m, rn2_9.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.p = Plus (rn2_9.c2.c.y, rn2_8.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.y = RectifiedLinear (rn2_9.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.c1.c.c.c = Convolution (rn2_10.c1.c.W, rn2_9.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_10.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0123307351	
0.0125563005	
0.0112696197	
0.0086756358	
0.0105442749	
0.0125974054	
0.0092140632	
0.0117083509	
0.0130405631	
0.0140718287	
0.0121517321	
0.0094100228	
0.0110229198	
0.0126387626	
0.0114789810	
0.0132986624	
0.0119685987	
0.0092920745	
0.0108932815	
0.0114543308	
0.0108546307	
0.0106983669	
0.0106892735	
0.0113124792	
0.0118873939	
0.0125126122	
0.0103560109	
0.0110631697	
0.0100240679	
0.0121049685	
0.0111248381	
0.0135375140	
Validating --> rn2_10.c1.c.c.y = BatchNormalization (rn2_10.c1.c.c.c, rn2_10.c1.c.c.sc, rn2_10.c1.c.c.b, rn2_10.c1.c.c.m, rn2_10.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.c1.y = RectifiedLinear (rn2_10.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.c2.c.c = Convolution (rn2_10.c2.W, rn2_10.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_10.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0381089449	
0.0358428843	
0.0367188305	
0.0393095389	
0.0394073948	
0.0348509550	
0.0403013341	
0.0320853516	
0.0362452492	
0.0372566618	
0.0393707678	
0.0364712551	
0.0275174771	
0.0391910039	
0.0387288965	
0.0315916352	
0.0334249660	
0.0420789160	
0.0362830274	
0.0354905315	
0.0421206243	
0.0438894629	
0.0414517783	
0.0369085185	
0.0364333205	
0.0418126173	
0.0317551009	
0.0327318497	
0.0345358290	
0.0332734175	
0.0372768603	
0.0326151960	
Validating --> rn2_10.c2.c.y = BatchNormalization (rn2_10.c2.c.c, rn2_10.c2.c.sc, rn2_10.c2.c.b, rn2_10.c2.c.m, rn2_10.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.p = Plus (rn2_10.c2.c.y, rn2_9.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.y = RectifiedLinear (rn2_10.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.c1.c.c.c = Convolution (rn2_11.c1.c.W, rn2_10.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_11.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0117739439	
0.0113291889	
0.0114518972	
0.0102302795	
0.0093591791	
0.0092499238	
0.0103892284	
0.0099438569	
0.0128556965	
0.0075646820	
0.0120077599	
0.0095386887	
0.0061467960	
0.0113104675	
0.0093509657	
0.0081123477	
0.0078140358	
0.0098030483	
0.0122433500	
0.0132367145	
0.0115092807	
0.0114919096	
0.0107969120	
0.0114637949	
0.0109073585	
0.0118480604	
0.0107961558	
0.0089648562	
0.0111749386	
0.0103242388	
0.0079526203	
0.0134245828	
Validating --> rn2_11.c1.c.c.y = BatchNormalization (rn2_11.c1.c.c.c, rn2_11.c1.c.c.sc, rn2_11.c1.c.c.b, rn2_11.c1.c.c.m, rn2_11.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.c1.y = RectifiedLinear (rn2_11.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.c2.c.c = Convolution (rn2_11.c2.W, rn2_11.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_11.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0433700718	
0.0341080539	
0.0366787985	
0.0412731580	
0.0338099636	
0.0406170376	
0.0288085472	
0.0422323607	
0.0311814379	
0.0370714329	
0.0372882485	
0.0422124378	
0.0416570790	
0.0342836268	
0.0368042029	
0.0401905850	
0.0340768024	
0.0330561027	
0.0417336263	
0.0395794846	
0.0434140041	
0.0391797870	
0.0396426246	
0.0331027061	
0.0401557051	
0.0372283272	
0.0385682955	
0.0268246103	
0.0404534265	
0.0320327133	
0.0378216319	
0.0402179584	
Validating --> rn2_11.c2.c.y = BatchNormalization (rn2_11.c2.c.c, rn2_11.c2.c.sc, rn2_11.c2.c.b, rn2_11.c2.c.m, rn2_11.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.p = Plus (rn2_11.c2.c.y, rn2_10.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.y = RectifiedLinear (rn2_11.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.c1.c.c.c = Convolution (rn2_12.c1.c.W, rn2_11.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_12.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0116279330	
0.0062585240	
0.0100694997	
0.0107130399	
0.0115284240	
0.0109211532	
0.0083956290	
0.0108044157	
0.0105210263	
0.0136160031	
0.0090079429	
0.0137658417	
0.0096167065	
0.0100556593	
0.0096399207	
0.0085402103	
0.0081044231	
0.0126689458	
0.0123287700	
0.0085048024	
0.0090346234	
0.0113345506	
0.0092987185	
0.0078630103	
0.0102466708	
0.0116473623	
0.0090196198	
0.0087290313	
0.0119113913	
0.0090281712	
0.0088706091	
0.0109315021	
Validating --> rn2_12.c1.c.c.y = BatchNormalization (rn2_12.c1.c.c.c, rn2_12.c1.c.c.sc, rn2_12.c1.c.c.b, rn2_12.c1.c.c.m, rn2_12.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.c1.y = RectifiedLinear (rn2_12.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.c2.c.c = Convolution (rn2_12.c2.W, rn2_12.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_12.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0393768325	
0.0385364294	
0.0361009538	
0.0337739289	
0.0435332060	
0.0437715650	
0.0366330817	
0.0423001386	
0.0311108269	
0.0396916866	
0.0369388349	
0.0431213751	
0.0331244729	
0.0393697619	
0.0414385013	
0.0341955610	
0.0401304066	
0.0430778638	
0.0420494713	
0.0400885865	
0.0385520309	
0.0467077419	
0.0359288678	
0.0411699302	
0.0419239700	
0.0411151834	
0.0406880304	
0.0291220155	
0.0274604913	
0.0377650931	
0.0437098332	
0.0377789736	
Validating --> rn2_12.c2.c.y = BatchNormalization (rn2_12.c2.c.c, rn2_12.c2.c.sc, rn2_12.c2.c.b, rn2_12.c2.c.m, rn2_12.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.p = Plus (rn2_12.c2.c.y, rn2_11.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.y = RectifiedLinear (rn2_12.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.c1.c.c.c = Convolution (rn2_13.c1.c.W, rn2_12.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_13.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0065127541	
0.0062201251	
0.0075170319	
0.0122009031	
0.0098557249	
0.0089029921	
0.0074282740	
0.0093066739	
0.0060736230	
0.0091848746	
0.0082544191	
0.0112705361	
0.0084751099	
0.0109223705	
0.0121028218	
0.0113560511	
0.0102680558	
0.0100015458	
0.0094672805	
0.0104147643	
0.0106292237	
0.0094268480	
0.0050595170	
0.0091755129	
0.0055416566	
0.0070591825	
0.0107281636	
0.0113485903	
0.0112573896	
0.0090251593	
0.0082686357	
0.0105288718	
Validating --> rn2_13.c1.c.c.y = BatchNormalization (rn2_13.c1.c.c.c, rn2_13.c1.c.c.sc, rn2_13.c1.c.c.b, rn2_13.c1.c.c.m, rn2_13.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.c1.y = RectifiedLinear (rn2_13.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.c2.c.c = Convolution (rn2_13.c2.W, rn2_13.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_13.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0427509472	
0.0383294225	
0.0396972857	
0.0399269834	
0.0432471037	
0.0306504648	
0.0409223698	
0.0344966017	
0.0382453389	
0.0378150046	
0.0377376750	
0.0339758433	
0.0323801935	
0.0314741358	
0.0409475528	
0.0433136635	
0.0283090491	
0.0370397419	
0.0328087881	
0.0232102815	
0.0409826115	
0.0216049291	
0.0367356129	
0.0315300561	
0.0232930407	
0.0240370426	
0.0338988453	
0.0383602008	
0.0379112214	
0.0368421897	
0.0310738515	
0.0423546806	
Validating --> rn2_13.c2.c.y = BatchNormalization (rn2_13.c2.c.c, rn2_13.c2.c.sc, rn2_13.c2.c.b, rn2_13.c2.c.m, rn2_13.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.p = Plus (rn2_13.c2.c.y, rn2_12.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.y = RectifiedLinear (rn2_13.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.c1.c.c.c = Convolution (rn2_14.c1.c.W, rn2_13.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_14.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0069808858	
0.0068165180	
0.0047330740	
0.0078725955	
0.0063269860	
0.0094701694	
0.0108007528	
0.0079818228	
0.0116285142	
0.0079775769	
0.0096575385	
0.0081157982	
0.0069867093	
0.0089385603	
0.0120242387	
0.0091250679	
0.0079454342	
0.0065476438	
0.0102805523	
0.0055652973	
0.0057879183	
0.0101213343	
0.0082273111	
0.0110074291	
0.0105416095	
0.0097471103	
0.0093679056	
0.0053558322	
0.0094684483	
0.0100209778	
0.0076728021	
0.0085158208	
Validating --> rn2_14.c1.c.c.y = BatchNormalization (rn2_14.c1.c.c.c, rn2_14.c1.c.c.sc, rn2_14.c1.c.c.b, rn2_14.c1.c.c.m, rn2_14.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.c1.y = RectifiedLinear (rn2_14.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.c2.c.c = Convolution (rn2_14.c2.W, rn2_14.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_14.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0339165777	
0.0312733464	
0.0429648049	
0.0378129110	
0.0356926769	
0.0446819291	
0.0482470579	
0.0408902876	
0.0446920283	
0.0405759513	
0.0360635482	
0.0420627706	
0.0413990468	
0.0484914854	
0.0421400256	
0.0436281115	
0.0385086685	
0.0450196750	
0.0453268923	
0.0439857095	
0.0436563641	
0.0389637165	
0.0436248258	
0.0415296182	
0.0418960787	
0.0476181246	
0.0310974829	
0.0429382622	
0.0419182144	
0.0474502593	
0.0367480963	
0.0350539200	
Validating --> rn2_14.c2.c.y = BatchNormalization (rn2_14.c2.c.c, rn2_14.c2.c.sc, rn2_14.c2.c.b, rn2_14.c2.c.m, rn2_14.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.p = Plus (rn2_14.c2.c.y, rn2_13.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.y = RectifiedLinear (rn2_14.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.c1.c.c.c = Convolution (rn2_15.c1.c.W, rn2_14.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_15.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0095214145	
0.0054379520	
0.0082892356	
0.0083730118	
0.0101904208	
0.0087599857	
0.0086248843	
0.0088037588	
0.0090591516	
0.0106885126	
0.0086322632	
0.0085359057	
0.0068787313	
0.0102717336	
0.0086169597	
0.0103667676	
0.0100340759	
0.0116921654	
0.0100263124	
0.0083244434	
0.0106396331	
0.0082867201	
0.0098261926	
0.0113060726	
0.0085333493	
0.0101353908	
0.0091830036	
0.0097422088	
0.0099252891	
0.0065706722	
0.0103317471	
0.0096756211	
Validating --> rn2_15.c1.c.c.y = BatchNormalization (rn2_15.c1.c.c.c, rn2_15.c1.c.c.sc, rn2_15.c1.c.c.b, rn2_15.c1.c.c.m, rn2_15.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.c1.y = RectifiedLinear (rn2_15.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.c2.c.c = Convolution (rn2_15.c2.W, rn2_15.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_15.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0383821279	
0.0313593224	
0.0376551747	
0.0349951945	
0.0416183136	
0.0382861048	
0.0416740663	
0.0259461831	
0.0394662619	
0.0420753695	
0.0388351381	
0.0402097218	
0.0401699133	
0.0279392451	
0.0361548886	
0.0327676199	
0.0402184241	
0.0383071937	
0.0328252651	
0.0455042087	
0.0381540954	
0.0364449248	
0.0401642583	
0.0392053351	
0.0376631282	
0.0382409766	
0.0402600542	
0.0419446900	
0.0275639258	
0.0410407372	
0.0332617275	
0.0383147299	
Validating --> rn2_15.c2.c.y = BatchNormalization (rn2_15.c2.c.c, rn2_15.c2.c.sc, rn2_15.c2.c.b, rn2_15.c2.c.m, rn2_15.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.p = Plus (rn2_15.c2.c.y, rn2_14.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.y = RectifiedLinear (rn2_15.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.c1.c.c.c = Convolution (rn2_16.c1.c.W, rn2_15.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_16.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0093155019	
0.0114079770	
0.0078698844	
0.0087851044	
0.0078086364	
0.0098149450	
0.0080498168	
0.0077043935	
0.0092785852	
0.0082653454	
0.0091214534	
0.0088028060	
0.0091468142	
0.0090834405	
0.0083776983	
0.0099729504	
0.0085414154	
0.0046665012	
0.0094433688	
0.0087321056	
0.0106318602	
0.0099716736	
0.0078337705	
0.0093392413	
0.0065644779	
0.0105566774	
0.0094650844	
0.0080110002	
0.0083729597	
0.0049367547	
0.0066313976	
0.0097562997	
Validating --> rn2_16.c1.c.c.y = BatchNormalization (rn2_16.c1.c.c.c, rn2_16.c1.c.c.sc, rn2_16.c1.c.c.b, rn2_16.c1.c.c.m, rn2_16.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.c1.y = RectifiedLinear (rn2_16.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.c2.c.c = Convolution (rn2_16.c2.W, rn2_16.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_16.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0352450199	
0.0393170677	
0.0380384773	
0.0408640839	
0.0418796428	
0.0275369417	
0.0374176726	
0.0366454422	
0.0375608876	
0.0400956459	
0.0407983959	
0.0355881117	
0.0358942039	
0.0322274268	
0.0351433195	
0.0427898131	
0.0373323336	
0.0409225821	
0.0285409875	
0.0312644355	
0.0422125608	
0.0381379910	
0.0365209319	
0.0411647744	
0.0340448692	
0.0381959304	
0.0400953665	
0.0311289597	
0.0422873497	
0.0409865230	
0.0258959252	
0.0360738263	
Validating --> rn2_16.c2.c.y = BatchNormalization (rn2_16.c2.c.c, rn2_16.c2.c.sc, rn2_16.c2.c.b, rn2_16.c2.c.m, rn2_16.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.p = Plus (rn2_16.c2.c.y, rn2_15.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.y = RectifiedLinear (rn2_16.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.c1.c.c.c = Convolution (rn2_17.c1.c.W, rn2_16.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_17.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0074752728	
0.0053239949	
0.0104986988	
0.0100222202	
0.0037655002	
0.0069333552	
0.0096528418	
0.0045779669	
0.0077544618	
0.0077196015	
0.0055952794	
0.0093338219	
0.0098820236	
0.0067824782	
0.0074234107	
0.0085133482	
0.0065608164	
0.0097514465	
0.0087293498	
0.0085373456	
0.0072987573	
0.0078767026	
0.0077941390	
0.0095368614	
0.0110310558	
0.0068355040	
0.0087199435	
0.0082241120	
0.0090158554	
0.0095908539	
0.0090242932	
0.0088708894	
Validating --> rn2_17.c1.c.c.y = BatchNormalization (rn2_17.c1.c.c.c, rn2_17.c1.c.c.sc, rn2_17.c1.c.c.b, rn2_17.c1.c.c.m, rn2_17.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.c1.y = RectifiedLinear (rn2_17.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.c2.c.c = Convolution (rn2_17.c2.W, rn2_17.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_17.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0385552198	
0.0359354950	
0.0426270626	
0.0354571566	
0.0372706465	
0.0400253646	
0.0445640683	
0.0313980915	
0.0329415426	
0.0362538174	
0.0371503085	
0.0338296667	
0.0391001031	
0.0280937906	
0.0320162214	
0.0361365378	
0.0374550074	
0.0393873118	
0.0505508780	
0.0406569615	
0.0390943103	
0.0379162356	
0.0365018770	
0.0328888856	
0.0412386619	
0.0340180248	
0.0370674729	
0.0386243016	
0.0274542887	
0.0385451466	
0.0404659249	
0.0338477939	
Validating --> rn2_17.c2.c.y = BatchNormalization (rn2_17.c2.c.c, rn2_17.c2.c.sc, rn2_17.c2.c.b, rn2_17.c2.c.m, rn2_17.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.p = Plus (rn2_17.c2.c.y, rn2_16.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.y = RectifiedLinear (rn2_17.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.c1.c.c.c = Convolution (rn2_18.c1.c.W, rn2_17.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c1.c.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_18.c1.c.c.y runInvStdDev after loading

###### (32, 1) ######

0.0087481095	
0.0082280962	
0.0067139915	
0.0085876323	
0.0090385145	
0.0051765903	
0.0086410576	
0.0081525408	
0.0083490517	
0.0071939114	
0.0090771699	
0.0065728249	
0.0062093944	
0.0090098968	
0.0083268462	
0.0072052833	
0.0070359944	
0.0084124012	
0.0091776941	
0.0090033170	
0.0105388612	
0.0091358107	
0.0074671437	
0.0054140934	
0.0069384933	
0.0091930674	
0.0091592865	
0.0080581587	
0.0072978931	
0.0080501903	
0.0070017441	
0.0051108482	
Validating --> rn2_18.c1.c.c.y = BatchNormalization (rn2_18.c1.c.c.c, rn2_18.c1.c.c.sc, rn2_18.c1.c.c.b, rn2_18.c1.c.c.m, rn2_18.c1.c.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.c1.y = RectifiedLinear (rn2_18.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.c2.c.c = Convolution (rn2_18.c2.W, rn2_18.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c2.c.isd = LearnableParameter() :  -> [32 x 1]
--- rn2_18.c2.c.y runInvStdDev after loading

###### (32, 1) ######

0.0380973332	
0.0347715914	
0.0366556384	
0.0406584181	
0.0360729136	
0.0255426131	
0.0299585946	
0.0412608795	
0.0353571959	
0.0293083340	
0.0371966138	
0.0349340253	
0.0420216210	
0.0352751538	
0.0261088405	
0.0410805866	
0.0399189070	
0.0331347398	
0.0315397941	
0.0398380756	
0.0415069424	
0.0420326032	
0.0393276140	
0.0360716879	
0.0423209481	
0.0421003401	
0.0283406358	
0.0353298336	
0.0290842690	
0.0364543758	
0.0413394347	
0.0374740511	
Validating --> rn2_18.c2.c.y = BatchNormalization (rn2_18.c2.c.c, rn2_18.c2.c.sc, rn2_18.c2.c.b, rn2_18.c2.c.m, rn2_18.c2.c.isd) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.p = Plus (rn2_18.c2.c.y, rn2_17.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.y = RectifiedLinear (rn2_18.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn3_1.c1.c.c.c = Convolution (rn3_1.c1.c.W, rn2_18.y) : [64 x 288], [16 x 16 x 32 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_1.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0074276086	
0.0078901546	
0.0078689540	
0.0079172142	
0.0068442188	
0.0051826625	
0.0076791318	
0.0083831735	
0.0054119178	
0.0085832356	
0.0076893358	
0.0081183193	
0.0084781507	
0.0053850319	
0.0063019847	
0.0069198413	
0.0079934718	
0.0087682614	
0.0080348197	
0.0086386753	
0.0055050249	
0.0062955962	
0.0084915319	
0.0054171584	
0.0043583387	
0.0080452859	
0.0065258965	
0.0067927688	
0.0078837182	
0.0085874284	
0.0064610802	
0.0068751913	
0.0059566791	
0.0065787439	
0.0085859383	
0.0067484267	
0.0093190148	
0.0093898531	
0.0096227042	
0.0079736290	
0.0091772312	
0.0092105763	
0.0068799960	
0.0088492343	
0.0076166596	
0.0078518772	
0.0054063099	
0.0066697933	
0.0085536633	
0.0089742364	
0.0062314379	
0.0052698525	
0.0081891436	
0.0078446548	
0.0095199337	
0.0087835919	
0.0078233555	
0.0071868268	
0.0050193728	
0.0082414094	
0.0085181501	
0.0095933471	
0.0065637133	
0.0081216209	
Validating --> rn3_1.c1.c.c.y = BatchNormalization (rn3_1.c1.c.c.c, rn3_1.c1.c.c.sc, rn3_1.c1.c.c.b, rn3_1.c1.c.c.m, rn3_1.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.c1.y = RectifiedLinear (rn3_1.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.c2.c.c = Convolution (rn3_1.c2.W, rn3_1.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_1.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0385933220	
0.0380310565	
0.0450271741	
0.0356958546	
0.0437780023	
0.0401191339	
0.0417343453	
0.0318945423	
0.0441624932	
0.0377939939	
0.0408270210	
0.0391684361	
0.0437726714	
0.0378613807	
0.0430764556	
0.0298554990	
0.0426926278	
0.0354394577	
0.0408382453	
0.0422683284	
0.0382560529	
0.0458764397	
0.0412402749	
0.0431097634	
0.0387765653	
0.0449622720	
0.0328860693	
0.0412748493	
0.0392056853	
0.0411521494	
0.0417027883	
0.0207223110	
0.0413130149	
0.0298384409	
0.0408000536	
0.0373398401	
0.0435307287	
0.0324548520	
0.0304519739	
0.0455439650	
0.0368506685	
0.0455368459	
0.0262882169	
0.0348310061	
0.0386263579	
0.0397308096	
0.0456425510	
0.0407136716	
0.0400625691	
0.0320829563	
0.0306268353	
0.0372777171	
0.0450143963	
0.0424272418	
0.0427847244	
0.0386988707	
0.0353403240	
0.0419884771	
0.0473500937	
0.0353132971	
0.0369006544	
0.0400991589	
0.0381121486	
0.0348862037	
Validating --> rn3_1.c2.c.y = BatchNormalization (rn3_1.c2.c.c, rn3_1.c2.c.sc, rn3_1.c2.c.b, rn3_1.c2.c.m, rn3_1.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1_Wproj = LearnableParameter() :  -> [64 x 32]
Validating --> rn3_1.c_proj.c = Convolution (rn3_1_Wproj, rn2_18.y) : [64 x 32], [16 x 16 x 32 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.c_proj.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c_proj.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c_proj.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c_proj.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_1.c_proj.y runInvStdDev after loading

###### (64, 1) ######

0.0088492995	
9.7293052673	
0.0080813300	
9.7293052673	
0.0130655123	
9.7293052673	
0.0103960540	
9.7293052673	
0.0117236730	
9.7293052673	
0.0126595199	
9.7293052673	
0.0094538331	
9.7293052673	
0.0101341801	
9.7293052673	
0.0066310852	
9.7293052673	
0.0101599097	
9.7293052673	
0.0129541801	
9.7293052673	
0.0071414909	
9.7293052673	
0.0105926981	
9.7293052673	
0.0053187711	
9.7293052673	
0.0130325388	
9.7293052673	
0.0129657751	
9.7293052673	
0.0137762129	
9.7293052673	
0.0136591140	
9.7293052673	
0.0103848251	
9.7293052673	
0.0147086615	
9.7293052673	
0.0091132568	
9.7293052673	
0.0139212627	
9.7293052673	
0.0107995085	
9.7293052673	
0.0108284345	
9.7293052673	
0.0071026678	
9.7293052673	
0.0157909468	
9.7293052673	
0.0151619734	
9.7293052673	
0.0059537091	
9.7293052673	
0.0130476737	
9.7293052673	
0.0147076892	
9.7293052673	
0.0123027517	
9.7293052673	
0.0156442448	
9.7293052673	
Validating --> rn3_1.c_proj.y = BatchNormalization (rn3_1.c_proj.c, rn3_1.c_proj.sc, rn3_1.c_proj.b, rn3_1.c_proj.m, rn3_1.c_proj.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.p = Plus (rn3_1.c2.c.y, rn3_1.c_proj.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.y = RectifiedLinear (rn3_1.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.c1.c.c.c = Convolution (rn3_2.c1.c.W, rn3_1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_2.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0236542188	
0.0319955200	
0.0275656320	
0.0324184820	
0.0291756764	
0.0315111876	
0.0332269855	
0.0270610098	
0.0255508907	
0.0220107343	
0.0319244750	
0.0279597417	
0.0248122830	
0.0342947468	
0.0311575066	
0.0294048507	
0.0307599045	
0.0314759724	
0.0338817611	
0.0195442047	
0.0297063794	
0.0230720472	
0.0260339752	
0.0228946004	
0.0352123640	
0.0307592712	
0.0352663100	
0.0256189480	
0.0263966881	
0.0287574027	
0.0274192877	
0.0249567572	
0.0269881692	
0.0225840490	
0.0279511232	
0.0285533797	
0.0305152796	
0.0327323303	
0.0316161588	
0.0248991121	
0.0237806682	
0.0319835469	
0.0293971393	
0.0217460692	
0.0307330135	
0.0279509909	
0.0323781520	
0.0349074639	
0.0214577485	
0.0328620449	
0.0286026020	
0.0313663892	
0.0233758427	
0.0275842901	
0.0281542856	
0.0323416963	
0.0306472275	
0.0318111405	
0.0276401509	
0.0269131083	
0.0336514302	
0.0284252334	
0.0310905017	
0.0235219542	
Validating --> rn3_2.c1.c.c.y = BatchNormalization (rn3_2.c1.c.c.c, rn3_2.c1.c.c.sc, rn3_2.c1.c.c.b, rn3_2.c1.c.c.m, rn3_2.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.c1.y = RectifiedLinear (rn3_2.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.c2.c.c = Convolution (rn3_2.c2.W, rn3_2.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_2.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0401085019	
0.0440722406	
0.0409049205	
0.0345707797	
0.0383444540	
0.0405674614	
0.0418771841	
0.0389532223	
0.0434626527	
0.0391257480	
0.0398687162	
0.0368506201	
0.0358333476	
0.0401855409	
0.0398924761	
0.0376357697	
0.0389004536	
0.0287863482	
0.0410169996	
0.0392527953	
0.0467224941	
0.0279010199	
0.0347847492	
0.0334953144	
0.0425800532	
0.0412665121	
0.0415968746	
0.0369500741	
0.0331865810	
0.0474175438	
0.0348231569	
0.0406871103	
0.0402838774	
0.0441673659	
0.0409045741	
0.0351408012	
0.0345920622	
0.0439458862	
0.0426428579	
0.0408834517	
0.0351566337	
0.0350603871	
0.0415008329	
0.0404997095	
0.0444004945	
0.0403906591	
0.0415864810	
0.0456238240	
0.0418398678	
0.0399614088	
0.0364563316	
0.0314433761	
0.0386496671	
0.0289440490	
0.0373396799	
0.0414579250	
0.0388655216	
0.0289901812	
0.0405511335	
0.0395199582	
0.0470794179	
0.0372092500	
0.0426339321	
0.0362985358	
Validating --> rn3_2.c2.c.y = BatchNormalization (rn3_2.c2.c.c, rn3_2.c2.c.sc, rn3_2.c2.c.b, rn3_2.c2.c.m, rn3_2.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.p = Plus (rn3_2.c2.c.y, rn3_1.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.y = RectifiedLinear (rn3_2.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.c1.c.c.c = Convolution (rn3_3.c1.c.W, rn3_2.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_3.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0173116326	
0.0192150995	
0.0228650365	
0.0228774529	
0.0203381851	
0.0173608605	
0.0213755369	
0.0247277040	
0.0233054161	
0.0238453988	
0.0246846024	
0.0206625778	
0.0208309498	
0.0250798687	
0.0231252816	
0.0224580225	
0.0218391977	
0.0192807224	
0.0255446732	
0.0211380981	
0.0227973163	
0.0252214801	
0.0213207323	
0.0243303850	
0.0245223194	
0.0275932569	
0.0260220598	
0.0245102830	
0.0143417297	
0.0197819043	
0.0185273923	
0.0202666074	
0.0137105305	
0.0179809090	
0.0241286065	
0.0252028201	
0.0221811440	
0.0230417047	
0.0239007939	
0.0229155794	
0.0250639040	
0.0168522224	
0.0212637074	
0.0133734317	
0.0184166562	
0.0215265770	
0.0219534058	
0.0198452640	
0.0249308161	
0.0249239486	
0.0168780051	
0.0248862095	
0.0182726551	
0.0249882769	
0.0233364254	
0.0234093592	
0.0179561898	
0.0189789422	
0.0213081967	
0.0214259084	
0.0238657799	
0.0155972894	
0.0199814662	
0.0244053937	
Validating --> rn3_3.c1.c.c.y = BatchNormalization (rn3_3.c1.c.c.c, rn3_3.c1.c.c.sc, rn3_3.c1.c.c.b, rn3_3.c1.c.c.m, rn3_3.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.c1.y = RectifiedLinear (rn3_3.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.c2.c.c = Convolution (rn3_3.c2.W, rn3_3.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_3.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0263662990	
0.0348189361	
0.0362034291	
0.0328498259	
0.0404835045	
0.0423241146	
0.0341775380	
0.0380169973	
0.0384540595	
0.0376367532	
0.0393199399	
0.0396369435	
0.0404378623	
0.0393955112	
0.0367990099	
0.0291413777	
0.0416323766	
0.0354939848	
0.0400655121	
0.0293884743	
0.0348261110	
0.0364664942	
0.0476902053	
0.0376980156	
0.0412347540	
0.0409772769	
0.0381669104	
0.0394709148	
0.0300006159	
0.0384574756	
0.0383362435	
0.0403844938	
0.0407653637	
0.0379188098	
0.0400145687	
0.0416701138	
0.0358624496	
0.0322786160	
0.0380232222	
0.0415423550	
0.0396825075	
0.0402368866	
0.0388427600	
0.0297424346	
0.0401154496	
0.0276277512	
0.0425797887	
0.0310953371	
0.0393064059	
0.0391890332	
0.0401665829	
0.0311159883	
0.0423080549	
0.0379630029	
0.0444789715	
0.0453536585	
0.0353267193	
0.0395529680	
0.0438217111	
0.0284540374	
0.0397358984	
0.0303385071	
0.0378415734	
0.0406993516	
Validating --> rn3_3.c2.c.y = BatchNormalization (rn3_3.c2.c.c, rn3_3.c2.c.sc, rn3_3.c2.c.b, rn3_3.c2.c.m, rn3_3.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.p = Plus (rn3_3.c2.c.y, rn3_2.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.y = RectifiedLinear (rn3_3.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.c1.c.c.c = Convolution (rn3_4.c1.c.W, rn3_3.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_4.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0142665030	
0.0161990616	
0.0210056715	
0.0196070150	
0.0227805562	
0.0156539474	
0.0205681622	
0.0207923874	
0.0188632235	
0.0186657887	
0.0216328576	
0.0177054256	
0.0198878311	
0.0205936078	
0.0118359243	
0.0139233824	
0.0188878439	
0.0187345985	
0.0189323891	
0.0156604573	
0.0176111124	
0.0161180459	
0.0185629334	
0.0160394125	
0.0195880439	
0.0193649065	
0.0170777403	
0.0231996346	
0.0228216089	
0.0202476587	
0.0205200892	
0.0160570703	
0.0179586671	
0.0176083576	
0.0163385160	
0.0196168162	
0.0174042080	
0.0205645543	
0.0184830092	
0.0181546118	
0.0187029317	
0.0218294412	
0.0159168504	
0.0227193199	
0.0185854342	
0.0201095454	
0.0174808353	
0.0198491756	
0.0191610251	
0.0221391283	
0.0207104739	
0.0201156382	
0.0189517010	
0.0220338013	
0.0196585730	
0.0195933543	
0.0155107770	
0.0210958999	
0.0198767073	
0.0165673159	
0.0178168770	
0.0166078787	
0.0154634044	
0.0211252533	
Validating --> rn3_4.c1.c.c.y = BatchNormalization (rn3_4.c1.c.c.c, rn3_4.c1.c.c.sc, rn3_4.c1.c.c.b, rn3_4.c1.c.c.m, rn3_4.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.c1.y = RectifiedLinear (rn3_4.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.c2.c.c = Convolution (rn3_4.c2.W, rn3_4.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_4.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0296138227	
0.0382078327	
0.0323679596	
0.0423221253	
0.0410434082	
0.0340214595	
0.0337810889	
0.0400054790	
0.0383948497	
0.0418549627	
0.0333372988	
0.0355787687	
0.0313774534	
0.0269547291	
0.0396928675	
0.0336341746	
0.0321697854	
0.0304985400	
0.0333828591	
0.0369405411	
0.0367622785	
0.0344644710	
0.0379453227	
0.0406042486	
0.0308743659	
0.0422271639	
0.0363160223	
0.0378622636	
0.0360540152	
0.0408392437	
0.0409101732	
0.0402680784	
0.0375651680	
0.0363014229	
0.0390250608	
0.0360705443	
0.0412565172	
0.0402177200	
0.0373007208	
0.0352989733	
0.0361842848	
0.0371805727	
0.0352358632	
0.0396756083	
0.0327091254	
0.0387898125	
0.0302760825	
0.0304565765	
0.0314834155	
0.0372111425	
0.0422294289	
0.0385922156	
0.0373430774	
0.0407367460	
0.0360559113	
0.0363778621	
0.0399726331	
0.0252904557	
0.0415875837	
0.0328455195	
0.0378980748	
0.0429826491	
0.0378489271	
0.0286231916	
Validating --> rn3_4.c2.c.y = BatchNormalization (rn3_4.c2.c.c, rn3_4.c2.c.sc, rn3_4.c2.c.b, rn3_4.c2.c.m, rn3_4.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.p = Plus (rn3_4.c2.c.y, rn3_3.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.y = RectifiedLinear (rn3_4.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.c1.c.c.c = Convolution (rn3_5.c1.c.W, rn3_4.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_5.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0126358261	
0.0180401299	
0.0141402232	
0.0136746839	
0.0205823164	
0.0129562030	
0.0159608237	
0.0205480102	
0.0176311564	
0.0196487810	
0.0182128269	
0.0148805808	
0.0147182625	
0.0127020665	
0.0165898781	
0.0141405268	
0.0136841508	
0.0183611866	
0.0135454144	
0.0181987099	
0.0179611426	
0.0170227885	
0.0146810124	
0.0166768134	
0.0174755473	
0.0146232191	
0.0185977593	
0.0183576886	
0.0162127521	
0.0164023824	
0.0161020216	
0.0179659221	
0.0183127131	
0.0176286902	
0.0187699180	
0.0110262912	
0.0194614865	
0.0163767189	
0.0178031344	
0.0202154294	
0.0158442855	
0.0142131299	
0.0171005055	
0.0198130012	
0.0128984638	
0.0196907986	
0.0141293714	
0.0155704841	
0.0173942968	
0.0174021292	
0.0165411402	
0.0186790153	
0.0171842314	
0.0143406764	
0.0174979828	
0.0181443151	
0.0169313774	
0.0190744214	
0.0160820354	
0.0132710878	
0.0151020288	
0.0186282694	
0.0173058640	
0.0161016118	
Validating --> rn3_5.c1.c.c.y = BatchNormalization (rn3_5.c1.c.c.c, rn3_5.c1.c.c.sc, rn3_5.c1.c.c.b, rn3_5.c1.c.c.m, rn3_5.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.c1.y = RectifiedLinear (rn3_5.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.c2.c.c = Convolution (rn3_5.c2.W, rn3_5.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_5.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0409820080	
0.0407651104	
0.0361955799	
0.0274122804	
0.0433890745	
0.0397655591	
0.0416480303	
0.0399865471	
0.0404352173	
0.0413692109	
0.0373386927	
0.0332574882	
0.0414048135	
0.0418182388	
0.0372496136	
0.0414824933	
0.0360002480	
0.0393378362	
0.0393438004	
0.0407277569	
0.0384474881	
0.0352897197	
0.0440291762	
0.0424095728	
0.0404460095	
0.0383789353	
0.0379575565	
0.0372731388	
0.0385241471	
0.0359926783	
0.0369658396	
0.0323254503	
0.0370757021	
0.0412466675	
0.0391255654	
0.0375271179	
0.0435029753	
0.0328781493	
0.0432898030	
0.0403215028	
0.0395092145	
0.0412416272	
0.0313753821	
0.0320600718	
0.0345272273	
0.0382487774	
0.0408556759	
0.0420781039	
0.0406036004	
0.0471209288	
0.0407807268	
0.0458989441	
0.0305045377	
0.0352849066	
0.0422352590	
0.0410191752	
0.0355682708	
0.0344896987	
0.0413117670	
0.0356837027	
0.0379509889	
0.0434540361	
0.0335104354	
0.0382959619	
Validating --> rn3_5.c2.c.y = BatchNormalization (rn3_5.c2.c.c, rn3_5.c2.c.sc, rn3_5.c2.c.b, rn3_5.c2.c.m, rn3_5.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.p = Plus (rn3_5.c2.c.y, rn3_4.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.y = RectifiedLinear (rn3_5.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.c1.c.c.c = Convolution (rn3_6.c1.c.W, rn3_5.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_6.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0178076234	
0.0154706491	
0.0124615440	
0.0125747779	
0.0156512838	
0.0182786472	
0.0116566224	
0.0151689537	
0.0173371844	
0.0153728938	
0.0154298311	
0.0160283614	
0.0150779448	
0.0140332375	
0.0100087170	
0.0153267644	
0.0098358057	
0.0137856556	
0.0155400252	
0.0134219108	
0.0071715456	
0.0108537972	
0.0175333023	
0.0103780413	
0.0159006119	
0.0162104536	
0.0128689781	
0.0143269077	
0.0131658586	
0.0153386761	
0.0169294588	
0.0153221795	
0.0170142222	
0.0137582757	
0.0150167290	
0.0159560163	
0.0136283292	
0.0140984934	
0.0146571044	
0.0156653747	
0.0162692033	
0.0123269185	
0.0175164696	
0.0113322660	
0.0110436110	
0.0136616454	
0.0148394238	
0.0165339708	
0.0155680198	
0.0102241263	
0.0151811428	
0.0169719178	
0.0146668004	
0.0159486849	
0.0122468378	
0.0132105052	
0.0154819759	
0.0138317458	
0.0150063848	
0.0136704231	
0.0134195201	
0.0167461615	
0.0133891357	
0.0128363734	
Validating --> rn3_6.c1.c.c.y = BatchNormalization (rn3_6.c1.c.c.c, rn3_6.c1.c.c.sc, rn3_6.c1.c.c.b, rn3_6.c1.c.c.m, rn3_6.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.c1.y = RectifiedLinear (rn3_6.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.c2.c.c = Convolution (rn3_6.c2.W, rn3_6.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_6.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0368972160	
0.0360458009	
0.0385481045	
0.0420758091	
0.0378757007	
0.0363555886	
0.0318931192	
0.0483574234	
0.0339707285	
0.0433633439	
0.0368532874	
0.0364275649	
0.0323282257	
0.0458458923	
0.0372833610	
0.0357052349	
0.0385967679	
0.0440366492	
0.0423349328	
0.0410482362	
0.0451861508	
0.0365537331	
0.0362790190	
0.0311611686	
0.0404590741	
0.0356664434	
0.0303267483	
0.0422506742	
0.0377813913	
0.0332530700	
0.0348806679	
0.0429775417	
0.0342313908	
0.0393996872	
0.0335475095	
0.0365225300	
0.0344539583	
0.0370478109	
0.0333681256	
0.0390324704	
0.0436469205	
0.0291227642	
0.0471214093	
0.0371499807	
0.0367377624	
0.0345985889	
0.0417470336	
0.0387617089	
0.0410350822	
0.0429503433	
0.0442001708	
0.0403906219	
0.0414579771	
0.0447468348	
0.0421481766	
0.0400078036	
0.0419507101	
0.0290604848	
0.0406545922	
0.0336857140	
0.0329620093	
0.0370967463	
0.0361373387	
0.0375084430	
Validating --> rn3_6.c2.c.y = BatchNormalization (rn3_6.c2.c.c, rn3_6.c2.c.sc, rn3_6.c2.c.b, rn3_6.c2.c.m, rn3_6.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.p = Plus (rn3_6.c2.c.y, rn3_5.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.y = RectifiedLinear (rn3_6.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.c1.c.c.c = Convolution (rn3_7.c1.c.W, rn3_6.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_7.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0110157141	
0.0153334131	
0.0152278906	
0.0153830703	
0.0130990632	
0.0095415162	
0.0104017379	
0.0121157086	
0.0131751895	
0.0121461973	
0.0140404468	
0.0100956745	
0.0138875134	
0.0135863703	
0.0126698576	
0.0158228446	
0.0153641654	
0.0140297953	
0.0122595942	
0.0178440437	
0.0128186895	
0.0124278953	
0.0121294567	
0.0107479552	
0.0131828301	
0.0104951467	
0.0158403702	
0.0149661377	
0.0121738436	
0.0148244062	
0.0166726727	
0.0140271606	
0.0139365569	
0.0119450642	
0.0153708160	
0.0119386632	
0.0118882051	
0.0149710616	
0.0097437706	
0.0142175956	
0.0150072649	
0.0123655498	
0.0153111136	
0.0163310319	
0.0144596137	
0.0148569839	
0.0155383097	
0.0118277203	
0.0129531212	
0.0129404701	
0.0138684073	
0.0112142265	
0.0158640370	
0.0126036601	
0.0150078498	
0.0155717507	
0.0152552696	
0.0143286698	
0.0153201902	
0.0097034872	
0.0174644981	
0.0122757656	
0.0154441744	
0.0151237799	
Validating --> rn3_7.c1.c.c.y = BatchNormalization (rn3_7.c1.c.c.c, rn3_7.c1.c.c.sc, rn3_7.c1.c.c.b, rn3_7.c1.c.c.m, rn3_7.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.c1.y = RectifiedLinear (rn3_7.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.c2.c.c = Convolution (rn3_7.c2.W, rn3_7.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_7.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0393577851	
0.0320199542	
0.0407398418	
0.0408290811	
0.0326820463	
0.0430777632	
0.0419766828	
0.0429278687	
0.0418576933	
0.0339133367	
0.0347203389	
0.0423816629	
0.0415617749	
0.0265320539	
0.0347117670	
0.0398753472	
0.0446492732	
0.0346088223	
0.0341463462	
0.0317585506	
0.0377302282	
0.0468271933	
0.0339052938	
0.0388656482	
0.0425152779	
0.0331194550	
0.0337484516	
0.0397939458	
0.0454421416	
0.0407136865	
0.0392975360	
0.0463605709	
0.0368214883	
0.0410632864	
0.0449265763	
0.0453421138	
0.0395071246	
0.0448322929	
0.0314719900	
0.0459213555	
0.0394166373	
0.0419333279	
0.0335321315	
0.0417679884	
0.0355514549	
0.0317545161	
0.0399259217	
0.0315871947	
0.0415097512	
0.0378231928	
0.0413516834	
0.0373857208	
0.0404674485	
0.0364152007	
0.0275478736	
0.0437203944	
0.0342242531	
0.0365763679	
0.0418691374	
0.0419078730	
0.0369661711	
0.0386188626	
0.0447176583	
0.0301232915	
Validating --> rn3_7.c2.c.y = BatchNormalization (rn3_7.c2.c.c, rn3_7.c2.c.sc, rn3_7.c2.c.b, rn3_7.c2.c.m, rn3_7.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.p = Plus (rn3_7.c2.c.y, rn3_6.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.y = RectifiedLinear (rn3_7.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.c1.c.c.c = Convolution (rn3_8.c1.c.W, rn3_7.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_8.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0120762102	
0.0137415640	
0.0091227042	
0.0138636753	
0.0127104232	
0.0089470781	
0.0121343201	
0.0133714136	
0.0107973525	
0.0101012671	
0.0103367958	
0.0164300147	
0.0115455110	
0.0137226796	
0.0093548475	
0.0131207285	
0.0132624470	
0.0121197077	
0.0145490356	
0.0123609044	
0.0137018645	
0.0068570711	
0.0129194614	
0.0110680806	
0.0124797206	
0.0125933997	
0.0138994893	
0.0127264857	
0.0144340619	
0.0122673474	
0.0126004862	
0.0148691982	
0.0128332628	
0.0084176194	
0.0102410978	
0.0093898429	
0.0121385483	
0.0142384609	
0.0078198789	
0.0161516089	
0.0096122352	
0.0083749481	
0.0119705778	
0.0145639246	
0.0152605139	
0.0117864953	
0.0127070434	
0.0150955366	
0.0104625672	
0.0139764939	
0.0139167821	
0.0145953847	
0.0135095855	
0.0082171876	
0.0124498708	
0.0114265578	
0.0162111837	
0.0124482689	
0.0138363009	
0.0091910064	
0.0092787659	
0.0134747708	
0.0130017810	
0.0135394502	
Validating --> rn3_8.c1.c.c.y = BatchNormalization (rn3_8.c1.c.c.c, rn3_8.c1.c.c.sc, rn3_8.c1.c.c.b, rn3_8.c1.c.c.m, rn3_8.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.c1.y = RectifiedLinear (rn3_8.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.c2.c.c = Convolution (rn3_8.c2.W, rn3_8.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_8.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0453721806	
0.0408839956	
0.0333010405	
0.0465281121	
0.0454008058	
0.0372227393	
0.0402520634	
0.0420815274	
0.0343950354	
0.0379462391	
0.0417733751	
0.0402501523	
0.0482667349	
0.0398686491	
0.0292507224	
0.0363135338	
0.0365292057	
0.0361586548	
0.0431595854	
0.0295561682	
0.0282631274	
0.0409316234	
0.0355907753	
0.0435406454	
0.0350979455	
0.0445908420	
0.0283171348	
0.0390898362	
0.0390642136	
0.0341084078	
0.0410197563	
0.0412400216	
0.0328018852	
0.0457395725	
0.0379169248	
0.0409548692	
0.0390931591	
0.0445045345	
0.0454808213	
0.0352393091	
0.0406767502	
0.0430453345	
0.0383858718	
0.0385018699	
0.0382795036	
0.0364186354	
0.0450167172	
0.0400918834	
0.0352973342	
0.0425850749	
0.0407736339	
0.0352232940	
0.0429231562	
0.0391393937	
0.0381089896	
0.0427408516	
0.0451126359	
0.0417635068	
0.0358452424	
0.0391998999	
0.0436055250	
0.0304800142	
0.0388275310	
0.0378233716	
Validating --> rn3_8.c2.c.y = BatchNormalization (rn3_8.c2.c.c, rn3_8.c2.c.sc, rn3_8.c2.c.b, rn3_8.c2.c.m, rn3_8.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.p = Plus (rn3_8.c2.c.y, rn3_7.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.y = RectifiedLinear (rn3_8.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.c1.c.c.c = Convolution (rn3_9.c1.c.W, rn3_8.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_9.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0091465078	
0.0115386415	
0.0103523871	
0.0124291796	
0.0103155384	
0.0122345118	
0.0139587317	
0.0127285775	
0.0090731811	
0.0109906001	
0.0108658615	
0.0134288501	
0.0097449683	
0.0111498134	
0.0102995122	
0.0144928787	
0.0139543936	
0.0112449350	
0.0151719665	
0.0096078990	
0.0103336899	
0.0095367171	
0.0119317677	
0.0062046959	
0.0136441169	
0.0076171239	
0.0108919451	
0.0129239224	
0.0137752248	
0.0099613946	
0.0082423743	
0.0091105010	
0.0146806622	
0.0104039079	
0.0127724279	
0.0121526392	
0.0119236978	
0.0094143143	
0.0130462646	
0.0140450234	
0.0107978182	
0.0089128418	
0.0123683587	
0.0117207291	
0.0119289467	
0.0093725156	
0.0084580565	
0.0090662036	
0.0130667053	
0.0099925753	
0.0143033834	
0.0104529578	
0.0097469836	
0.0130260466	
0.0128141316	
0.0090566734	
0.0139264986	
0.0121779330	
0.0145372460	
0.0135997795	
0.0132626472	
0.0108411759	
0.0109595712	
0.0129273282	
Validating --> rn3_9.c1.c.c.y = BatchNormalization (rn3_9.c1.c.c.c, rn3_9.c1.c.c.sc, rn3_9.c1.c.c.b, rn3_9.c1.c.c.m, rn3_9.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.c1.y = RectifiedLinear (rn3_9.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.c2.c.c = Convolution (rn3_9.c2.W, rn3_9.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_9.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0349529907	
0.0312121566	
0.0446750484	
0.0270148944	
0.0353123359	
0.0367235541	
0.0368856974	
0.0385555401	
0.0466062948	
0.0342646129	
0.0285577737	
0.0394844748	
0.0458532237	
0.0421901830	
0.0310394000	
0.0448781624	
0.0473194085	
0.0361937992	
0.0399358906	
0.0422546230	
0.0343165286	
0.0386154093	
0.0378492065	
0.0348632000	
0.0410000198	
0.0347687043	
0.0430679582	
0.0424853563	
0.0418851189	
0.0440396667	
0.0285244863	
0.0390352458	
0.0412269048	
0.0277775545	
0.0394621864	
0.0294211023	
0.0386713631	
0.0425253734	
0.0337768309	
0.0371658802	
0.0373293497	
0.0366672464	
0.0350514539	
0.0369958803	
0.0361195281	
0.0356743336	
0.0444890000	
0.0417500809	
0.0364501923	
0.0423194282	
0.0412726849	
0.0392687321	
0.0369618349	
0.0310424548	
0.0411717445	
0.0400680155	
0.0393923707	
0.0364115015	
0.0352034532	
0.0351372771	
0.0217367485	
0.0358637646	
0.0356831811	
0.0397023894	
Validating --> rn3_9.c2.c.y = BatchNormalization (rn3_9.c2.c.c, rn3_9.c2.c.sc, rn3_9.c2.c.b, rn3_9.c2.c.m, rn3_9.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.p = Plus (rn3_9.c2.c.y, rn3_8.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.y = RectifiedLinear (rn3_9.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.c1.c.c.c = Convolution (rn3_10.c1.c.W, rn3_9.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_10.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0080620088	
0.0086761722	
0.0099483449	
0.0100883562	
0.0140789626	
0.0096647097	
0.0099358233	
0.0069586728	
0.0102246506	
0.0122659113	
0.0116616953	
0.0084867002	
0.0113119204	
0.0115601998	
0.0136426380	
0.0127363857	
0.0124076754	
0.0089350557	
0.0109121352	
0.0131822759	
0.0132181998	
0.0102091013	
0.0076972828	
0.0113512930	
0.0098175090	
0.0121806227	
0.0118857017	
0.0133325607	
0.0088163465	
0.0131195281	
0.0111003518	
0.0115997354	
0.0126946885	
0.0078071184	
0.0050614253	
0.0120362276	
0.0093799708	
0.0069803074	
0.0116169639	
0.0106824795	
0.0114656761	
0.0105921440	
0.0094464766	
0.0093561728	
0.0112344641	
0.0093450751	
0.0129588814	
0.0108141704	
0.0128504718	
0.0130097093	
0.0104001407	
0.0091224601	
0.0120261926	
0.0093516624	
0.0091272164	
0.0128583750	
0.0112702781	
0.0142656723	
0.0127489818	
0.0113777313	
0.0119183734	
0.0119449506	
0.0103925904	
0.0128729763	
Validating --> rn3_10.c1.c.c.y = BatchNormalization (rn3_10.c1.c.c.c, rn3_10.c1.c.c.sc, rn3_10.c1.c.c.b, rn3_10.c1.c.c.m, rn3_10.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.c1.y = RectifiedLinear (rn3_10.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.c2.c.c = Convolution (rn3_10.c2.W, rn3_10.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_10.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0285707805	
0.0318913162	
0.0398789756	
0.0382621549	
0.0403989144	
0.0445763059	
0.0327312127	
0.0318026096	
0.0397139266	
0.0419663042	
0.0449752510	
0.0393503197	
0.0354855470	
0.0265587643	
0.0359739996	
0.0349556096	
0.0417356044	
0.0431593880	
0.0361871198	
0.0311407894	
0.0347490050	
0.0384382680	
0.0359797701	
0.0257480517	
0.0416945331	
0.0362130143	
0.0448394716	
0.0361656584	
0.0343591087	
0.0372161865	
0.0377028547	
0.0357102007	
0.0362160169	
0.0296742003	
0.0334183909	
0.0345814899	
0.0348149873	
0.0408940725	
0.0365888067	
0.0439590961	
0.0312012192	
0.0348902047	
0.0367780514	
0.0395886973	
0.0378738753	
0.0428973287	
0.0366236344	
0.0385953225	
0.0386734642	
0.0385990292	
0.0410122909	
0.0376211256	
0.0391017832	
0.0437105596	
0.0296697021	
0.0395586677	
0.0378704257	
0.0452621616	
0.0261828173	
0.0281077586	
0.0416698307	
0.0419242457	
0.0390899889	
0.0391935483	
Validating --> rn3_10.c2.c.y = BatchNormalization (rn3_10.c2.c.c, rn3_10.c2.c.sc, rn3_10.c2.c.b, rn3_10.c2.c.m, rn3_10.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.p = Plus (rn3_10.c2.c.y, rn3_9.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.y = RectifiedLinear (rn3_10.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.c1.c.c.c = Convolution (rn3_11.c1.c.W, rn3_10.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_11.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0083187884	
0.0094458181	
0.0110380137	
0.0081131700	
0.0076130209	
0.0122732054	
0.0093950741	
0.0113009373	
0.0126860496	
0.0090375831	
0.0089626173	
0.0104589900	
0.0078102043	
0.0102874637	
0.0081121409	
0.0100079589	
0.0070741884	
0.0101108961	
0.0102564320	
0.0109384032	
0.0096003572	
0.0085223811	
0.0141285984	
0.0109383734	
0.0132396752	
0.0098769991	
0.0090276711	
0.0113912970	
0.0129592968	
0.0085055176	
0.0105534606	
0.0097802589	
0.0097323451	
0.0129083665	
0.0096931932	
0.0097592073	
0.0076254830	
0.0123724351	
0.0063151694	
0.0123045677	
0.0127194300	
0.0112537052	
0.0106293680	
0.0108846175	
0.0117415758	
0.0080723651	
0.0103206141	
0.0088641904	
0.0090523791	
0.0115921497	
0.0119220894	
0.0134911761	
0.0099814106	
0.0112609388	
0.0103784557	
0.0137652112	
0.0121138738	
0.0066852174	
0.0098839514	
0.0120252622	
0.0111360569	
0.0119393878	
0.0056239809	
0.0109184245	
Validating --> rn3_11.c1.c.c.y = BatchNormalization (rn3_11.c1.c.c.c, rn3_11.c1.c.c.sc, rn3_11.c1.c.c.b, rn3_11.c1.c.c.m, rn3_11.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.c1.y = RectifiedLinear (rn3_11.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.c2.c.c = Convolution (rn3_11.c2.W, rn3_11.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_11.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0343256108	
0.0420149639	
0.0417898409	
0.0370834470	
0.0440466776	
0.0469878763	
0.0317385085	
0.0377056375	
0.0388890207	
0.0403780751	
0.0337686799	
0.0359652601	
0.0249637682	
0.0413228124	
0.0265756994	
0.0349120125	
0.0411854200	
0.0308142304	
0.0399308056	
0.0389935151	
0.0390108377	
0.0400875732	
0.0368520133	
0.0341432206	
0.0398829319	
0.0384907834	
0.0355942212	
0.0392202325	
0.0408086367	
0.0439198390	
0.0413562581	
0.0331682451	
0.0274727698	
0.0440708548	
0.0425207913	
0.0424111374	
0.0307287741	
0.0220727716	
0.0449621938	
0.0277382527	
0.0436503924	
0.0417381190	
0.0378216058	
0.0371571518	
0.0305227228	
0.0314627178	
0.0397916026	
0.0391600020	
0.0416335054	
0.0327753536	
0.0402523316	
0.0333642215	
0.0287687033	
0.0352892689	
0.0355574191	
0.0355520435	
0.0309295561	
0.0437379517	
0.0299789589	
0.0361839235	
0.0315238498	
0.0354998931	
0.0437907390	
0.0456435382	
Validating --> rn3_11.c2.c.y = BatchNormalization (rn3_11.c2.c.c, rn3_11.c2.c.sc, rn3_11.c2.c.b, rn3_11.c2.c.m, rn3_11.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.p = Plus (rn3_11.c2.c.y, rn3_10.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.y = RectifiedLinear (rn3_11.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.c1.c.c.c = Convolution (rn3_12.c1.c.W, rn3_11.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_12.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0111307539	
0.0099497344	
0.0091761351	
0.0118829012	
0.0118862987	
0.0090911416	
0.0084901536	
0.0112925414	
0.0084670484	
0.0085110059	
0.0072025419	
0.0108063845	
0.0084279859	
0.0119376704	
0.0088188592	
0.0085442103	
0.0122247916	
0.0114916181	
0.0095613925	
0.0092837559	
0.0104576489	
0.0084661236	
0.0119507322	
0.0096398331	
0.0106694149	
0.0131778782	
0.0104794819	
0.0096213706	
0.0095355595	
0.0121206325	
0.0122545240	
0.0102528855	
0.0067921905	
0.0101055652	
0.0097700767	
0.0104182288	
0.0112988763	
0.0063621067	
0.0069445651	
0.0070431381	
0.0095335850	
0.0107628703	
0.0120729590	
0.0125126420	
0.0106937848	
0.0071408679	
0.0086478246	
0.0090457229	
0.0079095569	
0.0107669979	
0.0064822640	
0.0120507786	
0.0094189905	
0.0110381963	
0.0128344381	
0.0108209169	
0.0107530281	
0.0116774580	
0.0112561444	
0.0109724924	
0.0110705793	
0.0081034070	
0.0099670961	
0.0114342896	
Validating --> rn3_12.c1.c.c.y = BatchNormalization (rn3_12.c1.c.c.c, rn3_12.c1.c.c.sc, rn3_12.c1.c.c.b, rn3_12.c1.c.c.m, rn3_12.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.c1.y = RectifiedLinear (rn3_12.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.c2.c.c = Convolution (rn3_12.c2.W, rn3_12.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_12.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0449102893	
0.0341742523	
0.0381179340	
0.0390084423	
0.0388034023	
0.0432040617	
0.0398766659	
0.0404793359	
0.0363671742	
0.0298937671	
0.0389436372	
0.0364898928	
0.0334426686	
0.0317615233	
0.0386622213	
0.0428301618	
0.0384953655	
0.0338691026	
0.0350157283	
0.0375021622	
0.0356055982	
0.0362842903	
0.0411220528	
0.0418239683	
0.0414514951	
0.0361115113	
0.0291024894	
0.0386481322	
0.0396556444	
0.0442311838	
0.0275623687	
0.0402692407	
0.0396903493	
0.0428016223	
0.0355439819	
0.0361196510	
0.0456297062	
0.0286394004	
0.0396698378	
0.0299364049	
0.0464233309	
0.0411606319	
0.0465667583	
0.0352206007	
0.0376375802	
0.0391924269	
0.0338666625	
0.0382339805	
0.0264775883	
0.0369949862	
0.0372914188	
0.0391940437	
0.0374706574	
0.0311731603	
0.0418806262	
0.0425959788	
0.0307343788	
0.0373996831	
0.0446022488	
0.0399347022	
0.0343807787	
0.0330179743	
0.0361372828	
0.0387129150	
Validating --> rn3_12.c2.c.y = BatchNormalization (rn3_12.c2.c.c, rn3_12.c2.c.sc, rn3_12.c2.c.b, rn3_12.c2.c.m, rn3_12.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.p = Plus (rn3_12.c2.c.y, rn3_11.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.y = RectifiedLinear (rn3_12.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.c1.c.c.c = Convolution (rn3_13.c1.c.W, rn3_12.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_13.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0107651101	
0.0104509257	
0.0061277999	
0.0105392318	
0.0109349927	
0.0089250049	
0.0076224175	
0.0105787143	
0.0087107252	
0.0099953776	
0.0126191685	
0.0057922201	
0.0101239327	
0.0071009309	
0.0074005811	
0.0113110319	
0.0112411147	
0.0108361896	
0.0101579828	
0.0088511733	
0.0088553531	
0.0082104802	
0.0065456508	
0.0089680003	
0.0074019888	
0.0049170186	
0.0080684517	
0.0115597202	
0.0099424534	
0.0116844010	
0.0096534071	
0.0072756046	
0.0108380895	
0.0071006119	
0.0072049587	
0.0118260523	
0.0089479871	
0.0078687016	
0.0080983266	
0.0084675979	
0.0091929957	
0.0064059268	
0.0107700313	
0.0093195485	
0.0111704450	
0.0116804969	
0.0086220726	
0.0111381672	
0.0063399225	
0.0083401222	
0.0072198925	
0.0105051594	
0.0083254287	
0.0105903670	
0.0109830881	
0.0099325404	
0.0115312980	
0.0101269512	
0.0092058145	
0.0090277586	
0.0095263729	
0.0086112134	
0.0086806621	
0.0106962211	
Validating --> rn3_13.c1.c.c.y = BatchNormalization (rn3_13.c1.c.c.c, rn3_13.c1.c.c.sc, rn3_13.c1.c.c.b, rn3_13.c1.c.c.m, rn3_13.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.c1.y = RectifiedLinear (rn3_13.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.c2.c.c = Convolution (rn3_13.c2.W, rn3_13.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_13.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0366074182	
0.0364862233	
0.0376464799	
0.0425374545	
0.0408041850	
0.0378241464	
0.0354850888	
0.0408526547	
0.0343313292	
0.0418244079	
0.0462728590	
0.0329440571	
0.0390657671	
0.0378390737	
0.0250833314	
0.0390032753	
0.0287160389	
0.0391906649	
0.0440927558	
0.0389343388	
0.0391945504	
0.0348826572	
0.0459078029	
0.0299670435	
0.0381663330	
0.0375287719	
0.0325739421	
0.0282091629	
0.0438435413	
0.0326544195	
0.0355369188	
0.0424534641	
0.0321887620	
0.0383717343	
0.0323279575	
0.0422001220	
0.0304197520	
0.0299243387	
0.0420256928	
0.0442369878	
0.0425741002	
0.0409320816	
0.0453669950	
0.0444509163	
0.0420551859	
0.0403286666	
0.0295437872	
0.0473259799	
0.0444829203	
0.0431507826	
0.0353784747	
0.0340681002	
0.0350179747	
0.0427914448	
0.0444941521	
0.0328828543	
0.0381338149	
0.0431287736	
0.0303613786	
0.0381957628	
0.0489846282	
0.0441889055	
0.0380285643	
0.0395997390	
Validating --> rn3_13.c2.c.y = BatchNormalization (rn3_13.c2.c.c, rn3_13.c2.c.sc, rn3_13.c2.c.b, rn3_13.c2.c.m, rn3_13.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.p = Plus (rn3_13.c2.c.y, rn3_12.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.y = RectifiedLinear (rn3_13.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.c1.c.c.c = Convolution (rn3_14.c1.c.W, rn3_13.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_14.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0077871368	
0.0071173171	
0.0079894876	
0.0096079139	
0.0088437907	
0.0101332087	
0.0118127186	
0.0088120690	
0.0086025586	
0.0059736110	
0.0089390185	
0.0080561144	
0.0078550391	
0.0102350675	
0.0091156047	
0.0103889732	
0.0047256504	
0.0092936885	
0.0099159693	
0.0093778735	
0.0104203736	
0.0052066166	
0.0067966576	
0.0061511169	
0.0078393342	
0.0092886984	
0.0109089008	
0.0056753121	
0.0057766750	
0.0098158484	
0.0102110067	
0.0097544724	
0.0076619862	
0.0112515138	
0.0104522333	
0.0095327105	
0.0082543585	
0.0082035167	
0.0092171626	
0.0111070946	
0.0097025521	
0.0082004489	
0.0111276461	
0.0095714750	
0.0072535342	
0.0065930276	
0.0110800024	
0.0093491767	
0.0045036725	
0.0101673156	
0.0074502220	
0.0077201310	
0.0096066203	
0.0111744022	
0.0094080586	
0.0065747197	
0.0098515656	
0.0093642464	
0.0113010919	
0.0092453761	
0.0111017087	
0.0095767044	
0.0056334375	
0.0062772054	
Validating --> rn3_14.c1.c.c.y = BatchNormalization (rn3_14.c1.c.c.c, rn3_14.c1.c.c.sc, rn3_14.c1.c.c.b, rn3_14.c1.c.c.m, rn3_14.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.c1.y = RectifiedLinear (rn3_14.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.c2.c.c = Convolution (rn3_14.c2.W, rn3_14.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_14.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0249353107	
0.0468335748	
0.0358762406	
0.0348512083	
0.0354315415	
0.0397224464	
0.0304396003	
0.0397995487	
0.0429577269	
0.0402596295	
0.0404663868	
0.0355811231	
0.0376772657	
0.0305115115	
0.0353345983	
0.0385920852	
0.0412045978	
0.0413652211	
0.0417347252	
0.0399484411	
0.0404318869	
0.0359544903	
0.0416896828	
0.0354738273	
0.0323619470	
0.0399264023	
0.0368128084	
0.0257952418	
0.0454734936	
0.0363458507	
0.0405300669	
0.0471355841	
0.0420527235	
0.0448915735	
0.0371959731	
0.0344596766	
0.0350216441	
0.0434582159	
0.0387384184	
0.0368981510	
0.0247548558	
0.0382740535	
0.0481040329	
0.0404685661	
0.0376574248	
0.0398096181	
0.0420249850	
0.0472381227	
0.0410700180	
0.0313249975	
0.0331562348	
0.0408951901	
0.0353382193	
0.0347258188	
0.0355617143	
0.0443703383	
0.0399397835	
0.0335987918	
0.0430074409	
0.0361907445	
0.0383335352	
0.0372000076	
0.0293352045	
0.0408886969	
Validating --> rn3_14.c2.c.y = BatchNormalization (rn3_14.c2.c.c, rn3_14.c2.c.sc, rn3_14.c2.c.b, rn3_14.c2.c.m, rn3_14.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.p = Plus (rn3_14.c2.c.y, rn3_13.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.y = RectifiedLinear (rn3_14.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.c1.c.c.c = Convolution (rn3_15.c1.c.W, rn3_14.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_15.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0100821136	
0.0105289025	
0.0069384840	
0.0069177393	
0.0103226183	
0.0067781410	
0.0102801882	
0.0093855122	
0.0092746913	
0.0076969350	
0.0071755201	
0.0086546075	
0.0097304191	
0.0102052586	
0.0064131198	
0.0089737009	
0.0093391715	
0.0087106265	
0.0094288010	
0.0098568397	
0.0065932856	
0.0079868026	
0.0093091642	
0.0096267750	
0.0098235095	
0.0080652200	
0.0074056024	
0.0094647631	
0.0093655223	
0.0085639115	
0.0058640614	
0.0083620334	
0.0077512311	
0.0099163279	
0.0106891040	
0.0079408446	
0.0081959954	
0.0074841366	
0.0064963615	
0.0045472570	
0.0071197585	
0.0097295204	
0.0047571897	
0.0084483037	
0.0086123049	
0.0101417061	
0.0097839721	
0.0101933060	
0.0089258375	
0.0068342648	
0.0079331696	
0.0094049284	
0.0088093029	
0.0088598030	
0.0085717402	
0.0082176356	
0.0106237456	
0.0087713301	
0.0104658082	
0.0090154139	
0.0087009454	
0.0078582652	
0.0101048937	
0.0093195336	
Validating --> rn3_15.c1.c.c.y = BatchNormalization (rn3_15.c1.c.c.c, rn3_15.c1.c.c.sc, rn3_15.c1.c.c.b, rn3_15.c1.c.c.m, rn3_15.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.c1.y = RectifiedLinear (rn3_15.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.c2.c.c = Convolution (rn3_15.c2.W, rn3_15.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_15.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0243226457	
0.0428547189	
0.0338357687	
0.0439748988	
0.0446277298	
0.0340773910	
0.0390205346	
0.0251856036	
0.0287189465	
0.0472448878	
0.0404974669	
0.0394822471	
0.0435434207	
0.0382358134	
0.0437927879	
0.0464567319	
0.0396251604	
0.0206602607	
0.0428180508	
0.0427894518	
0.0424018055	
0.0488942936	
0.0463023745	
0.0386188179	
0.0376742706	
0.0370310396	
0.0355856158	
0.0368311740	
0.0485786498	
0.0311203171	
0.0337066799	
0.0425040126	
0.0326522850	
0.0425717533	
0.0347748511	
0.0215506740	
0.0427758917	
0.0294497013	
0.0392719023	
0.0423690751	
0.0352997556	
0.0284503773	
0.0443078503	
0.0458372198	
0.0357276089	
0.0423464514	
0.0407017395	
0.0373919085	
0.0402728245	
0.0381207168	
0.0282279179	
0.0328968614	
0.0440046862	
0.0308795348	
0.0442359634	
0.0356374756	
0.0465680845	
0.0391837955	
0.0310469177	
0.0421231948	
0.0286646206	
0.0448563807	
0.0333462171	
0.0304966066	
Validating --> rn3_15.c2.c.y = BatchNormalization (rn3_15.c2.c.c, rn3_15.c2.c.sc, rn3_15.c2.c.b, rn3_15.c2.c.m, rn3_15.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.p = Plus (rn3_15.c2.c.y, rn3_14.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.y = RectifiedLinear (rn3_15.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.c1.c.c.c = Convolution (rn3_16.c1.c.W, rn3_15.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_16.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0099519528	
0.0073542167	
0.0094127031	
0.0086177047	
0.0069097616	
0.0078225918	
0.0055596600	
0.0073769744	
0.0092630154	
0.0096791852	
0.0097651351	
0.0090142610	
0.0072691017	
0.0102025531	
0.0076367990	
0.0095558865	
0.0094575379	
0.0080644200	
0.0100683793	
0.0101667149	
0.0085872374	
0.0098095266	
0.0070905904	
0.0080684973	
0.0081965802	
0.0081454460	
0.0073573482	
0.0089062089	
0.0079617444	
0.0085003274	
0.0108369766	
0.0083820634	
0.0041729151	
0.0080696922	
0.0072371382	
0.0098372800	
0.0072815744	
0.0098193074	
0.0090106297	
0.0107773682	
0.0098131364	
0.0100172488	
0.0063690697	
0.0081898784	
0.0092985900	
0.0093382560	
0.0076781567	
0.0094991503	
0.0075956499	
0.0089427354	
0.0098926276	
0.0056656902	
0.0086402306	
0.0057273833	
0.0097553041	
0.0057117315	
0.0069094249	
0.0097386464	
0.0101422528	
0.0105392206	
0.0084282123	
0.0060518123	
0.0090799006	
0.0090921894	
Validating --> rn3_16.c1.c.c.y = BatchNormalization (rn3_16.c1.c.c.c, rn3_16.c1.c.c.sc, rn3_16.c1.c.c.b, rn3_16.c1.c.c.m, rn3_16.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.c1.y = RectifiedLinear (rn3_16.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.c2.c.c = Convolution (rn3_16.c2.W, rn3_16.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_16.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0381876044	
0.0428642370	
0.0383080952	
0.0503528789	
0.0402530394	
0.0328680985	
0.0346932150	
0.0381315909	
0.0483338684	
0.0377857499	
0.0335855633	
0.0448455513	
0.0396698974	
0.0362001285	
0.0389415212	
0.0313437395	
0.0445364490	
0.0417830609	
0.0364726931	
0.0403231345	
0.0350429751	
0.0346013792	
0.0376992710	
0.0399440676	
0.0301579107	
0.0448447019	
0.0346724838	
0.0440117121	
0.0420345478	
0.0374212638	
0.0449137352	
0.0450065844	
0.0427469499	
0.0384325199	
0.0322403051	
0.0463490561	
0.0315848738	
0.0470289141	
0.0321586430	
0.0354312994	
0.0322958454	
0.0425692461	
0.0252910927	
0.0383865833	
0.0294060986	
0.0336869135	
0.0361799039	
0.0316150673	
0.0341489501	
0.0372328237	
0.0296137948	
0.0302545559	
0.0383571833	
0.0454101488	
0.0407051146	
0.0322958678	
0.0380292684	
0.0296248980	
0.0346445180	
0.0277128723	
0.0428476669	
0.0439434759	
0.0398849770	
0.0371173583	
Validating --> rn3_16.c2.c.y = BatchNormalization (rn3_16.c2.c.c, rn3_16.c2.c.sc, rn3_16.c2.c.b, rn3_16.c2.c.m, rn3_16.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.p = Plus (rn3_16.c2.c.y, rn3_15.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.y = RectifiedLinear (rn3_16.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.c1.c.c.c = Convolution (rn3_17.c1.c.W, rn3_16.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_17.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0076777344	
0.0080739865	
0.0076090964	
0.0099209463	
0.0087244101	
0.0073277163	
0.0074857366	
0.0079697091	
0.0105437804	
0.0086724777	
0.0104431780	
0.0079823881	
0.0080014477	
0.0078874007	
0.0090143587	
0.0096450644	
0.0066827480	
0.0092534767	
0.0069894553	
0.0100680497	
0.0096603353	
0.0083211549	
0.0064218719	
0.0076125357	
0.0082405601	
0.0064888941	
0.0086099105	
0.0053312876	
0.0103965821	
0.0099824993	
0.0068411031	
0.0093959682	
0.0058620027	
0.0079835840	
0.0086287707	
0.0078689093	
0.0073553226	
0.0070667681	
0.0078061777	
0.0085885935	
0.0088216960	
0.0072125182	
0.0079554031	
0.0072568855	
0.0094357990	
0.0093016475	
0.0076803612	
0.0087772328	
0.0102497106	
0.0055555585	
0.0099325180	
0.0044394005	
0.0097017903	
0.0067295339	
0.0092980722	
0.0088699386	
0.0081374105	
0.0066789477	
0.0097388420	
0.0060874233	
0.0052305814	
0.0079361917	
0.0068227267	
0.0096537815	
Validating --> rn3_17.c1.c.c.y = BatchNormalization (rn3_17.c1.c.c.c, rn3_17.c1.c.c.sc, rn3_17.c1.c.c.b, rn3_17.c1.c.c.m, rn3_17.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.c1.y = RectifiedLinear (rn3_17.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.c2.c.c = Convolution (rn3_17.c2.W, rn3_17.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_17.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0299019534	
0.0319215097	
0.0260240436	
0.0404371507	
0.0444521420	
0.0377493165	
0.0325701348	
0.0407019258	
0.0321509577	
0.0409900434	
0.0418018661	
0.0428412408	
0.0438070968	
0.0269727129	
0.0374985449	
0.0332766324	
0.0279745832	
0.0443648472	
0.0436579622	
0.0415201113	
0.0415877253	
0.0358995534	
0.0341399014	
0.0349626429	
0.0455305763	
0.0401384048	
0.0373501703	
0.0412094221	
0.0407184400	
0.0424281545	
0.0415599830	
0.0306277703	
0.0356284119	
0.0418872386	
0.0445950814	
0.0360580273	
0.0387013666	
0.0387232043	
0.0422722884	
0.0333678685	
0.0418170504	
0.0414971821	
0.0443699360	
0.0390075594	
0.0394114330	
0.0390710235	
0.0323934443	
0.0430580676	
0.0407299809	
0.0417153947	
0.0333310068	
0.0362076387	
0.0384938344	
0.0420027152	
0.0286899954	
0.0372845083	
0.0423432998	
0.0352972895	
0.0420447215	
0.0419135205	
0.0445300601	
0.0408221856	
0.0387093946	
0.0473536178	
Validating --> rn3_17.c2.c.y = BatchNormalization (rn3_17.c2.c.c, rn3_17.c2.c.sc, rn3_17.c2.c.b, rn3_17.c2.c.m, rn3_17.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.p = Plus (rn3_17.c2.c.y, rn3_16.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.y = RectifiedLinear (rn3_17.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.c1.c.c.c = Convolution (rn3_18.c1.c.W, rn3_17.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c1.c.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_18.c1.c.c.y runInvStdDev after loading

###### (64, 1) ######

0.0085440548	
0.0079048369	
0.0086289123	
0.0091890991	
0.0076450277	
0.0081442380	
0.0072923135	
0.0084958626	
0.0091114268	
0.0095684780	
0.0056889174	
0.0083995694	
0.0050583021	
0.0085254228	
0.0092828320	
0.0083906511	
0.0096119065	
0.0059959730	
0.0072814100	
0.0068546627	
0.0083031347	
0.0073255380	
0.0072201379	
0.0085700965	
0.0060612205	
0.0089681316	
0.0089670923	
0.0060499618	
0.0073836846	
0.0081433086	
0.0087673580	
0.0079303710	
0.0077440511	
0.0095303357	
0.0078332182	
0.0085504698	
0.0084395837	
0.0096176062	
0.0086767599	
0.0041064932	
0.0089223962	
0.0068998383	
0.0085075740	
0.0066378820	
0.0053974669	
0.0092873303	
0.0061165821	
0.0093940916	
0.0062929764	
0.0089913215	
0.0092472462	
0.0072854068	
0.0095064314	
0.0078795981	
0.0080959518	
0.0098812440	
0.0080229519	
0.0073404913	
0.0091393376	
0.0088862050	
0.0044988971	
0.0066736471	
0.0093274452	
0.0076451660	
Validating --> rn3_18.c1.c.c.y = BatchNormalization (rn3_18.c1.c.c.c, rn3_18.c1.c.c.sc, rn3_18.c1.c.c.b, rn3_18.c1.c.c.m, rn3_18.c1.c.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.c1.y = RectifiedLinear (rn3_18.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.c2.c.c = Convolution (rn3_18.c2.W, rn3_18.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c2.c.isd = LearnableParameter() :  -> [64 x 1]
--- rn3_18.c2.c.y runInvStdDev after loading

###### (64, 1) ######

0.0298921335	
0.0440591536	
0.0416582115	
0.0364416540	
0.0388992056	
0.0309565775	
0.0400795862	
0.0370419845	
0.0482517220	
0.0407407247	
0.0411514752	
0.0329850279	
0.0393152535	
0.0421507731	
0.0425452329	
0.0387888551	
0.0421118215	
0.0349753276	
0.0301182810	
0.0311341416	
0.0373880491	
0.0393579565	
0.0374154896	
0.0357023291	
0.0379607640	
0.0426614843	
0.0401767753	
0.0414964706	
0.0372018740	
0.0411111265	
0.0273024235	
0.0241292417	
0.0250891149	
0.0325392485	
0.0406526774	
0.0300211832	
0.0380755588	
0.0404083766	
0.0322345756	
0.0366371460	
0.0416563377	
0.0421537459	
0.0412182435	
0.0385016277	
0.0332500637	
0.0268523451	
0.0384182110	
0.0356514677	
0.0405126102	
0.0402956530	
0.0453874506	
0.0274127051	
0.0408913866	
0.0411849283	
0.0430029333	
0.0354482457	
0.0375951082	
0.0418282710	
0.0425590239	
0.0427446552	
0.0390319824	
0.0418977737	
0.0338615887	
0.0393653326	
Validating --> rn3_18.c2.c.y = BatchNormalization (rn3_18.c2.c.c, rn3_18.c2.c.sc, rn3_18.c2.c.b, rn3_18.c2.c.m, rn3_18.c2.c.isd) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.p = Plus (rn3_18.c2.c.y, rn3_17.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.y = RectifiedLinear (rn3_18.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> pool = AveragePooling (rn3_18.y) : [8 x 8 x 64 x *1] -> [1 x 1 x 64 x *1]
Validating --> OutputNodes.t = Times (OutputNodes.W, pool) : [10 x 1 x 1 x 64], [1 x 1 x 64 x *1] -> [10 x *1]
Validating --> OutputNodes.b = LearnableParameter() :  -> [10]
Validating --> OutputNodes.z = Plus (OutputNodes.t, OutputNodes.b) : [10 x *1], [10] -> [10 x *1]
Validating --> CE = CrossEntropyWithSoftmax (labels, OutputNodes.z) : [10 x *1], [10 x *1] -> [1]
Validating --> Err = ErrorPrediction (labels, OutputNodes.z) : [10 x *1], [10 x *1] -> [1]

Validating network. 390 nodes to process in pass 2.


Validating network, final pass.


conv1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 3, Output: 32 x 32 x 16, Kernel: 3 x 3 x 3, Map: 1 x 1 x 16, Stride: 1 x 1 x 3, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_1.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_1.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_2.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_2.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_3.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_3.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_4.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_4.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_5.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_5.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_6.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_6.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_7.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_7.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_8.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_8.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_9.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_9.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_10.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_10.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_11.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_11.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_12.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_12.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_13.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_13.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_14.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_14.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_15.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_15.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_16.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_16.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_17.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_17.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_18.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn1_18.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_1.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 16 x 16 x 32, Kernel: 3 x 3 x 16, Map: 1 x 1 x 32, Stride: 2 x 2 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_1.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_1.c_proj.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 16 x 16 x 32, Kernel: 1 x 1 x 16, Map: 1 x 1 x 32, Stride: 2 x 2 x 16, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_2.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_2.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_3.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_3.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_4.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_4.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_5.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_5.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_6.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_6.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_7.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_7.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_8.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_8.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_9.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_9.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_10.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_10.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_11.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_11.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_12.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_12.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_13.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_13.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_14.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_14.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_15.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_15.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_16.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_16.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_17.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_17.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_18.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn2_18.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_1.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 8 x 8 x 64, Kernel: 3 x 3 x 32, Map: 1 x 1 x 64, Stride: 2 x 2 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_1.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_1.c_proj.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 8 x 8 x 64, Kernel: 1 x 1 x 32, Map: 1 x 1 x 64, Stride: 2 x 2 x 32, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_2.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_2.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_3.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_3.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_4.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_4.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_5.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_5.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_6.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_6.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_7.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_7.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_8.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_8.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_9.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_9.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_10.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_10.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_11.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_11.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_12.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_12.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_13.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_13.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_14.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_14.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_15.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_15.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_16.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_16.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_17.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_17.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_18.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

rn3_18.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.

Using CNTK batch normalization engine.

pool: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 1 x 1 x 64, Kernel: 8 x 8 x 1, Map: 1, Stride: 1 x 1 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.


559 out of 949 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 949 matrices, 0 are shared as 0, and 949 are not shared.


08/16/2016 12:15:52: Minibatch[1-200]: Err = 0.89781250 * 3200; CE = 2.30259530 * 3200
08/16/2016 12:15:59: Minibatch[201-400]: Err = 0.90156250 * 3200; CE = 2.30251517 * 3200
08/16/2016 12:16:06: Minibatch[401-600]: Err = 0.90000000 * 3200; CE = 2.30264245 * 3200
08/16/2016 12:16:07: Minibatch[601-625]: Err = 0.90500000 * 400; CE = 2.30291778 * 400
08/16/2016 12:16:07: Final Results: Minibatch[1-625]: Err = 0.90000000 * 10000; CE = 2.30259765 * 10000; perplexity = 10.00012553

08/16/2016 12:16:07: Action "test" complete.

08/16/2016 12:16:07: __COMPLETED__

***** VIDEOINPUT LIBRARY - 0.1995 - TFW07 *****

